(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const o of r.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Nc="162",Mf=0,bl=1,Sf=2,Ru=1,Tf=2,Qn=3,Ri=0,sn=1,He=2,Ti=0,Bs=1,wi=2,Al=3,Cl=4,wf=5,$i=100,Ef=101,bf=102,Rl=103,Pl=104,Af=200,Cf=201,Rf=202,Pf=203,uc=204,dc=205,Df=206,If=207,Nf=208,Lf=209,Of=210,Uf=211,Ff=212,kf=213,Bf=214,zf=0,Vf=1,Gf=2,Io=3,Hf=4,Wf=5,qf=6,Xf=7,Lc=0,Yf=1,jf=2,Ei=0,$f=1,Zf=2,Kf=3,Jf=4,Qf=5,tp=6,ep=7,Pu=300,Gs=301,Hs=302,fc=303,pc=304,ha=306,mc=1e3,Cn=1001,gc=1002,ke=1003,Dl=1004,pr=1005,tn=1006,Ra=1007,Ji=1008,bi=1009,np=1010,ip=1011,Oc=1012,Du=1013,Si=1014,Bn=1015,br=1016,Iu=1017,Nu=1018,ts=1020,sp=1021,Rn=1023,rp=1024,op=1025,es=1026,Ws=1027,Lu=1028,Ou=1029,ap=1030,Uu=1031,Fu=1033,Pa=33776,Da=33777,Ia=33778,Na=33779,Il=35840,Nl=35841,Ll=35842,Ol=35843,ku=36196,Ul=37492,Fl=37496,kl=37808,Bl=37809,zl=37810,Vl=37811,Gl=37812,Hl=37813,Wl=37814,ql=37815,Xl=37816,Yl=37817,jl=37818,$l=37819,Zl=37820,Kl=37821,La=36492,Jl=36494,Ql=36495,cp=36283,th=36284,eh=36285,nh=36286,lp=3200,hp=3201,Bu=0,up=1,Mi="",Fn="srgb",Oi="srgb-linear",Uc="display-p3",ua="display-p3-linear",No="linear",he="srgb",Lo="rec709",Oo="p3",ms=7680,ih=519,dp=512,fp=513,pp=514,zu=515,mp=516,gp=517,_p=518,vp=519,sh=35044,yp=35048,rh="300 es",_c=1035,ei=2e3,Uo=2001;class ir{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const s=n.slice(0);for(let r=0,o=s.length;r<o;r++)s[r].call(this,t);t.target=null}}}const Ve=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let oh=1234567;const Tr=Math.PI/180,qs=180/Math.PI;function sr(){const i=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ve[i&255]+Ve[i>>8&255]+Ve[i>>16&255]+Ve[i>>24&255]+"-"+Ve[t&255]+Ve[t>>8&255]+"-"+Ve[t>>16&15|64]+Ve[t>>24&255]+"-"+Ve[e&63|128]+Ve[e>>8&255]+"-"+Ve[e>>16&255]+Ve[e>>24&255]+Ve[n&255]+Ve[n>>8&255]+Ve[n>>16&255]+Ve[n>>24&255]).toLowerCase()}function Ze(i,t,e){return Math.max(t,Math.min(e,i))}function Fc(i,t){return(i%t+t)%t}function xp(i,t,e,n,s){return n+(i-t)*(s-n)/(e-t)}function Mp(i,t,e){return i!==t?(e-i)/(t-i):0}function wr(i,t,e){return(1-e)*i+e*t}function Sp(i,t,e,n){return wr(i,t,1-Math.exp(-e*n))}function Tp(i,t=1){return t-Math.abs(Fc(i,t*2)-t)}function wp(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*(3-2*i))}function Ep(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*i*(i*(i*6-15)+10))}function bp(i,t){return i+Math.floor(Math.random()*(t-i+1))}function Ap(i,t){return i+Math.random()*(t-i)}function Cp(i){return i*(.5-Math.random())}function Rp(i){i!==void 0&&(oh=i);let t=oh+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function Pp(i){return i*Tr}function Dp(i){return i*qs}function vc(i){return(i&i-1)===0&&i!==0}function Ip(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function Fo(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function Np(i,t,e,n,s){const r=Math.cos,o=Math.sin,a=r(e/2),c=o(e/2),l=r((t+n)/2),h=o((t+n)/2),u=r((t-n)/2),d=o((t-n)/2),m=r((n-t)/2),g=o((n-t)/2);switch(s){case"XYX":i.set(a*h,c*u,c*d,a*l);break;case"YZY":i.set(c*d,a*h,c*u,a*l);break;case"ZXZ":i.set(c*u,c*d,a*h,a*l);break;case"XZX":i.set(a*h,c*g,c*m,a*l);break;case"YXY":i.set(c*m,a*h,c*g,a*l);break;case"ZYZ":i.set(c*g,c*m,a*h,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function Ns(i,t){switch(t.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function je(i,t){switch(t.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const Oa={DEG2RAD:Tr,RAD2DEG:qs,generateUUID:sr,clamp:Ze,euclideanModulo:Fc,mapLinear:xp,inverseLerp:Mp,lerp:wr,damp:Sp,pingpong:Tp,smoothstep:wp,smootherstep:Ep,randInt:bp,randFloat:Ap,randFloatSpread:Cp,seededRandom:Rp,degToRad:Pp,radToDeg:Dp,isPowerOfTwo:vc,ceilPowerOfTwo:Ip,floorPowerOfTwo:Fo,setQuaternionFromProperEuler:Np,normalize:je,denormalize:Ns};class Ut{constructor(t=0,e=0){Ut.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6],this.y=s[1]*e+s[4]*n+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Ze(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),r=this.x-t.x,o=this.y-t.y;return this.x=r*n-o*s+t.x,this.y=r*s+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ht{constructor(t,e,n,s,r,o,a,c,l){Ht.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,s,r,o,a,c,l)}set(t,e,n,s,r,o,a,c,l){const h=this.elements;return h[0]=t,h[1]=s,h[2]=a,h[3]=e,h[4]=r,h[5]=c,h[6]=n,h[7]=o,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,o=n[0],a=n[3],c=n[6],l=n[1],h=n[4],u=n[7],d=n[2],m=n[5],g=n[8],_=s[0],p=s[3],f=s[6],x=s[1],y=s[4],S=s[7],M=s[2],T=s[5],w=s[8];return r[0]=o*_+a*x+c*M,r[3]=o*p+a*y+c*T,r[6]=o*f+a*S+c*w,r[1]=l*_+h*x+u*M,r[4]=l*p+h*y+u*T,r[7]=l*f+h*S+u*w,r[2]=d*_+m*x+g*M,r[5]=d*p+m*y+g*T,r[8]=d*f+m*S+g*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8];return e*o*h-e*a*l-n*r*h+n*a*c+s*r*l-s*o*c}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8],u=h*o-a*l,d=a*c-h*r,m=l*r-o*c,g=e*u+n*d+s*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/g;return t[0]=u*_,t[1]=(s*l-h*n)*_,t[2]=(a*n-s*o)*_,t[3]=d*_,t[4]=(h*e-s*c)*_,t[5]=(s*r-a*e)*_,t[6]=m*_,t[7]=(n*c-l*e)*_,t[8]=(o*e-n*r)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,s,r,o,a){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*o+l*a)+o+t,-s*l,s*c,-s*(-l*o+c*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Ua.makeScale(t,e)),this}rotate(t){return this.premultiply(Ua.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ua.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<9;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ua=new Ht;function Vu(i){for(let t=i.length-1;t>=0;--t)if(i[t]>=65535)return!0;return!1}function ko(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function Lp(){const i=ko("canvas");return i.style.display="block",i}const ah={};function Op(i){i in ah||(ah[i]=!0,console.warn(i))}const ch=new Ht().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),lh=new Ht().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),to={[Oi]:{transfer:No,primaries:Lo,toReference:i=>i,fromReference:i=>i},[Fn]:{transfer:he,primaries:Lo,toReference:i=>i.convertSRGBToLinear(),fromReference:i=>i.convertLinearToSRGB()},[ua]:{transfer:No,primaries:Oo,toReference:i=>i.applyMatrix3(lh),fromReference:i=>i.applyMatrix3(ch)},[Uc]:{transfer:he,primaries:Oo,toReference:i=>i.convertSRGBToLinear().applyMatrix3(lh),fromReference:i=>i.applyMatrix3(ch).convertLinearToSRGB()}},Up=new Set([Oi,ua]),ne={enabled:!0,_workingColorSpace:Oi,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(i){if(!Up.has(i))throw new Error(`Unsupported working color space, "${i}".`);this._workingColorSpace=i},convert:function(i,t,e){if(this.enabled===!1||t===e||!t||!e)return i;const n=to[t].toReference,s=to[e].fromReference;return s(n(i))},fromWorkingColorSpace:function(i,t){return this.convert(i,this._workingColorSpace,t)},toWorkingColorSpace:function(i,t){return this.convert(i,t,this._workingColorSpace)},getPrimaries:function(i){return to[i].primaries},getTransfer:function(i){return i===Mi?No:to[i].transfer}};function zs(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Fa(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let gs;class Gu{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{gs===void 0&&(gs=ko("canvas")),gs.width=t.width,gs.height=t.height;const n=gs.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=gs}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=ko("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const s=n.getImageData(0,0,t.width,t.height),r=s.data;for(let o=0;o<r.length;o++)r[o]=zs(r[o]/255)*255;return n.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(zs(e[n]/255)*255):e[n]=zs(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let Fp=0,Hu=class{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Fp++}),this.uuid=sr(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let o=0,a=s.length;o<a;o++)s[o].isDataTexture?r.push(ka(s[o].image)):r.push(ka(s[o]))}else r=ka(s);n.url=r}return e||(t.images[this.uuid]=n),n}};function ka(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Gu.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let kp=0;class We extends ir{constructor(t=We.DEFAULT_IMAGE,e=We.DEFAULT_MAPPING,n=Cn,s=Cn,r=tn,o=Ji,a=Rn,c=bi,l=We.DEFAULT_ANISOTROPY,h=Mi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:kp++}),this.uuid=sr(),this.name="",this.source=new Hu(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=c,this.offset=new Ut(0,0),this.repeat=new Ut(1,1),this.center=new Ut(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ht,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Pu)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case mc:t.x=t.x-Math.floor(t.x);break;case Cn:t.x=t.x<0?0:1;break;case gc:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case mc:t.y=t.y-Math.floor(t.y);break;case Cn:t.y=t.y<0?0:1;break;case gc:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}We.DEFAULT_IMAGE=null;We.DEFAULT_MAPPING=Pu;We.DEFAULT_ANISOTROPY=1;class ge{constructor(t=0,e=0,n=0,s=1){ge.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*s+o[12]*r,this.y=o[1]*e+o[5]*n+o[9]*s+o[13]*r,this.z=o[2]*e+o[6]*n+o[10]*s+o[14]*r,this.w=o[3]*e+o[7]*n+o[11]*s+o[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,s,r;const c=t.elements,l=c[0],h=c[4],u=c[8],d=c[1],m=c[5],g=c[9],_=c[2],p=c[6],f=c[10];if(Math.abs(h-d)<.01&&Math.abs(u-_)<.01&&Math.abs(g-p)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+_)<.1&&Math.abs(g+p)<.1&&Math.abs(l+m+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const y=(l+1)/2,S=(m+1)/2,M=(f+1)/2,T=(h+d)/4,w=(u+_)/4,A=(g+p)/4;return y>S&&y>M?y<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(y),s=T/n,r=w/n):S>M?S<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(S),n=T/s,r=A/s):M<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(M),n=w/r,s=A/r),this.set(n,s,r,e),this}let x=Math.sqrt((p-g)*(p-g)+(u-_)*(u-_)+(d-h)*(d-h));return Math.abs(x)<.001&&(x=1),this.x=(p-g)/x,this.y=(u-_)/x,this.z=(d-h)/x,this.w=Math.acos((l+m+f-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Bp extends ir{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new ge(0,0,t,e),this.scissorTest=!1,this.viewport=new ge(0,0,t,e);const s={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:tn,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const r=new We(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=r.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=t,this.textures[s].image.height=e,this.textures[s].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let n=0,s=t.textures.length;n<s;n++)this.textures[n]=t.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Hu(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class rs extends Bp{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Wu extends We{constructor(t=null,e=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=ke,this.minFilter=ke,this.wrapR=Cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class zp extends We{constructor(t=null,e=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=ke,this.minFilter=ke,this.wrapR=Cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class rr{constructor(t=0,e=0,n=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=s}static slerpFlat(t,e,n,s,r,o,a){let c=n[s+0],l=n[s+1],h=n[s+2],u=n[s+3];const d=r[o+0],m=r[o+1],g=r[o+2],_=r[o+3];if(a===0){t[e+0]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=m,t[e+2]=g,t[e+3]=_;return}if(u!==_||c!==d||l!==m||h!==g){let p=1-a;const f=c*d+l*m+h*g+u*_,x=f>=0?1:-1,y=1-f*f;if(y>Number.EPSILON){const M=Math.sqrt(y),T=Math.atan2(M,f*x);p=Math.sin(p*T)/M,a=Math.sin(a*T)/M}const S=a*x;if(c=c*p+d*S,l=l*p+m*S,h=h*p+g*S,u=u*p+_*S,p===1-a){const M=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=M,l*=M,h*=M,u*=M}}t[e]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,s,r,o){const a=n[s],c=n[s+1],l=n[s+2],h=n[s+3],u=r[o],d=r[o+1],m=r[o+2],g=r[o+3];return t[e]=a*g+h*u+c*m-l*d,t[e+1]=c*g+h*d+l*u-a*m,t[e+2]=l*g+h*m+a*d-c*u,t[e+3]=h*g-a*u-c*d-l*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,s){return this._x=t,this._y=e,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,s=t._y,r=t._z,o=t._order,a=Math.cos,c=Math.sin,l=a(n/2),h=a(s/2),u=a(r/2),d=c(n/2),m=c(s/2),g=c(r/2);switch(o){case"XYZ":this._x=d*h*u+l*m*g,this._y=l*m*u-d*h*g,this._z=l*h*g+d*m*u,this._w=l*h*u-d*m*g;break;case"YXZ":this._x=d*h*u+l*m*g,this._y=l*m*u-d*h*g,this._z=l*h*g-d*m*u,this._w=l*h*u+d*m*g;break;case"ZXY":this._x=d*h*u-l*m*g,this._y=l*m*u+d*h*g,this._z=l*h*g+d*m*u,this._w=l*h*u-d*m*g;break;case"ZYX":this._x=d*h*u-l*m*g,this._y=l*m*u+d*h*g,this._z=l*h*g-d*m*u,this._w=l*h*u+d*m*g;break;case"YZX":this._x=d*h*u+l*m*g,this._y=l*m*u+d*h*g,this._z=l*h*g-d*m*u,this._w=l*h*u-d*m*g;break;case"XZY":this._x=d*h*u-l*m*g,this._y=l*m*u-d*h*g,this._z=l*h*g+d*m*u,this._w=l*h*u+d*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],s=e[4],r=e[8],o=e[1],a=e[5],c=e[9],l=e[2],h=e[6],u=e[10],d=n+a+u;if(d>0){const m=.5/Math.sqrt(d+1);this._w=.25/m,this._x=(h-c)*m,this._y=(r-l)*m,this._z=(o-s)*m}else if(n>a&&n>u){const m=2*Math.sqrt(1+n-a-u);this._w=(h-c)/m,this._x=.25*m,this._y=(s+o)/m,this._z=(r+l)/m}else if(a>u){const m=2*Math.sqrt(1+a-n-u);this._w=(r-l)/m,this._x=(s+o)/m,this._y=.25*m,this._z=(c+h)/m}else{const m=2*Math.sqrt(1+u-n-a);this._w=(o-s)/m,this._x=(r+l)/m,this._y=(c+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ze(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const s=Math.min(1,e/n);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,s=t._y,r=t._z,o=t._w,a=e._x,c=e._y,l=e._z,h=e._w;return this._x=n*h+o*a+s*l-r*c,this._y=s*h+o*c+r*a-n*l,this._z=r*h+o*l+n*c-s*a,this._w=o*h-n*a-s*c-r*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,s=this._y,r=this._z,o=this._w;let a=o*t._w+n*t._x+s*t._y+r*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=s,this._z=r,this;const c=1-a*a;if(c<=Number.EPSILON){const m=1-e;return this._w=m*o+e*this._w,this._x=m*n+e*this._x,this._y=m*s+e*this._y,this._z=m*r+e*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,a),u=Math.sin((1-e)*h)/l,d=Math.sin(e*h)/l;return this._w=o*u+this._w*d,this._x=n*u+this._x*d,this._y=s*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(s*Math.sin(t),s*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class C{constructor(t=0,e=0,n=0){C.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(hh.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(hh.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*s,this.y=r[1]*e+r[4]*n+r[7]*s,this.z=r[2]*e+r[5]*n+r[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=t.elements,o=1/(r[3]*e+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*s+r[12])*o,this.y=(r[1]*e+r[5]*n+r[9]*s+r[13])*o,this.z=(r[2]*e+r[6]*n+r[10]*s+r[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,s=this.z,r=t.x,o=t.y,a=t.z,c=t.w,l=2*(o*s-a*n),h=2*(a*e-r*s),u=2*(r*n-o*e);return this.x=e+c*l+o*u-a*h,this.y=n+c*h+a*l-r*u,this.z=s+c*u+r*h-o*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*s,this.y=r[1]*e+r[5]*n+r[9]*s,this.z=r[2]*e+r[6]*n+r[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,s=t.y,r=t.z,o=e.x,a=e.y,c=e.z;return this.x=s*c-r*a,this.y=r*o-n*c,this.z=n*a-s*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Ba.copy(this).projectOnVector(t),this.sub(Ba)}reflect(t){return this.sub(Ba.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Ze(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,s=this.z-t.z;return e*e+n*n+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const s=Math.sin(e)*t;return this.x=s*Math.sin(n),this.y=Math.cos(e)*t,this.z=s*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ba=new C,hh=new rr;class gn{constructor(t=new C(1/0,1/0,1/0),e=new C(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(wn.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(wn.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=wn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const r=n.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=r.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,wn):wn.fromBufferAttribute(r,o),wn.applyMatrix4(t.matrixWorld),this.expandByPoint(wn);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),eo.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),eo.copy(n.boundingBox)),eo.applyMatrix4(t.matrixWorld),this.union(eo)}const s=t.children;for(let r=0,o=s.length;r<o;r++)this.expandByObject(s[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,wn),wn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(mr),no.subVectors(this.max,mr),_s.subVectors(t.a,mr),vs.subVectors(t.b,mr),ys.subVectors(t.c,mr),di.subVectors(vs,_s),fi.subVectors(ys,vs),Gi.subVectors(_s,ys);let e=[0,-di.z,di.y,0,-fi.z,fi.y,0,-Gi.z,Gi.y,di.z,0,-di.x,fi.z,0,-fi.x,Gi.z,0,-Gi.x,-di.y,di.x,0,-fi.y,fi.x,0,-Gi.y,Gi.x,0];return!za(e,_s,vs,ys,no)||(e=[1,0,0,0,1,0,0,0,1],!za(e,_s,vs,ys,no))?!1:(io.crossVectors(di,fi),e=[io.x,io.y,io.z],za(e,_s,vs,ys,no))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,wn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(wn).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Yn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Yn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Yn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Yn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Yn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Yn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Yn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Yn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Yn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Yn=[new C,new C,new C,new C,new C,new C,new C,new C],wn=new C,eo=new gn,_s=new C,vs=new C,ys=new C,di=new C,fi=new C,Gi=new C,mr=new C,no=new C,io=new C,Hi=new C;function za(i,t,e,n,s){for(let r=0,o=i.length-3;r<=o;r+=3){Hi.fromArray(i,r);const a=s.x*Math.abs(Hi.x)+s.y*Math.abs(Hi.y)+s.z*Math.abs(Hi.z),c=t.dot(Hi),l=e.dot(Hi),h=n.dot(Hi);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>a)return!1}return!0}const Vp=new gn,gr=new C,Va=new C;class un{constructor(t=new C,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):Vp.setFromPoints(t).getCenter(n);let s=0;for(let r=0,o=t.length;r<o;r++)s=Math.max(s,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;gr.subVectors(t,this.center);const e=gr.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),s=(n-this.radius)*.5;this.center.addScaledVector(gr,s/n),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Va.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(gr.copy(t.center).add(Va)),this.expandByPoint(gr.copy(t.center).sub(Va))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const jn=new C,Ga=new C,so=new C,pi=new C,Ha=new C,ro=new C,Wa=new C;class kc{constructor(t=new C,e=new C(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,jn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=jn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(jn.copy(this.origin).addScaledVector(this.direction,e),jn.distanceToSquared(t))}distanceSqToSegment(t,e,n,s){Ga.copy(t).add(e).multiplyScalar(.5),so.copy(e).sub(t).normalize(),pi.copy(this.origin).sub(Ga);const r=t.distanceTo(e)*.5,o=-this.direction.dot(so),a=pi.dot(this.direction),c=-pi.dot(so),l=pi.lengthSq(),h=Math.abs(1-o*o);let u,d,m,g;if(h>0)if(u=o*c-a,d=o*a-c,g=r*h,u>=0)if(d>=-g)if(d<=g){const _=1/h;u*=_,d*=_,m=u*(u+o*d+2*a)+d*(o*u+d+2*c)+l}else d=r,u=Math.max(0,-(o*d+a)),m=-u*u+d*(d+2*c)+l;else d=-r,u=Math.max(0,-(o*d+a)),m=-u*u+d*(d+2*c)+l;else d<=-g?(u=Math.max(0,-(-o*r+a)),d=u>0?-r:Math.min(Math.max(-r,-c),r),m=-u*u+d*(d+2*c)+l):d<=g?(u=0,d=Math.min(Math.max(-r,-c),r),m=d*(d+2*c)+l):(u=Math.max(0,-(o*r+a)),d=u>0?r:Math.min(Math.max(-r,-c),r),m=-u*u+d*(d+2*c)+l);else d=o>0?-r:r,u=Math.max(0,-(o*d+a)),m=-u*u+d*(d+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(Ga).addScaledVector(so,d),m}intersectSphere(t,e){jn.subVectors(t.center,this.origin);const n=jn.dot(this.direction),s=jn.dot(jn)-n*n,r=t.radius*t.radius;if(s>r)return null;const o=Math.sqrt(r-s),a=n-o,c=n+o;return c<0?null:a<0?this.at(c,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,s,r,o,a,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(n=(t.min.x-d.x)*l,s=(t.max.x-d.x)*l):(n=(t.max.x-d.x)*l,s=(t.min.x-d.x)*l),h>=0?(r=(t.min.y-d.y)*h,o=(t.max.y-d.y)*h):(r=(t.max.y-d.y)*h,o=(t.min.y-d.y)*h),n>o||r>s||((r>n||isNaN(n))&&(n=r),(o<s||isNaN(s))&&(s=o),u>=0?(a=(t.min.z-d.z)*u,c=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,c=(t.min.z-d.z)*u),n>c||a>s)||((a>n||n!==n)&&(n=a),(c<s||s!==s)&&(s=c),s<0)?null:this.at(n>=0?n:s,e)}intersectsBox(t){return this.intersectBox(t,jn)!==null}intersectTriangle(t,e,n,s,r){Ha.subVectors(e,t),ro.subVectors(n,t),Wa.crossVectors(Ha,ro);let o=this.direction.dot(Wa),a;if(o>0){if(s)return null;a=1}else if(o<0)a=-1,o=-o;else return null;pi.subVectors(this.origin,t);const c=a*this.direction.dot(ro.crossVectors(pi,ro));if(c<0)return null;const l=a*this.direction.dot(Ha.cross(pi));if(l<0||c+l>o)return null;const h=-a*pi.dot(Wa);return h<0?null:this.at(h/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class te{constructor(t,e,n,s,r,o,a,c,l,h,u,d,m,g,_,p){te.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,s,r,o,a,c,l,h,u,d,m,g,_,p)}set(t,e,n,s,r,o,a,c,l,h,u,d,m,g,_,p){const f=this.elements;return f[0]=t,f[4]=e,f[8]=n,f[12]=s,f[1]=r,f[5]=o,f[9]=a,f[13]=c,f[2]=l,f[6]=h,f[10]=u,f[14]=d,f[3]=m,f[7]=g,f[11]=_,f[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new te().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,s=1/xs.setFromMatrixColumn(t,0).length(),r=1/xs.setFromMatrixColumn(t,1).length(),o=1/xs.setFromMatrixColumn(t,2).length();return e[0]=n[0]*s,e[1]=n[1]*s,e[2]=n[2]*s,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,s=t.y,r=t.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(s),l=Math.sin(s),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const d=o*h,m=o*u,g=a*h,_=a*u;e[0]=c*h,e[4]=-c*u,e[8]=l,e[1]=m+g*l,e[5]=d-_*l,e[9]=-a*c,e[2]=_-d*l,e[6]=g+m*l,e[10]=o*c}else if(t.order==="YXZ"){const d=c*h,m=c*u,g=l*h,_=l*u;e[0]=d+_*a,e[4]=g*a-m,e[8]=o*l,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=m*a-g,e[6]=_+d*a,e[10]=o*c}else if(t.order==="ZXY"){const d=c*h,m=c*u,g=l*h,_=l*u;e[0]=d-_*a,e[4]=-o*u,e[8]=g+m*a,e[1]=m+g*a,e[5]=o*h,e[9]=_-d*a,e[2]=-o*l,e[6]=a,e[10]=o*c}else if(t.order==="ZYX"){const d=o*h,m=o*u,g=a*h,_=a*u;e[0]=c*h,e[4]=g*l-m,e[8]=d*l+_,e[1]=c*u,e[5]=_*l+d,e[9]=m*l-g,e[2]=-l,e[6]=a*c,e[10]=o*c}else if(t.order==="YZX"){const d=o*c,m=o*l,g=a*c,_=a*l;e[0]=c*h,e[4]=_-d*u,e[8]=g*u+m,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-l*h,e[6]=m*u+g,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*c,m=o*l,g=a*c,_=a*l;e[0]=c*h,e[4]=-u,e[8]=l*h,e[1]=d*u+_,e[5]=o*h,e[9]=m*u-g,e[2]=g*u-m,e[6]=a*h,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Gp,t,Hp)}lookAt(t,e,n){const s=this.elements;return ln.subVectors(t,e),ln.lengthSq()===0&&(ln.z=1),ln.normalize(),mi.crossVectors(n,ln),mi.lengthSq()===0&&(Math.abs(n.z)===1?ln.x+=1e-4:ln.z+=1e-4,ln.normalize(),mi.crossVectors(n,ln)),mi.normalize(),oo.crossVectors(ln,mi),s[0]=mi.x,s[4]=oo.x,s[8]=ln.x,s[1]=mi.y,s[5]=oo.y,s[9]=ln.y,s[2]=mi.z,s[6]=oo.z,s[10]=ln.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,o=n[0],a=n[4],c=n[8],l=n[12],h=n[1],u=n[5],d=n[9],m=n[13],g=n[2],_=n[6],p=n[10],f=n[14],x=n[3],y=n[7],S=n[11],M=n[15],T=s[0],w=s[4],A=s[8],N=s[12],v=s[1],b=s[5],I=s[9],F=s[13],D=s[2],U=s[6],L=s[10],V=s[14],z=s[3],G=s[7],X=s[11],K=s[15];return r[0]=o*T+a*v+c*D+l*z,r[4]=o*w+a*b+c*U+l*G,r[8]=o*A+a*I+c*L+l*X,r[12]=o*N+a*F+c*V+l*K,r[1]=h*T+u*v+d*D+m*z,r[5]=h*w+u*b+d*U+m*G,r[9]=h*A+u*I+d*L+m*X,r[13]=h*N+u*F+d*V+m*K,r[2]=g*T+_*v+p*D+f*z,r[6]=g*w+_*b+p*U+f*G,r[10]=g*A+_*I+p*L+f*X,r[14]=g*N+_*F+p*V+f*K,r[3]=x*T+y*v+S*D+M*z,r[7]=x*w+y*b+S*U+M*G,r[11]=x*A+y*I+S*L+M*X,r[15]=x*N+y*F+S*V+M*K,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],s=t[8],r=t[12],o=t[1],a=t[5],c=t[9],l=t[13],h=t[2],u=t[6],d=t[10],m=t[14],g=t[3],_=t[7],p=t[11],f=t[15];return g*(+r*c*u-s*l*u-r*a*d+n*l*d+s*a*m-n*c*m)+_*(+e*c*m-e*l*d+r*o*d-s*o*m+s*l*h-r*c*h)+p*(+e*l*u-e*a*m-r*o*u+n*o*m+r*a*h-n*l*h)+f*(-s*a*h-e*c*u+e*a*d+s*o*u-n*o*d+n*c*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],o=t[4],a=t[5],c=t[6],l=t[7],h=t[8],u=t[9],d=t[10],m=t[11],g=t[12],_=t[13],p=t[14],f=t[15],x=u*p*l-_*d*l+_*c*m-a*p*m-u*c*f+a*d*f,y=g*d*l-h*p*l-g*c*m+o*p*m+h*c*f-o*d*f,S=h*_*l-g*u*l+g*a*m-o*_*m-h*a*f+o*u*f,M=g*u*c-h*_*c-g*a*d+o*_*d+h*a*p-o*u*p,T=e*x+n*y+s*S+r*M;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/T;return t[0]=x*w,t[1]=(_*d*r-u*p*r-_*s*m+n*p*m+u*s*f-n*d*f)*w,t[2]=(a*p*r-_*c*r+_*s*l-n*p*l-a*s*f+n*c*f)*w,t[3]=(u*c*r-a*d*r-u*s*l+n*d*l+a*s*m-n*c*m)*w,t[4]=y*w,t[5]=(h*p*r-g*d*r+g*s*m-e*p*m-h*s*f+e*d*f)*w,t[6]=(g*c*r-o*p*r-g*s*l+e*p*l+o*s*f-e*c*f)*w,t[7]=(o*d*r-h*c*r+h*s*l-e*d*l-o*s*m+e*c*m)*w,t[8]=S*w,t[9]=(g*u*r-h*_*r-g*n*m+e*_*m+h*n*f-e*u*f)*w,t[10]=(o*_*r-g*a*r+g*n*l-e*_*l-o*n*f+e*a*f)*w,t[11]=(h*a*r-o*u*r-h*n*l+e*u*l+o*n*m-e*a*m)*w,t[12]=M*w,t[13]=(h*_*s-g*u*s+g*n*d-e*_*d-h*n*p+e*u*p)*w,t[14]=(g*a*s-o*_*s-g*n*c+e*_*c+o*n*p-e*a*p)*w,t[15]=(o*u*s-h*a*s+h*n*c-e*u*c-o*n*d+e*a*d)*w,this}scale(t){const e=this.elements,n=t.x,s=t.y,r=t.z;return e[0]*=n,e[4]*=s,e[8]*=r,e[1]*=n,e[5]*=s,e[9]*=r,e[2]*=n,e[6]*=s,e[10]*=r,e[3]*=n,e[7]*=s,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,s))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),r=1-n,o=t.x,a=t.y,c=t.z,l=r*o,h=r*a;return this.set(l*o+n,l*a-s*c,l*c+s*a,0,l*a+s*c,h*a+n,h*c-s*o,0,l*c-s*a,h*c+s*o,r*c*c+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,s,r,o){return this.set(1,n,r,0,t,1,o,0,e,s,1,0,0,0,0,1),this}compose(t,e,n){const s=this.elements,r=e._x,o=e._y,a=e._z,c=e._w,l=r+r,h=o+o,u=a+a,d=r*l,m=r*h,g=r*u,_=o*h,p=o*u,f=a*u,x=c*l,y=c*h,S=c*u,M=n.x,T=n.y,w=n.z;return s[0]=(1-(_+f))*M,s[1]=(m+S)*M,s[2]=(g-y)*M,s[3]=0,s[4]=(m-S)*T,s[5]=(1-(d+f))*T,s[6]=(p+x)*T,s[7]=0,s[8]=(g+y)*w,s[9]=(p-x)*w,s[10]=(1-(d+_))*w,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,n){const s=this.elements;let r=xs.set(s[0],s[1],s[2]).length();const o=xs.set(s[4],s[5],s[6]).length(),a=xs.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),t.x=s[12],t.y=s[13],t.z=s[14],En.copy(this);const l=1/r,h=1/o,u=1/a;return En.elements[0]*=l,En.elements[1]*=l,En.elements[2]*=l,En.elements[4]*=h,En.elements[5]*=h,En.elements[6]*=h,En.elements[8]*=u,En.elements[9]*=u,En.elements[10]*=u,e.setFromRotationMatrix(En),n.x=r,n.y=o,n.z=a,this}makePerspective(t,e,n,s,r,o,a=ei){const c=this.elements,l=2*r/(e-t),h=2*r/(n-s),u=(e+t)/(e-t),d=(n+s)/(n-s);let m,g;if(a===ei)m=-(o+r)/(o-r),g=-2*o*r/(o-r);else if(a===Uo)m=-o/(o-r),g=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=l,c[4]=0,c[8]=u,c[12]=0,c[1]=0,c[5]=h,c[9]=d,c[13]=0,c[2]=0,c[6]=0,c[10]=m,c[14]=g,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,s,r,o,a=ei){const c=this.elements,l=1/(e-t),h=1/(n-s),u=1/(o-r),d=(e+t)*l,m=(n+s)*h;let g,_;if(a===ei)g=(o+r)*u,_=-2*u;else if(a===Uo)g=r*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-d,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-m,c[2]=0,c[6]=0,c[10]=_,c[14]=-g,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<16;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const xs=new C,En=new te,Gp=new C(0,0,0),Hp=new C(1,1,1),mi=new C,oo=new C,ln=new C,uh=new te,dh=new rr;class _n{constructor(t=0,e=0,n=0,s=_n.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,s=this._order){return this._x=t,this._y=e,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const s=t.elements,r=s[0],o=s[4],a=s[8],c=s[1],l=s[5],h=s[9],u=s[2],d=s[6],m=s[10];switch(e){case"XYZ":this._y=Math.asin(Ze(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,m),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Ze(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(Ze(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-Ze(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(Ze(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-Ze(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-h,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return uh.makeRotationFromQuaternion(t),this.setFromRotationMatrix(uh,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return dh.setFromEuler(this),this.setFromQuaternion(dh,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}_n.DEFAULT_ORDER="XYZ";class Bc{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let Wp=0;const fh=new C,Ms=new rr,$n=new te,ao=new C,_r=new C,qp=new C,Xp=new rr,ph=new C(1,0,0),mh=new C(0,1,0),gh=new C(0,0,1),Yp={type:"added"},jp={type:"removed"},qa={type:"childadded",child:null},Xa={type:"childremoved",child:null};class Pe extends ir{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Wp++}),this.uuid=sr(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Pe.DEFAULT_UP.clone();const t=new C,e=new _n,n=new rr,s=new C(1,1,1);function r(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new te},normalMatrix:{value:new Ht}}),this.matrix=new te,this.matrixWorld=new te,this.matrixAutoUpdate=Pe.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Pe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Bc,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Ms.setFromAxisAngle(t,e),this.quaternion.multiply(Ms),this}rotateOnWorldAxis(t,e){return Ms.setFromAxisAngle(t,e),this.quaternion.premultiply(Ms),this}rotateX(t){return this.rotateOnAxis(ph,t)}rotateY(t){return this.rotateOnAxis(mh,t)}rotateZ(t){return this.rotateOnAxis(gh,t)}translateOnAxis(t,e){return fh.copy(t).applyQuaternion(this.quaternion),this.position.add(fh.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ph,t)}translateY(t){return this.translateOnAxis(mh,t)}translateZ(t){return this.translateOnAxis(gh,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4($n.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?ao.copy(t):ao.set(t,e,n);const s=this.parent;this.updateWorldMatrix(!0,!1),_r.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$n.lookAt(_r,ao,this.up):$n.lookAt(ao,_r,this.up),this.quaternion.setFromRotationMatrix($n),s&&($n.extractRotation(s.matrixWorld),Ms.setFromRotationMatrix($n),this.quaternion.premultiply(Ms.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(Yp),qa.child=t,this.dispatchEvent(qa),qa.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(jp),Xa.child=t,this.dispatchEvent(Xa),Xa.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),$n.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),$n.multiply(t.parent.matrixWorld)),t.applyMatrix4($n),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,s=this.children.length;n<s;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const s=this.children;for(let r=0,o=s.length;r<o;r++)s[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_r,t,qp),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_r,Xp,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,s=e.length;n<s;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let r=0,o=s.length;r<o;r++){const a=s[r];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),s.maxGeometryCount=this._maxGeometryCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function r(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(t)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(t.shapes,u)}else r(t.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,l=this.material.length;c<l;c++)a.push(r(t.materials,this.material[c]));s.material=a}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let a=0;a<this.children.length;a++)s.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];s.animations.push(r(t.animations,c))}}if(e){const a=o(t.geometries),c=o(t.materials),l=o(t.textures),h=o(t.images),u=o(t.shapes),d=o(t.skeletons),m=o(t.animations),g=o(t.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),m.length>0&&(n.animations=m),g.length>0&&(n.nodes=g)}return n.object=s,n;function o(a){const c=[];for(const l in a){const h=a[l];delete h.metadata,c.push(h)}return c}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const s=t.children[n];this.add(s.clone())}return this}}Pe.DEFAULT_UP=new C(0,1,0);Pe.DEFAULT_MATRIX_AUTO_UPDATE=!0;Pe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const bn=new C,Zn=new C,Ya=new C,Kn=new C,Ss=new C,Ts=new C,_h=new C,ja=new C,$a=new C,Za=new C;class zn{constructor(t=new C,e=new C,n=new C){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,s){s.subVectors(n,e),bn.subVectors(t,e),s.cross(bn);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,e,n,s,r){bn.subVectors(s,e),Zn.subVectors(n,e),Ya.subVectors(t,e);const o=bn.dot(bn),a=bn.dot(Zn),c=bn.dot(Ya),l=Zn.dot(Zn),h=Zn.dot(Ya),u=o*l-a*a;if(u===0)return r.set(0,0,0),null;const d=1/u,m=(l*c-a*h)*d,g=(o*h-a*c)*d;return r.set(1-m-g,g,m)}static containsPoint(t,e,n,s){return this.getBarycoord(t,e,n,s,Kn)===null?!1:Kn.x>=0&&Kn.y>=0&&Kn.x+Kn.y<=1}static getInterpolation(t,e,n,s,r,o,a,c){return this.getBarycoord(t,e,n,s,Kn)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Kn.x),c.addScaledVector(o,Kn.y),c.addScaledVector(a,Kn.z),c)}static isFrontFacing(t,e,n,s){return bn.subVectors(n,e),Zn.subVectors(t,e),bn.cross(Zn).dot(s)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,s){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,n,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return bn.subVectors(this.c,this.b),Zn.subVectors(this.a,this.b),bn.cross(Zn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return zn.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return zn.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,s,r){return zn.getInterpolation(t,this.a,this.b,this.c,e,n,s,r)}containsPoint(t){return zn.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return zn.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,s=this.b,r=this.c;let o,a;Ss.subVectors(s,n),Ts.subVectors(r,n),ja.subVectors(t,n);const c=Ss.dot(ja),l=Ts.dot(ja);if(c<=0&&l<=0)return e.copy(n);$a.subVectors(t,s);const h=Ss.dot($a),u=Ts.dot($a);if(h>=0&&u<=h)return e.copy(s);const d=c*u-h*l;if(d<=0&&c>=0&&h<=0)return o=c/(c-h),e.copy(n).addScaledVector(Ss,o);Za.subVectors(t,r);const m=Ss.dot(Za),g=Ts.dot(Za);if(g>=0&&m<=g)return e.copy(r);const _=m*l-c*g;if(_<=0&&l>=0&&g<=0)return a=l/(l-g),e.copy(n).addScaledVector(Ts,a);const p=h*g-m*u;if(p<=0&&u-h>=0&&m-g>=0)return _h.subVectors(r,s),a=(u-h)/(u-h+(m-g)),e.copy(s).addScaledVector(_h,a);const f=1/(p+_+d);return o=_*f,a=d*f,e.copy(n).addScaledVector(Ss,o).addScaledVector(Ts,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const qu={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},gi={h:0,s:0,l:0},co={h:0,s:0,l:0};function Ka(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*6*(2/3-e):i}class Kt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Fn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,ne.toWorkingColorSpace(this,e),this}setRGB(t,e,n,s=ne.workingColorSpace){return this.r=t,this.g=e,this.b=n,ne.toWorkingColorSpace(this,s),this}setHSL(t,e,n,s=ne.workingColorSpace){if(t=Fc(t,1),e=Ze(e,0,1),n=Ze(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,o=2*n-r;this.r=Ka(o,r,t+1/3),this.g=Ka(o,r,t),this.b=Ka(o,r,t-1/3)}return ne.toWorkingColorSpace(this,s),this}setStyle(t,e=Fn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const o=s[1],a=s[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Fn){const n=qu[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=zs(t.r),this.g=zs(t.g),this.b=zs(t.b),this}copyLinearToSRGB(t){return this.r=Fa(t.r),this.g=Fa(t.g),this.b=Fa(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Fn){return ne.fromWorkingColorSpace(Ge.copy(this),t),Math.round(Ze(Ge.r*255,0,255))*65536+Math.round(Ze(Ge.g*255,0,255))*256+Math.round(Ze(Ge.b*255,0,255))}getHexString(t=Fn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=ne.workingColorSpace){ne.fromWorkingColorSpace(Ge.copy(this),e);const n=Ge.r,s=Ge.g,r=Ge.b,o=Math.max(n,s,r),a=Math.min(n,s,r);let c,l;const h=(a+o)/2;if(a===o)c=0,l=0;else{const u=o-a;switch(l=h<=.5?u/(o+a):u/(2-o-a),o){case n:c=(s-r)/u+(s<r?6:0);break;case s:c=(r-n)/u+2;break;case r:c=(n-s)/u+4;break}c/=6}return t.h=c,t.s=l,t.l=h,t}getRGB(t,e=ne.workingColorSpace){return ne.fromWorkingColorSpace(Ge.copy(this),e),t.r=Ge.r,t.g=Ge.g,t.b=Ge.b,t}getStyle(t=Fn){ne.fromWorkingColorSpace(Ge.copy(this),t);const e=Ge.r,n=Ge.g,s=Ge.b;return t!==Fn?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(t,e,n){return this.getHSL(gi),this.setHSL(gi.h+t,gi.s+e,gi.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(gi),t.getHSL(co);const n=wr(gi.h,co.h,e),s=wr(gi.s,co.s,e),r=wr(gi.l,co.l,e);return this.setHSL(n,s,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,s=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*s,this.g=r[1]*e+r[4]*n+r[7]*s,this.b=r[2]*e+r[5]*n+r[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Ge=new Kt;Kt.NAMES=qu;let $p=0;class or extends ir{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:$p++}),this.uuid=sr(),this.name="",this.type="Material",this.blending=Bs,this.side=Ri,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=uc,this.blendDst=dc,this.blendEquation=$i,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Kt(0,0,0),this.blendAlpha=0,this.depthFunc=Io,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=ih,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ms,this.stencilZFail=ms,this.stencilZPass=ms,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Bs&&(n.blending=this.blending),this.side!==Ri&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==uc&&(n.blendSrc=this.blendSrc),this.blendDst!==dc&&(n.blendDst=this.blendDst),this.blendEquation!==$i&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Io&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==ih&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ms&&(n.stencilFail=this.stencilFail),this.stencilZFail!==ms&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==ms&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const o=[];for(const a in r){const c=r[a];delete c.metadata,o.push(c)}return o}if(e){const r=s(t.textures),o=s(t.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const s=e.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Lt extends or{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Kt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new _n,this.combine=Lc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Ce=new C,lo=new Ut;class mn{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=sh,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Bn,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return Op("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[t+s]=e.array[n+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)lo.fromBufferAttribute(this,e),lo.applyMatrix3(t),this.setXY(e,lo.x,lo.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Ce.fromBufferAttribute(this,e),Ce.applyMatrix3(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Ce.fromBufferAttribute(this,e),Ce.applyMatrix4(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ce.fromBufferAttribute(this,e),Ce.applyNormalMatrix(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ce.fromBufferAttribute(this,e),Ce.transformDirection(t),this.setXYZ(e,Ce.x,Ce.y,Ce.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Ns(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=je(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Ns(e,this.array)),e}setX(t,e){return this.normalized&&(e=je(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Ns(e,this.array)),e}setY(t,e){return this.normalized&&(e=je(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Ns(e,this.array)),e}setZ(t,e){return this.normalized&&(e=je(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Ns(e,this.array)),e}setW(t,e){return this.normalized&&(e=je(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=je(e,this.array),n=je(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,s){return t*=this.itemSize,this.normalized&&(e=je(e,this.array),n=je(n,this.array),s=je(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this}setXYZW(t,e,n,s,r){return t*=this.itemSize,this.normalized&&(e=je(e,this.array),n=je(n,this.array),s=je(s,this.array),r=je(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==sh&&(t.usage=this.usage),t}}class Xu extends mn{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class Yu extends mn{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Me extends mn{constructor(t,e,n){super(new Float32Array(t),e,n)}}let Zp=0;const xn=new te,Ja=new Pe,ws=new C,hn=new gn,vr=new gn,Oe=new C;class an extends ir{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Zp++}),this.uuid=sr(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Vu(t)?Yu:Xu)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Ht().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return xn.makeRotationFromQuaternion(t),this.applyMatrix4(xn),this}rotateX(t){return xn.makeRotationX(t),this.applyMatrix4(xn),this}rotateY(t){return xn.makeRotationY(t),this.applyMatrix4(xn),this}rotateZ(t){return xn.makeRotationZ(t),this.applyMatrix4(xn),this}translate(t,e,n){return xn.makeTranslation(t,e,n),this.applyMatrix4(xn),this}scale(t,e,n){return xn.makeScale(t,e,n),this.applyMatrix4(xn),this}lookAt(t){return Ja.lookAt(t),Ja.updateMatrix(),this.applyMatrix4(Ja.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ws).negate(),this.translate(ws.x,ws.y,ws.z),this}setFromPoints(t){const e=[];for(let n=0,s=t.length;n<s;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Me(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new gn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,s=e.length;n<s;n++){const r=e[n];hn.setFromBufferAttribute(r),this.morphTargetsRelative?(Oe.addVectors(this.boundingBox.min,hn.min),this.boundingBox.expandByPoint(Oe),Oe.addVectors(this.boundingBox.max,hn.max),this.boundingBox.expandByPoint(Oe)):(this.boundingBox.expandByPoint(hn.min),this.boundingBox.expandByPoint(hn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new un);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new C,1/0);return}if(t){const n=this.boundingSphere.center;if(hn.setFromBufferAttribute(t),e)for(let r=0,o=e.length;r<o;r++){const a=e[r];vr.setFromBufferAttribute(a),this.morphTargetsRelative?(Oe.addVectors(hn.min,vr.min),hn.expandByPoint(Oe),Oe.addVectors(hn.max,vr.max),hn.expandByPoint(Oe)):(hn.expandByPoint(vr.min),hn.expandByPoint(vr.max))}hn.getCenter(n);let s=0;for(let r=0,o=t.count;r<o;r++)Oe.fromBufferAttribute(t,r),s=Math.max(s,n.distanceToSquared(Oe));if(e)for(let r=0,o=e.length;r<o;r++){const a=e[r],c=this.morphTargetsRelative;for(let l=0,h=a.count;l<h;l++)Oe.fromBufferAttribute(a,l),c&&(ws.fromBufferAttribute(t,l),Oe.add(ws)),s=Math.max(s,n.distanceToSquared(Oe))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,s=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new mn(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],c=[];for(let A=0;A<n.count;A++)a[A]=new C,c[A]=new C;const l=new C,h=new C,u=new C,d=new Ut,m=new Ut,g=new Ut,_=new C,p=new C;function f(A,N,v){l.fromBufferAttribute(n,A),h.fromBufferAttribute(n,N),u.fromBufferAttribute(n,v),d.fromBufferAttribute(r,A),m.fromBufferAttribute(r,N),g.fromBufferAttribute(r,v),h.sub(l),u.sub(l),m.sub(d),g.sub(d);const b=1/(m.x*g.y-g.x*m.y);isFinite(b)&&(_.copy(h).multiplyScalar(g.y).addScaledVector(u,-m.y).multiplyScalar(b),p.copy(u).multiplyScalar(m.x).addScaledVector(h,-g.x).multiplyScalar(b),a[A].add(_),a[N].add(_),a[v].add(_),c[A].add(p),c[N].add(p),c[v].add(p))}let x=this.groups;x.length===0&&(x=[{start:0,count:t.count}]);for(let A=0,N=x.length;A<N;++A){const v=x[A],b=v.start,I=v.count;for(let F=b,D=b+I;F<D;F+=3)f(t.getX(F+0),t.getX(F+1),t.getX(F+2))}const y=new C,S=new C,M=new C,T=new C;function w(A){M.fromBufferAttribute(s,A),T.copy(M);const N=a[A];y.copy(N),y.sub(M.multiplyScalar(M.dot(N))).normalize(),S.crossVectors(T,N);const b=S.dot(c[A])<0?-1:1;o.setXYZW(A,y.x,y.y,y.z,b)}for(let A=0,N=x.length;A<N;++A){const v=x[A],b=v.start,I=v.count;for(let F=b,D=b+I;F<D;F+=3)w(t.getX(F+0)),w(t.getX(F+1)),w(t.getX(F+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new mn(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,m=n.count;d<m;d++)n.setXYZ(d,0,0,0);const s=new C,r=new C,o=new C,a=new C,c=new C,l=new C,h=new C,u=new C;if(t)for(let d=0,m=t.count;d<m;d+=3){const g=t.getX(d+0),_=t.getX(d+1),p=t.getX(d+2);s.fromBufferAttribute(e,g),r.fromBufferAttribute(e,_),o.fromBufferAttribute(e,p),h.subVectors(o,r),u.subVectors(s,r),h.cross(u),a.fromBufferAttribute(n,g),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,p),a.add(h),c.add(h),l.add(h),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(p,l.x,l.y,l.z)}else for(let d=0,m=e.count;d<m;d+=3)s.fromBufferAttribute(e,d+0),r.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),h.subVectors(o,r),u.subVectors(s,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Oe.fromBufferAttribute(t,e),Oe.normalize(),t.setXYZ(e,Oe.x,Oe.y,Oe.z)}toNonIndexed(){function t(a,c){const l=a.array,h=a.itemSize,u=a.normalized,d=new l.constructor(c.length*h);let m=0,g=0;for(let _=0,p=c.length;_<p;_++){a.isInterleavedBufferAttribute?m=c[_]*a.data.stride+a.offset:m=c[_]*h;for(let f=0;f<h;f++)d[g++]=l[m++]}return new mn(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new an,n=this.index.array,s=this.attributes;for(const a in s){const c=s[a],l=t(c,n);e.setAttribute(a,l)}const r=this.morphAttributes;for(const a in r){const c=[],l=r[a];for(let h=0,u=l.length;h<u;h++){const d=l[h],m=t(d,n);c.push(m)}e.morphAttributes[a]=c}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const l=o[a];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(t[l]=c[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const c in n){const l=n[c];t.data.attributes[c]=l.toJSON(t.data)}const s={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,d=l.length;u<d;u++){const m=l[u];h.push(m.toJSON(t.data))}h.length>0&&(s[c]=h,r=!0)}r&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const s=t.attributes;for(const l in s){const h=s[l];this.setAttribute(l,h.clone(e))}const r=t.morphAttributes;for(const l in r){const h=[],u=r[l];for(let d=0,m=u.length;d<m;d++)h.push(u[d].clone(e));this.morphAttributes[l]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let l=0,h=o.length;l<h;l++){const u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=t.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const vh=new te,Wi=new kc,ho=new un,yh=new C,Es=new C,bs=new C,As=new C,Qa=new C,uo=new C,fo=new Ut,po=new Ut,mo=new Ut,xh=new C,Mh=new C,Sh=new C,go=new C,_o=new C;class bt extends Pe{constructor(t=new an,e=new Lt){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}getVertexPosition(t,e){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(s,t);const a=this.morphTargetInfluences;if(r&&a){uo.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=a[c],u=r[c];h!==0&&(Qa.fromBufferAttribute(u,t),o?uo.addScaledVector(Qa,h):uo.addScaledVector(Qa.sub(e),h))}e.add(uo)}return e}raycast(t,e){const n=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ho.copy(n.boundingSphere),ho.applyMatrix4(r),Wi.copy(t.ray).recast(t.near),!(ho.containsPoint(Wi.origin)===!1&&(Wi.intersectSphere(ho,yh)===null||Wi.origin.distanceToSquared(yh)>(t.far-t.near)**2))&&(vh.copy(r).invert(),Wi.copy(t.ray).applyMatrix4(vh),!(n.boundingBox!==null&&Wi.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Wi)))}_computeIntersections(t,e,n){let s;const r=this.geometry,o=this.material,a=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,d=r.groups,m=r.drawRange;if(a!==null)if(Array.isArray(o))for(let g=0,_=d.length;g<_;g++){const p=d[g],f=o[p.materialIndex],x=Math.max(p.start,m.start),y=Math.min(a.count,Math.min(p.start+p.count,m.start+m.count));for(let S=x,M=y;S<M;S+=3){const T=a.getX(S),w=a.getX(S+1),A=a.getX(S+2);s=vo(this,f,t,n,l,h,u,T,w,A),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{const g=Math.max(0,m.start),_=Math.min(a.count,m.start+m.count);for(let p=g,f=_;p<f;p+=3){const x=a.getX(p),y=a.getX(p+1),S=a.getX(p+2);s=vo(this,o,t,n,l,h,u,x,y,S),s&&(s.faceIndex=Math.floor(p/3),e.push(s))}}else if(c!==void 0)if(Array.isArray(o))for(let g=0,_=d.length;g<_;g++){const p=d[g],f=o[p.materialIndex],x=Math.max(p.start,m.start),y=Math.min(c.count,Math.min(p.start+p.count,m.start+m.count));for(let S=x,M=y;S<M;S+=3){const T=S,w=S+1,A=S+2;s=vo(this,f,t,n,l,h,u,T,w,A),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{const g=Math.max(0,m.start),_=Math.min(c.count,m.start+m.count);for(let p=g,f=_;p<f;p+=3){const x=p,y=p+1,S=p+2;s=vo(this,o,t,n,l,h,u,x,y,S),s&&(s.faceIndex=Math.floor(p/3),e.push(s))}}}}function Kp(i,t,e,n,s,r,o,a){let c;if(t.side===sn?c=n.intersectTriangle(o,r,s,!0,a):c=n.intersectTriangle(s,r,o,t.side===Ri,a),c===null)return null;_o.copy(a),_o.applyMatrix4(i.matrixWorld);const l=e.ray.origin.distanceTo(_o);return l<e.near||l>e.far?null:{distance:l,point:_o.clone(),object:i}}function vo(i,t,e,n,s,r,o,a,c,l){i.getVertexPosition(a,Es),i.getVertexPosition(c,bs),i.getVertexPosition(l,As);const h=Kp(i,t,e,n,Es,bs,As,go);if(h){s&&(fo.fromBufferAttribute(s,a),po.fromBufferAttribute(s,c),mo.fromBufferAttribute(s,l),h.uv=zn.getInterpolation(go,Es,bs,As,fo,po,mo,new Ut)),r&&(fo.fromBufferAttribute(r,a),po.fromBufferAttribute(r,c),mo.fromBufferAttribute(r,l),h.uv1=zn.getInterpolation(go,Es,bs,As,fo,po,mo,new Ut)),o&&(xh.fromBufferAttribute(o,a),Mh.fromBufferAttribute(o,c),Sh.fromBufferAttribute(o,l),h.normal=zn.getInterpolation(go,Es,bs,As,xh,Mh,Sh,new C),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const u={a,b:c,c:l,normal:new C,materialIndex:0};zn.getNormal(Es,bs,As,u.normal),h.face=u}return h}class xe extends an{constructor(t=1,e=1,n=1,s=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:s,heightSegments:r,depthSegments:o};const a=this;s=Math.floor(s),r=Math.floor(r),o=Math.floor(o);const c=[],l=[],h=[],u=[];let d=0,m=0;g("z","y","x",-1,-1,n,e,t,o,r,0),g("z","y","x",1,-1,n,e,-t,o,r,1),g("x","z","y",1,1,t,n,e,s,o,2),g("x","z","y",1,-1,t,n,-e,s,o,3),g("x","y","z",1,-1,t,e,n,s,r,4),g("x","y","z",-1,-1,t,e,-n,s,r,5),this.setIndex(c),this.setAttribute("position",new Me(l,3)),this.setAttribute("normal",new Me(h,3)),this.setAttribute("uv",new Me(u,2));function g(_,p,f,x,y,S,M,T,w,A,N){const v=S/w,b=M/A,I=S/2,F=M/2,D=T/2,U=w+1,L=A+1;let V=0,z=0;const G=new C;for(let X=0;X<L;X++){const K=X*b-F;for(let rt=0;rt<U;rt++){const St=rt*v-I;G[_]=St*x,G[p]=K*y,G[f]=D,l.push(G.x,G.y,G.z),G[_]=0,G[p]=0,G[f]=T>0?1:-1,h.push(G.x,G.y,G.z),u.push(rt/w),u.push(1-X/A),V+=1}}for(let X=0;X<A;X++)for(let K=0;K<w;K++){const rt=d+K+U*X,St=d+K+U*(X+1),W=d+(K+1)+U*(X+1),Z=d+(K+1)+U*X;c.push(rt,St,Z),c.push(St,W,Z),z+=6}a.addGroup(m,z,N),m+=z,d+=V}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xe(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Xs(i){const t={};for(const e in i){t[e]={};for(const n in i[e]){const s=i[e][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=s.clone():Array.isArray(s)?t[e][n]=s.slice():t[e][n]=s}}return t}function $e(i){const t={};for(let e=0;e<i.length;e++){const n=Xs(i[e]);for(const s in n)t[s]=n[s]}return t}function Jp(i){const t=[];for(let e=0;e<i.length;e++)t.push(i[e].clone());return t}function ju(i){return i.getRenderTarget()===null?i.outputColorSpace:ne.workingColorSpace}const Qp={clone:Xs,merge:$e};var tm=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,em=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Pi extends or{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=tm,this.fragmentShader=em,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Xs(t.uniforms),this.uniformsGroups=Jp(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const o=this.uniforms[s].value;o&&o.isTexture?e.uniforms[s]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[s]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[s]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[s]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[s]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[s]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[s]={type:"m4",value:o.toArray()}:e.uniforms[s]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class $u extends Pe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new te,this.projectionMatrix=new te,this.projectionMatrixInverse=new te,this.coordinateSystem=ei}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const _i=new C,Th=new Ut,wh=new Ut;class en extends $u{constructor(t=50,e=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=qs*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Tr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return qs*2*Math.atan(Math.tan(Tr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){_i.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(_i.x,_i.y).multiplyScalar(-t/_i.z),_i.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(_i.x,_i.y).multiplyScalar(-t/_i.z)}getViewSize(t,e){return this.getViewBounds(t,Th,wh),e.subVectors(wh,Th)}setViewOffset(t,e,n,s,r,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Tr*.5*this.fov)/this.zoom,n=2*e,s=this.aspect*n,r=-.5*s;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,l=o.fullHeight;r+=o.offsetX*s/c,e-=o.offsetY*n/l,s*=o.width/c,n*=o.height/l}const a=this.filmOffset;a!==0&&(r+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Cs=-90,Rs=1;class nm extends Pe{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new en(Cs,Rs,t,e);s.layers=this.layers,this.add(s);const r=new en(Cs,Rs,t,e);r.layers=this.layers,this.add(r);const o=new en(Cs,Rs,t,e);o.layers=this.layers,this.add(o);const a=new en(Cs,Rs,t,e);a.layers=this.layers,this.add(a);const c=new en(Cs,Rs,t,e);c.layers=this.layers,this.add(c);const l=new en(Cs,Rs,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,s,r,o,a,c]=e;for(const l of e)this.remove(l);if(t===ei)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(t===Uo)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,o,a,c,l,h]=this.children,u=t.getRenderTarget(),d=t.getActiveCubeFace(),m=t.getActiveMipmapLevel(),g=t.xr.enabled;t.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,s),t.render(e,r),t.setRenderTarget(n,1,s),t.render(e,o),t.setRenderTarget(n,2,s),t.render(e,a),t.setRenderTarget(n,3,s),t.render(e,c),t.setRenderTarget(n,4,s),t.render(e,l),n.texture.generateMipmaps=_,t.setRenderTarget(n,5,s),t.render(e,h),t.setRenderTarget(u,d,m),t.xr.enabled=g,n.texture.needsPMREMUpdate=!0}}class Zu extends We{constructor(t,e,n,s,r,o,a,c,l,h){t=t!==void 0?t:[],e=e!==void 0?e:Gs,super(t,e,n,s,r,o,a,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class im extends rs{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},s=[n,n,n,n,n,n];this.texture=new Zu(s,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:tn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new xe(5,5,5),r=new Pi({name:"CubemapFromEquirect",uniforms:Xs(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:sn,blending:Ti});r.uniforms.tEquirect.value=e;const o=new bt(s,r),a=e.minFilter;return e.minFilter===Ji&&(e.minFilter=tn),new nm(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,s){const r=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,s);t.setRenderTarget(r)}}const tc=new C,sm=new C,rm=new Ht;class yi{constructor(t=new C(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,s){return this.normal.set(t,e,n),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const s=tc.subVectors(n,e).cross(sm.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(tc),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||rm.getNormalMatrix(t),s=this.coplanarPoint(tc).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const qi=new un,yo=new C;class zc{constructor(t=new yi,e=new yi,n=new yi,s=new yi,r=new yi,o=new yi){this.planes=[t,e,n,s,r,o]}set(t,e,n,s,r,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(s),a[4].copy(r),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=ei){const n=this.planes,s=t.elements,r=s[0],o=s[1],a=s[2],c=s[3],l=s[4],h=s[5],u=s[6],d=s[7],m=s[8],g=s[9],_=s[10],p=s[11],f=s[12],x=s[13],y=s[14],S=s[15];if(n[0].setComponents(c-r,d-l,p-m,S-f).normalize(),n[1].setComponents(c+r,d+l,p+m,S+f).normalize(),n[2].setComponents(c+o,d+h,p+g,S+x).normalize(),n[3].setComponents(c-o,d-h,p-g,S-x).normalize(),n[4].setComponents(c-a,d-u,p-_,S-y).normalize(),e===ei)n[5].setComponents(c+a,d+u,p+_,S+y).normalize();else if(e===Uo)n[5].setComponents(a,u,_,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),qi.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),qi.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(qi)}intersectsSprite(t){return qi.center.set(0,0,0),qi.radius=.7071067811865476,qi.applyMatrix4(t.matrixWorld),this.intersectsSphere(qi)}intersectsSphere(t){const e=this.planes,n=t.center,s=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const s=e[n];if(yo.x=s.normal.x>0?t.max.x:t.min.x,yo.y=s.normal.y>0?t.max.y:t.min.y,yo.z=s.normal.z>0?t.max.z:t.min.z,s.distanceToPoint(yo)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Ku(){let i=null,t=!1,e=null,n=null;function s(r,o){e(r,o),n=i.requestAnimationFrame(s)}return{start:function(){t!==!0&&e!==null&&(n=i.requestAnimationFrame(s),t=!0)},stop:function(){i.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){i=r}}}function om(i,t){const e=t.isWebGL2,n=new WeakMap;function s(l,h){const u=l.array,d=l.usage,m=u.byteLength,g=i.createBuffer();i.bindBuffer(h,g),i.bufferData(h,u,d),l.onUploadCallback();let _;if(u instanceof Float32Array)_=i.FLOAT;else if(u instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(e)_=i.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else _=i.UNSIGNED_SHORT;else if(u instanceof Int16Array)_=i.SHORT;else if(u instanceof Uint32Array)_=i.UNSIGNED_INT;else if(u instanceof Int32Array)_=i.INT;else if(u instanceof Int8Array)_=i.BYTE;else if(u instanceof Uint8Array)_=i.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)_=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:g,type:_,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version,size:m}}function r(l,h,u){const d=h.array,m=h._updateRange,g=h.updateRanges;if(i.bindBuffer(u,l),m.count===-1&&g.length===0&&i.bufferSubData(u,0,d),g.length!==0){for(let _=0,p=g.length;_<p;_++){const f=g[_];e?i.bufferSubData(u,f.start*d.BYTES_PER_ELEMENT,d,f.start,f.count):i.bufferSubData(u,f.start*d.BYTES_PER_ELEMENT,d.subarray(f.start,f.start+f.count))}h.clearUpdateRanges()}m.count!==-1&&(e?i.bufferSubData(u,m.offset*d.BYTES_PER_ELEMENT,d,m.offset,m.count):i.bufferSubData(u,m.offset*d.BYTES_PER_ELEMENT,d.subarray(m.offset,m.offset+m.count)),m.count=-1),h.onUploadCallback()}function o(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function a(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=n.get(l);h&&(i.deleteBuffer(h.buffer),n.delete(l))}function c(l,h){if(l.isGLBufferAttribute){const d=n.get(l);(!d||d.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const u=n.get(l);if(u===void 0)n.set(l,s(l,h));else if(u.version<l.version){if(u.size!==l.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");r(u.buffer,l,h),u.version=l.version}}return{get:o,remove:a,update:c}}class us extends an{constructor(t=1,e=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:s};const r=t/2,o=e/2,a=Math.floor(n),c=Math.floor(s),l=a+1,h=c+1,u=t/a,d=e/c,m=[],g=[],_=[],p=[];for(let f=0;f<h;f++){const x=f*d-o;for(let y=0;y<l;y++){const S=y*u-r;g.push(S,-x,0),_.push(0,0,1),p.push(y/a),p.push(1-f/c)}}for(let f=0;f<c;f++)for(let x=0;x<a;x++){const y=x+l*f,S=x+l*(f+1),M=x+1+l*(f+1),T=x+1+l*f;m.push(y,S,T),m.push(S,M,T)}this.setIndex(m),this.setAttribute("position",new Me(g,3)),this.setAttribute("normal",new Me(_,3)),this.setAttribute("uv",new Me(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new us(t.width,t.height,t.widthSegments,t.heightSegments)}}var am=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,cm=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,lm=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,hm=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,um=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,dm=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,fm=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,pm=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,mm=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,gm=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,_m=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,vm=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,ym=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,xm=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Mm=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Sm=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Tm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,wm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Em=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,bm=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Am=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Cm=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Rm=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Pm=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Dm=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Im=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Nm=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Lm=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Om=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Um=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Fm="gl_FragColor = linearToOutputTexel( gl_FragColor );",km=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,Bm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,zm=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Vm=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Gm=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Hm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Wm=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,qm=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Xm=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Ym=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,jm=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,$m=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Zm=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Km=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Jm=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Qm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,tg=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,eg=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,ng=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,ig=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,sg=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,rg=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,og=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,ag=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,cg=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lg=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,hg=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,ug=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,dg=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,fg=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,pg=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,mg=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,gg=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,_g=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,vg=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,yg=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,xg=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Mg=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Sg=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Tg=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,wg=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Eg=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,bg=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Ag=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Cg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Rg=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Pg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,Dg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,Ig=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,Ng=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,Lg=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Og=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Ug=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,Fg=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,kg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Bg=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,zg=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Vg=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Gg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Hg=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Wg=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,qg=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Xg=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Yg=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,jg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,$g=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Zg=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Kg=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Jg=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Qg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,t_=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,e_=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,n_=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,i_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,s_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,r_=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,o_=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const a_=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,c_=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,l_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,h_=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,u_=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,d_=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,f_=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,p_=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,m_=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,g_=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,__=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,v_=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,y_=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,x_=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,M_=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,S_=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,T_=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,w_=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,E_=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,b_=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,A_=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,C_=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,R_=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,P_=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,D_=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,I_=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,N_=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,L_=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,O_=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,U_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,F_=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,k_=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,B_=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,z_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Gt={alphahash_fragment:am,alphahash_pars_fragment:cm,alphamap_fragment:lm,alphamap_pars_fragment:hm,alphatest_fragment:um,alphatest_pars_fragment:dm,aomap_fragment:fm,aomap_pars_fragment:pm,batching_pars_vertex:mm,batching_vertex:gm,begin_vertex:_m,beginnormal_vertex:vm,bsdfs:ym,iridescence_fragment:xm,bumpmap_pars_fragment:Mm,clipping_planes_fragment:Sm,clipping_planes_pars_fragment:Tm,clipping_planes_pars_vertex:wm,clipping_planes_vertex:Em,color_fragment:bm,color_pars_fragment:Am,color_pars_vertex:Cm,color_vertex:Rm,common:Pm,cube_uv_reflection_fragment:Dm,defaultnormal_vertex:Im,displacementmap_pars_vertex:Nm,displacementmap_vertex:Lm,emissivemap_fragment:Om,emissivemap_pars_fragment:Um,colorspace_fragment:Fm,colorspace_pars_fragment:km,envmap_fragment:Bm,envmap_common_pars_fragment:zm,envmap_pars_fragment:Vm,envmap_pars_vertex:Gm,envmap_physical_pars_fragment:tg,envmap_vertex:Hm,fog_vertex:Wm,fog_pars_vertex:qm,fog_fragment:Xm,fog_pars_fragment:Ym,gradientmap_pars_fragment:jm,lightmap_fragment:$m,lightmap_pars_fragment:Zm,lights_lambert_fragment:Km,lights_lambert_pars_fragment:Jm,lights_pars_begin:Qm,lights_toon_fragment:eg,lights_toon_pars_fragment:ng,lights_phong_fragment:ig,lights_phong_pars_fragment:sg,lights_physical_fragment:rg,lights_physical_pars_fragment:og,lights_fragment_begin:ag,lights_fragment_maps:cg,lights_fragment_end:lg,logdepthbuf_fragment:hg,logdepthbuf_pars_fragment:ug,logdepthbuf_pars_vertex:dg,logdepthbuf_vertex:fg,map_fragment:pg,map_pars_fragment:mg,map_particle_fragment:gg,map_particle_pars_fragment:_g,metalnessmap_fragment:vg,metalnessmap_pars_fragment:yg,morphinstance_vertex:xg,morphcolor_vertex:Mg,morphnormal_vertex:Sg,morphtarget_pars_vertex:Tg,morphtarget_vertex:wg,normal_fragment_begin:Eg,normal_fragment_maps:bg,normal_pars_fragment:Ag,normal_pars_vertex:Cg,normal_vertex:Rg,normalmap_pars_fragment:Pg,clearcoat_normal_fragment_begin:Dg,clearcoat_normal_fragment_maps:Ig,clearcoat_pars_fragment:Ng,iridescence_pars_fragment:Lg,opaque_fragment:Og,packing:Ug,premultiplied_alpha_fragment:Fg,project_vertex:kg,dithering_fragment:Bg,dithering_pars_fragment:zg,roughnessmap_fragment:Vg,roughnessmap_pars_fragment:Gg,shadowmap_pars_fragment:Hg,shadowmap_pars_vertex:Wg,shadowmap_vertex:qg,shadowmask_pars_fragment:Xg,skinbase_vertex:Yg,skinning_pars_vertex:jg,skinning_vertex:$g,skinnormal_vertex:Zg,specularmap_fragment:Kg,specularmap_pars_fragment:Jg,tonemapping_fragment:Qg,tonemapping_pars_fragment:t_,transmission_fragment:e_,transmission_pars_fragment:n_,uv_pars_fragment:i_,uv_pars_vertex:s_,uv_vertex:r_,worldpos_vertex:o_,background_vert:a_,background_frag:c_,backgroundCube_vert:l_,backgroundCube_frag:h_,cube_vert:u_,cube_frag:d_,depth_vert:f_,depth_frag:p_,distanceRGBA_vert:m_,distanceRGBA_frag:g_,equirect_vert:__,equirect_frag:v_,linedashed_vert:y_,linedashed_frag:x_,meshbasic_vert:M_,meshbasic_frag:S_,meshlambert_vert:T_,meshlambert_frag:w_,meshmatcap_vert:E_,meshmatcap_frag:b_,meshnormal_vert:A_,meshnormal_frag:C_,meshphong_vert:R_,meshphong_frag:P_,meshphysical_vert:D_,meshphysical_frag:I_,meshtoon_vert:N_,meshtoon_frag:L_,points_vert:O_,points_frag:U_,shadow_vert:F_,shadow_frag:k_,sprite_vert:B_,sprite_frag:z_},lt={common:{diffuse:{value:new Kt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ht},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ht}},envmap:{envMap:{value:null},envMapRotation:{value:new Ht},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ht}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ht}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ht},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ht},normalScale:{value:new Ut(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ht},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ht}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ht}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ht}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Kt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Kt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0},uvTransform:{value:new Ht}},sprite:{diffuse:{value:new Kt(16777215)},opacity:{value:1},center:{value:new Ut(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ht},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0}}},kn={basic:{uniforms:$e([lt.common,lt.specularmap,lt.envmap,lt.aomap,lt.lightmap,lt.fog]),vertexShader:Gt.meshbasic_vert,fragmentShader:Gt.meshbasic_frag},lambert:{uniforms:$e([lt.common,lt.specularmap,lt.envmap,lt.aomap,lt.lightmap,lt.emissivemap,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.fog,lt.lights,{emissive:{value:new Kt(0)}}]),vertexShader:Gt.meshlambert_vert,fragmentShader:Gt.meshlambert_frag},phong:{uniforms:$e([lt.common,lt.specularmap,lt.envmap,lt.aomap,lt.lightmap,lt.emissivemap,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.fog,lt.lights,{emissive:{value:new Kt(0)},specular:{value:new Kt(1118481)},shininess:{value:30}}]),vertexShader:Gt.meshphong_vert,fragmentShader:Gt.meshphong_frag},standard:{uniforms:$e([lt.common,lt.envmap,lt.aomap,lt.lightmap,lt.emissivemap,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.roughnessmap,lt.metalnessmap,lt.fog,lt.lights,{emissive:{value:new Kt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Gt.meshphysical_vert,fragmentShader:Gt.meshphysical_frag},toon:{uniforms:$e([lt.common,lt.aomap,lt.lightmap,lt.emissivemap,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.gradientmap,lt.fog,lt.lights,{emissive:{value:new Kt(0)}}]),vertexShader:Gt.meshtoon_vert,fragmentShader:Gt.meshtoon_frag},matcap:{uniforms:$e([lt.common,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.fog,{matcap:{value:null}}]),vertexShader:Gt.meshmatcap_vert,fragmentShader:Gt.meshmatcap_frag},points:{uniforms:$e([lt.points,lt.fog]),vertexShader:Gt.points_vert,fragmentShader:Gt.points_frag},dashed:{uniforms:$e([lt.common,lt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Gt.linedashed_vert,fragmentShader:Gt.linedashed_frag},depth:{uniforms:$e([lt.common,lt.displacementmap]),vertexShader:Gt.depth_vert,fragmentShader:Gt.depth_frag},normal:{uniforms:$e([lt.common,lt.bumpmap,lt.normalmap,lt.displacementmap,{opacity:{value:1}}]),vertexShader:Gt.meshnormal_vert,fragmentShader:Gt.meshnormal_frag},sprite:{uniforms:$e([lt.sprite,lt.fog]),vertexShader:Gt.sprite_vert,fragmentShader:Gt.sprite_frag},background:{uniforms:{uvTransform:{value:new Ht},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Gt.background_vert,fragmentShader:Gt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Ht}},vertexShader:Gt.backgroundCube_vert,fragmentShader:Gt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Gt.cube_vert,fragmentShader:Gt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Gt.equirect_vert,fragmentShader:Gt.equirect_frag},distanceRGBA:{uniforms:$e([lt.common,lt.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Gt.distanceRGBA_vert,fragmentShader:Gt.distanceRGBA_frag},shadow:{uniforms:$e([lt.lights,lt.fog,{color:{value:new Kt(0)},opacity:{value:1}}]),vertexShader:Gt.shadow_vert,fragmentShader:Gt.shadow_frag}};kn.physical={uniforms:$e([kn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ht},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ht},clearcoatNormalScale:{value:new Ut(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ht},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ht},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ht},sheen:{value:0},sheenColor:{value:new Kt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ht},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ht},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ht},transmissionSamplerSize:{value:new Ut},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ht},attenuationDistance:{value:0},attenuationColor:{value:new Kt(0)},specularColor:{value:new Kt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ht},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ht},anisotropyVector:{value:new Ut},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ht}}]),vertexShader:Gt.meshphysical_vert,fragmentShader:Gt.meshphysical_frag};const xo={r:0,b:0,g:0},Xi=new _n,V_=new te;function G_(i,t,e,n,s,r,o){const a=new Kt(0);let c=r===!0?0:1,l,h,u=null,d=0,m=null;function g(p,f){let x=!1,y=f.isScene===!0?f.background:null;y&&y.isTexture&&(y=(f.backgroundBlurriness>0?e:t).get(y)),y===null?_(a,c):y&&y.isColor&&(_(y,1),x=!0);const S=i.xr.getEnvironmentBlendMode();S==="additive"?n.buffers.color.setClear(0,0,0,1,o):S==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(i.autoClear||x)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),y&&(y.isCubeTexture||y.mapping===ha)?(h===void 0&&(h=new bt(new xe(1,1,1),new Pi({name:"BackgroundCubeMaterial",uniforms:Xs(kn.backgroundCube.uniforms),vertexShader:kn.backgroundCube.vertexShader,fragmentShader:kn.backgroundCube.fragmentShader,side:sn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(M,T,w){this.matrixWorld.copyPosition(w.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),Xi.copy(f.backgroundRotation),Xi.x*=-1,Xi.y*=-1,Xi.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(Xi.y*=-1,Xi.z*=-1),h.material.uniforms.envMap.value=y,h.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=f.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=f.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(V_.makeRotationFromEuler(Xi)),h.material.toneMapped=ne.getTransfer(y.colorSpace)!==he,(u!==y||d!==y.version||m!==i.toneMapping)&&(h.material.needsUpdate=!0,u=y,d=y.version,m=i.toneMapping),h.layers.enableAll(),p.unshift(h,h.geometry,h.material,0,0,null)):y&&y.isTexture&&(l===void 0&&(l=new bt(new us(2,2),new Pi({name:"BackgroundMaterial",uniforms:Xs(kn.background.uniforms),vertexShader:kn.background.vertexShader,fragmentShader:kn.background.fragmentShader,side:Ri,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=y,l.material.uniforms.backgroundIntensity.value=f.backgroundIntensity,l.material.toneMapped=ne.getTransfer(y.colorSpace)!==he,y.matrixAutoUpdate===!0&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),(u!==y||d!==y.version||m!==i.toneMapping)&&(l.material.needsUpdate=!0,u=y,d=y.version,m=i.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null))}function _(p,f){p.getRGB(xo,ju(i)),n.buffers.color.setClear(xo.r,xo.g,xo.b,f,o)}return{getClearColor:function(){return a},setClearColor:function(p,f=1){a.set(p),c=f,_(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(p){c=p,_(a,c)},render:g}}function H_(i,t,e,n){const s=i.getParameter(i.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,a={},c=p(null);let l=c,h=!1;function u(D,U,L,V,z){let G=!1;if(o){const X=_(V,L,U);l!==X&&(l=X,m(l.object)),G=f(D,V,L,z),G&&x(D,V,L,z)}else{const X=U.wireframe===!0;(l.geometry!==V.id||l.program!==L.id||l.wireframe!==X)&&(l.geometry=V.id,l.program=L.id,l.wireframe=X,G=!0)}z!==null&&e.update(z,i.ELEMENT_ARRAY_BUFFER),(G||h)&&(h=!1,A(D,U,L,V),z!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(z).buffer))}function d(){return n.isWebGL2?i.createVertexArray():r.createVertexArrayOES()}function m(D){return n.isWebGL2?i.bindVertexArray(D):r.bindVertexArrayOES(D)}function g(D){return n.isWebGL2?i.deleteVertexArray(D):r.deleteVertexArrayOES(D)}function _(D,U,L){const V=L.wireframe===!0;let z=a[D.id];z===void 0&&(z={},a[D.id]=z);let G=z[U.id];G===void 0&&(G={},z[U.id]=G);let X=G[V];return X===void 0&&(X=p(d()),G[V]=X),X}function p(D){const U=[],L=[],V=[];for(let z=0;z<s;z++)U[z]=0,L[z]=0,V[z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:U,enabledAttributes:L,attributeDivisors:V,object:D,attributes:{},index:null}}function f(D,U,L,V){const z=l.attributes,G=U.attributes;let X=0;const K=L.getAttributes();for(const rt in K)if(K[rt].location>=0){const W=z[rt];let Z=G[rt];if(Z===void 0&&(rt==="instanceMatrix"&&D.instanceMatrix&&(Z=D.instanceMatrix),rt==="instanceColor"&&D.instanceColor&&(Z=D.instanceColor)),W===void 0||W.attribute!==Z||Z&&W.data!==Z.data)return!0;X++}return l.attributesNum!==X||l.index!==V}function x(D,U,L,V){const z={},G=U.attributes;let X=0;const K=L.getAttributes();for(const rt in K)if(K[rt].location>=0){let W=G[rt];W===void 0&&(rt==="instanceMatrix"&&D.instanceMatrix&&(W=D.instanceMatrix),rt==="instanceColor"&&D.instanceColor&&(W=D.instanceColor));const Z={};Z.attribute=W,W&&W.data&&(Z.data=W.data),z[rt]=Z,X++}l.attributes=z,l.attributesNum=X,l.index=V}function y(){const D=l.newAttributes;for(let U=0,L=D.length;U<L;U++)D[U]=0}function S(D){M(D,0)}function M(D,U){const L=l.newAttributes,V=l.enabledAttributes,z=l.attributeDivisors;L[D]=1,V[D]===0&&(i.enableVertexAttribArray(D),V[D]=1),z[D]!==U&&((n.isWebGL2?i:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,U),z[D]=U)}function T(){const D=l.newAttributes,U=l.enabledAttributes;for(let L=0,V=U.length;L<V;L++)U[L]!==D[L]&&(i.disableVertexAttribArray(L),U[L]=0)}function w(D,U,L,V,z,G,X){X===!0?i.vertexAttribIPointer(D,U,L,z,G):i.vertexAttribPointer(D,U,L,V,z,G)}function A(D,U,L,V){if(n.isWebGL2===!1&&(D.isInstancedMesh||V.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;y();const z=V.attributes,G=L.getAttributes(),X=U.defaultAttributeValues;for(const K in G){const rt=G[K];if(rt.location>=0){let St=z[K];if(St===void 0&&(K==="instanceMatrix"&&D.instanceMatrix&&(St=D.instanceMatrix),K==="instanceColor"&&D.instanceColor&&(St=D.instanceColor)),St!==void 0){const W=St.normalized,Z=St.itemSize,ot=e.get(St);if(ot===void 0)continue;const vt=ot.buffer,tt=ot.type,mt=ot.bytesPerElement,Xt=n.isWebGL2===!0&&(tt===i.INT||tt===i.UNSIGNED_INT||St.gpuType===Du);if(St.isInterleavedBufferAttribute){const At=St.data,k=At.stride,Re=St.offset;if(At.isInstancedInterleavedBuffer){for(let wt=0;wt<rt.locationSize;wt++)M(rt.location+wt,At.meshPerAttribute);D.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=At.meshPerAttribute*At.count)}else for(let wt=0;wt<rt.locationSize;wt++)S(rt.location+wt);i.bindBuffer(i.ARRAY_BUFFER,vt);for(let wt=0;wt<rt.locationSize;wt++)w(rt.location+wt,Z/rt.locationSize,tt,W,k*mt,(Re+Z/rt.locationSize*wt)*mt,Xt)}else{if(St.isInstancedBufferAttribute){for(let At=0;At<rt.locationSize;At++)M(rt.location+At,St.meshPerAttribute);D.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=St.meshPerAttribute*St.count)}else for(let At=0;At<rt.locationSize;At++)S(rt.location+At);i.bindBuffer(i.ARRAY_BUFFER,vt);for(let At=0;At<rt.locationSize;At++)w(rt.location+At,Z/rt.locationSize,tt,W,Z*mt,Z/rt.locationSize*At*mt,Xt)}}else if(X!==void 0){const W=X[K];if(W!==void 0)switch(W.length){case 2:i.vertexAttrib2fv(rt.location,W);break;case 3:i.vertexAttrib3fv(rt.location,W);break;case 4:i.vertexAttrib4fv(rt.location,W);break;default:i.vertexAttrib1fv(rt.location,W)}}}}T()}function N(){I();for(const D in a){const U=a[D];for(const L in U){const V=U[L];for(const z in V)g(V[z].object),delete V[z];delete U[L]}delete a[D]}}function v(D){if(a[D.id]===void 0)return;const U=a[D.id];for(const L in U){const V=U[L];for(const z in V)g(V[z].object),delete V[z];delete U[L]}delete a[D.id]}function b(D){for(const U in a){const L=a[U];if(L[D.id]===void 0)continue;const V=L[D.id];for(const z in V)g(V[z].object),delete V[z];delete L[D.id]}}function I(){F(),h=!0,l!==c&&(l=c,m(l.object))}function F(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:u,reset:I,resetDefaultState:F,dispose:N,releaseStatesOfGeometry:v,releaseStatesOfProgram:b,initAttributes:y,enableAttribute:S,disableUnusedAttributes:T}}function W_(i,t,e,n){const s=n.isWebGL2;let r;function o(h){r=h}function a(h,u){i.drawArrays(r,h,u),e.update(u,r,1)}function c(h,u,d){if(d===0)return;let m,g;if(s)m=i,g="drawArraysInstanced";else if(m=t.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](r,h,u,d),e.update(u,r,d)}function l(h,u,d){if(d===0)return;const m=t.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<d;g++)this.render(h[g],u[g]);else{m.multiDrawArraysWEBGL(r,h,0,u,0,d);let g=0;for(let _=0;_<d;_++)g+=u[_];e.update(g,r,1)}}this.setMode=o,this.render=a,this.renderInstances=c,this.renderMultiDraw=l}function q_(i,t,e){let n;function s(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const w=t.get("EXT_texture_filter_anisotropic");n=i.getParameter(w.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(w){if(w==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";w="mediump"}return w==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&i.constructor.name==="WebGL2RenderingContext";let a=e.precision!==void 0?e.precision:"highp";const c=r(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const l=o||t.has("WEBGL_draw_buffers"),h=e.logarithmicDepthBuffer===!0,u=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),d=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=i.getParameter(i.MAX_TEXTURE_SIZE),g=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),_=i.getParameter(i.MAX_VERTEX_ATTRIBS),p=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),f=i.getParameter(i.MAX_VARYING_VECTORS),x=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),y=d>0,S=o||t.has("OES_texture_float"),M=y&&S,T=o?i.getParameter(i.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:l,getMaxAnisotropy:s,getMaxPrecision:r,precision:a,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:d,maxTextureSize:m,maxCubemapSize:g,maxAttributes:_,maxVertexUniforms:p,maxVaryings:f,maxFragmentUniforms:x,vertexTextures:y,floatFragmentTextures:S,floatVertexTextures:M,maxSamples:T}}function X_(i){const t=this;let e=null,n=0,s=!1,r=!1;const o=new yi,a=new Ht,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const m=u.length!==0||d||n!==0||s;return s=d,n=u.length,m},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,d){e=h(u,d,0)},this.setState=function(u,d,m){const g=u.clippingPlanes,_=u.clipIntersection,p=u.clipShadows,f=i.get(u);if(!s||g===null||g.length===0||r&&!p)r?h(null):l();else{const x=r?0:n,y=x*4;let S=f.clippingState||null;c.value=S,S=h(g,d,y,m);for(let M=0;M!==y;++M)S[M]=e[M];f.clippingState=S,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=x}};function l(){c.value!==e&&(c.value=e,c.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(u,d,m,g){const _=u!==null?u.length:0;let p=null;if(_!==0){if(p=c.value,g!==!0||p===null){const f=m+_*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(p===null||p.length<f)&&(p=new Float32Array(f));for(let y=0,S=m;y!==_;++y,S+=4)o.copy(u[y]).applyMatrix4(x,a),o.normal.toArray(p,S),p[S+3]=o.constant}c.value=p,c.needsUpdate=!0}return t.numPlanes=_,t.numIntersection=0,p}}function Y_(i){let t=new WeakMap;function e(o,a){return a===fc?o.mapping=Gs:a===pc&&(o.mapping=Hs),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===fc||a===pc)if(t.has(o)){const c=t.get(o).texture;return e(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const l=new im(c.height);return l.fromEquirectangularTexture(i,o),t.set(o,l),o.addEventListener("dispose",s),e(l.texture,o.mapping)}else return null}}return o}function s(o){const a=o.target;a.removeEventListener("dispose",s);const c=t.get(a);c!==void 0&&(t.delete(a),c.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class Ju extends $u{constructor(t=-1,e=1,n=1,s=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=s,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,s,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-t,o=n+t,a=s+e,c=s-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,o=r+l*this.view.width,a-=h*this.view.offsetY,c=a-h*this.view.height}this.projectionMatrix.makeOrthographic(r,o,a,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const Os=4,Eh=[.125,.215,.35,.446,.526,.582],Zi=20,ec=new Ju,bh=new Kt;let nc=null,ic=0,sc=0;const ji=(1+Math.sqrt(5))/2,Ps=1/ji,Ah=[new C(1,1,1),new C(-1,1,1),new C(1,1,-1),new C(-1,1,-1),new C(0,ji,Ps),new C(0,ji,-Ps),new C(Ps,0,ji),new C(-Ps,0,ji),new C(ji,Ps,0),new C(-ji,Ps,0)];class Ch{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,s=100){nc=this._renderer.getRenderTarget(),ic=this._renderer.getActiveCubeFace(),sc=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,s,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Dh(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Ph(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(nc,ic,sc),t.scissorTest=!1,Mo(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Gs||t.mapping===Hs?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),nc=this._renderer.getRenderTarget(),ic=this._renderer.getActiveCubeFace(),sc=this._renderer.getActiveMipmapLevel();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:tn,minFilter:tn,generateMipmaps:!1,type:br,format:Rn,colorSpace:Oi,depthBuffer:!1},s=Rh(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Rh(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=j_(r)),this._blurMaterial=$_(r,t,e)}return s}_compileMaterial(t){const e=new bt(this._lodPlanes[0],t);this._renderer.compile(e,ec)}_sceneToCubeUV(t,e,n,s){const a=new en(90,1,e,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(bh),h.toneMapping=Ei,h.autoClear=!1;const m=new Lt({name:"PMREM.Background",side:sn,depthWrite:!1,depthTest:!1}),g=new bt(new xe,m);let _=!1;const p=t.background;p?p.isColor&&(m.color.copy(p),t.background=null,_=!0):(m.color.copy(bh),_=!0);for(let f=0;f<6;f++){const x=f%3;x===0?(a.up.set(0,c[f],0),a.lookAt(l[f],0,0)):x===1?(a.up.set(0,0,c[f]),a.lookAt(0,l[f],0)):(a.up.set(0,c[f],0),a.lookAt(0,0,l[f]));const y=this._cubeSize;Mo(s,x*y,f>2?y:0,y,y),h.setRenderTarget(s),_&&h.render(g,a),h.render(t,a)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=d,h.autoClear=u,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,s=t.mapping===Gs||t.mapping===Hs;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Dh()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Ph());const r=s?this._cubemapMaterial:this._equirectMaterial,o=new bt(this._lodPlanes[0],r),a=r.uniforms;a.envMap.value=t;const c=this._cubeSize;Mo(e,0,0,3*c,2*c),n.setRenderTarget(e),n.render(o,ec)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),o=Ah[(s-1)%Ah.length];this._blur(t,s-1,s,r,o)}e.autoClear=n}_blur(t,e,n,s,r){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,s,"latitudinal",r),this._halfBlur(o,t,n,n,s,"longitudinal",r)}_halfBlur(t,e,n,s,r,o,a){const c=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new bt(this._lodPlanes[s],l),d=l.uniforms,m=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*m):2*Math.PI/(2*Zi-1),_=r/g,p=isFinite(r)?1+Math.floor(h*_):Zi;p>Zi&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Zi}`);const f=[];let x=0;for(let w=0;w<Zi;++w){const A=w/_,N=Math.exp(-A*A/2);f.push(N),w===0?x+=N:w<p&&(x+=2*N)}for(let w=0;w<f.length;w++)f[w]=f[w]/x;d.envMap.value=t.texture,d.samples.value=p,d.weights.value=f,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=g,d.mipInt.value=y-n;const S=this._sizeLods[s],M=3*S*(s>y-Os?s-y+Os:0),T=4*(this._cubeSize-S);Mo(e,M,T,3*S,2*S),c.setRenderTarget(e),c.render(u,ec)}}function j_(i){const t=[],e=[],n=[];let s=i;const r=i-Os+1+Eh.length;for(let o=0;o<r;o++){const a=Math.pow(2,s);e.push(a);let c=1/a;o>i-Os?c=Eh[o-i+Os-1]:o===0&&(c=0),n.push(c);const l=1/(a-2),h=-l,u=1+l,d=[h,h,u,h,u,u,h,h,u,u,h,u],m=6,g=6,_=3,p=2,f=1,x=new Float32Array(_*g*m),y=new Float32Array(p*g*m),S=new Float32Array(f*g*m);for(let T=0;T<m;T++){const w=T%3*2/3-1,A=T>2?0:-1,N=[w,A,0,w+2/3,A,0,w+2/3,A+1,0,w,A,0,w+2/3,A+1,0,w,A+1,0];x.set(N,_*g*T),y.set(d,p*g*T);const v=[T,T,T,T,T,T];S.set(v,f*g*T)}const M=new an;M.setAttribute("position",new mn(x,_)),M.setAttribute("uv",new mn(y,p)),M.setAttribute("faceIndex",new mn(S,f)),t.push(M),s>Os&&s--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Rh(i,t,e){const n=new rs(i,t,e);return n.texture.mapping=ha,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Mo(i,t,e,n,s){i.viewport.set(t,e,n,s),i.scissor.set(t,e,n,s)}function $_(i,t,e){const n=new Float32Array(Zi),s=new C(0,1,0);return new Pi({name:"SphericalGaussianBlur",defines:{n:Zi,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Vc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ti,depthTest:!1,depthWrite:!1})}function Ph(){return new Pi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Vc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ti,depthTest:!1,depthWrite:!1})}function Dh(){return new Pi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Vc(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ti,depthTest:!1,depthWrite:!1})}function Vc(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Z_(i){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const c=a.mapping,l=c===fc||c===pc,h=c===Gs||c===Hs;if(l||h)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let u=t.get(a);return e===null&&(e=new Ch(i)),u=l?e.fromEquirectangular(a,u):e.fromCubemap(a,u),t.set(a,u),u.texture}else{if(t.has(a))return t.get(a).texture;{const u=a.image;if(l&&u&&u.height>0||h&&u&&s(u)){e===null&&(e=new Ch(i));const d=l?e.fromEquirectangular(a):e.fromCubemap(a);return t.set(a,d),a.addEventListener("dispose",r),d.texture}else return null}}}return a}function s(a){let c=0;const l=6;for(let h=0;h<l;h++)a[h]!==void 0&&c++;return c===l}function r(a){const c=a.target;c.removeEventListener("dispose",r);const l=t.get(c);l!==void 0&&(t.delete(c),l.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function K_(i){const t={};function e(n){if(t[n]!==void 0)return t[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return t[n]=s,s}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?(e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance")):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const s=e(n);return s===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function J_(i,t,e,n){const s={},r=new WeakMap;function o(u){const d=u.target;d.index!==null&&t.remove(d.index);for(const g in d.attributes)t.remove(d.attributes[g]);for(const g in d.morphAttributes){const _=d.morphAttributes[g];for(let p=0,f=_.length;p<f;p++)t.remove(_[p])}d.removeEventListener("dispose",o),delete s[d.id];const m=r.get(d);m&&(t.remove(m),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(u,d){return s[d.id]===!0||(d.addEventListener("dispose",o),s[d.id]=!0,e.memory.geometries++),d}function c(u){const d=u.attributes;for(const g in d)t.update(d[g],i.ARRAY_BUFFER);const m=u.morphAttributes;for(const g in m){const _=m[g];for(let p=0,f=_.length;p<f;p++)t.update(_[p],i.ARRAY_BUFFER)}}function l(u){const d=[],m=u.index,g=u.attributes.position;let _=0;if(m!==null){const x=m.array;_=m.version;for(let y=0,S=x.length;y<S;y+=3){const M=x[y+0],T=x[y+1],w=x[y+2];d.push(M,T,T,w,w,M)}}else if(g!==void 0){const x=g.array;_=g.version;for(let y=0,S=x.length/3-1;y<S;y+=3){const M=y+0,T=y+1,w=y+2;d.push(M,T,T,w,w,M)}}else return;const p=new(Vu(d)?Yu:Xu)(d,1);p.version=_;const f=r.get(u);f&&t.remove(f),r.set(u,p)}function h(u){const d=r.get(u);if(d){const m=u.index;m!==null&&d.version<m.version&&l(u)}else l(u);return r.get(u)}return{get:a,update:c,getWireframeAttribute:h}}function Q_(i,t,e,n){const s=n.isWebGL2;let r;function o(m){r=m}let a,c;function l(m){a=m.type,c=m.bytesPerElement}function h(m,g){i.drawElements(r,g,a,m*c),e.update(g,r,1)}function u(m,g,_){if(_===0)return;let p,f;if(s)p=i,f="drawElementsInstanced";else if(p=t.get("ANGLE_instanced_arrays"),f="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[f](r,g,a,m*c,_),e.update(g,r,_)}function d(m,g,_){if(_===0)return;const p=t.get("WEBGL_multi_draw");if(p===null)for(let f=0;f<_;f++)this.render(m[f]/c,g[f]);else{p.multiDrawElementsWEBGL(r,g,0,a,m,0,_);let f=0;for(let x=0;x<_;x++)f+=g[x];e.update(f,r,1)}}this.setMode=o,this.setIndex=l,this.render=h,this.renderInstances=u,this.renderMultiDraw=d}function t0(i){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,a){switch(e.calls++,o){case i.TRIANGLES:e.triangles+=a*(r/3);break;case i.LINES:e.lines+=a*(r/2);break;case i.LINE_STRIP:e.lines+=a*(r-1);break;case i.LINE_LOOP:e.lines+=a*r;break;case i.POINTS:e.points+=a*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function s(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:s,update:n}}function e0(i,t){return i[0]-t[0]}function n0(i,t){return Math.abs(t[1])-Math.abs(i[1])}function i0(i,t,e){const n={},s=new Float32Array(8),r=new WeakMap,o=new ge,a=[];for(let l=0;l<8;l++)a[l]=[l,0];function c(l,h,u){const d=l.morphTargetInfluences;if(t.isWebGL2===!0){const g=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,_=g!==void 0?g.length:0;let p=r.get(h);if(p===void 0||p.count!==_){let F=function(){b.dispose(),r.delete(h),h.removeEventListener("dispose",F)};var m=F;p!==void 0&&p.texture.dispose();const f=h.morphAttributes.position!==void 0,x=h.morphAttributes.normal!==void 0,y=h.morphAttributes.color!==void 0,S=h.morphAttributes.position||[],M=h.morphAttributes.normal||[],T=h.morphAttributes.color||[];let w=0;f===!0&&(w=1),x===!0&&(w=2),y===!0&&(w=3);let A=h.attributes.position.count*w,N=1;A>t.maxTextureSize&&(N=Math.ceil(A/t.maxTextureSize),A=t.maxTextureSize);const v=new Float32Array(A*N*4*_),b=new Wu(v,A,N,_);b.type=Bn,b.needsUpdate=!0;const I=w*4;for(let D=0;D<_;D++){const U=S[D],L=M[D],V=T[D],z=A*N*4*D;for(let G=0;G<U.count;G++){const X=G*I;f===!0&&(o.fromBufferAttribute(U,G),v[z+X+0]=o.x,v[z+X+1]=o.y,v[z+X+2]=o.z,v[z+X+3]=0),x===!0&&(o.fromBufferAttribute(L,G),v[z+X+4]=o.x,v[z+X+5]=o.y,v[z+X+6]=o.z,v[z+X+7]=0),y===!0&&(o.fromBufferAttribute(V,G),v[z+X+8]=o.x,v[z+X+9]=o.y,v[z+X+10]=o.z,v[z+X+11]=V.itemSize===4?o.w:1)}}p={count:_,texture:b,size:new Ut(A,N)},r.set(h,p),h.addEventListener("dispose",F)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(i,"morphTexture",l.morphTexture,e);else{let f=0;for(let y=0;y<d.length;y++)f+=d[y];const x=h.morphTargetsRelative?1:1-f;u.getUniforms().setValue(i,"morphTargetBaseInfluence",x),u.getUniforms().setValue(i,"morphTargetInfluences",d)}u.getUniforms().setValue(i,"morphTargetsTexture",p.texture,e),u.getUniforms().setValue(i,"morphTargetsTextureSize",p.size)}else{const g=d===void 0?0:d.length;let _=n[h.id];if(_===void 0||_.length!==g){_=[];for(let S=0;S<g;S++)_[S]=[S,0];n[h.id]=_}for(let S=0;S<g;S++){const M=_[S];M[0]=S,M[1]=d[S]}_.sort(n0);for(let S=0;S<8;S++)S<g&&_[S][1]?(a[S][0]=_[S][0],a[S][1]=_[S][1]):(a[S][0]=Number.MAX_SAFE_INTEGER,a[S][1]=0);a.sort(e0);const p=h.morphAttributes.position,f=h.morphAttributes.normal;let x=0;for(let S=0;S<8;S++){const M=a[S],T=M[0],w=M[1];T!==Number.MAX_SAFE_INTEGER&&w?(p&&h.getAttribute("morphTarget"+S)!==p[T]&&h.setAttribute("morphTarget"+S,p[T]),f&&h.getAttribute("morphNormal"+S)!==f[T]&&h.setAttribute("morphNormal"+S,f[T]),s[S]=w,x+=w):(p&&h.hasAttribute("morphTarget"+S)===!0&&h.deleteAttribute("morphTarget"+S),f&&h.hasAttribute("morphNormal"+S)===!0&&h.deleteAttribute("morphNormal"+S),s[S]=0)}const y=h.morphTargetsRelative?1:1-x;u.getUniforms().setValue(i,"morphTargetBaseInfluence",y),u.getUniforms().setValue(i,"morphTargetInfluences",s)}}return{update:c}}function s0(i,t,e,n){let s=new WeakMap;function r(c){const l=n.render.frame,h=c.geometry,u=t.get(c,h);if(s.get(u)!==l&&(t.update(u),s.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),s.get(c)!==l&&(e.update(c.instanceMatrix,i.ARRAY_BUFFER),c.instanceColor!==null&&e.update(c.instanceColor,i.ARRAY_BUFFER),s.set(c,l))),c.isSkinnedMesh){const d=c.skeleton;s.get(d)!==l&&(d.update(),s.set(d,l))}return u}function o(){s=new WeakMap}function a(c){const l=c.target;l.removeEventListener("dispose",a),e.remove(l.instanceMatrix),l.instanceColor!==null&&e.remove(l.instanceColor)}return{update:r,dispose:o}}class Qu extends We{constructor(t,e,n,s,r,o,a,c,l,h){if(h=h!==void 0?h:es,h!==es&&h!==Ws)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===es&&(n=Si),n===void 0&&h===Ws&&(n=ts),super(null,s,r,o,a,c,h,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:ke,this.minFilter=c!==void 0?c:ke,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}const td=new We,ed=new Qu(1,1);ed.compareFunction=zu;const nd=new Wu,id=new zp,sd=new Zu,Ih=[],Nh=[],Lh=new Float32Array(16),Oh=new Float32Array(9),Uh=new Float32Array(4);function ar(i,t,e){const n=i[0];if(n<=0||n>0)return i;const s=t*e;let r=Ih[s];if(r===void 0&&(r=new Float32Array(s),Ih[s]=r),t!==0){n.toArray(r,0);for(let o=1,a=0;o!==t;++o)a+=e,i[o].toArray(r,a)}return r}function De(i,t){if(i.length!==t.length)return!1;for(let e=0,n=i.length;e<n;e++)if(i[e]!==t[e])return!1;return!0}function Ie(i,t){for(let e=0,n=t.length;e<n;e++)i[e]=t[e]}function da(i,t){let e=Nh[t];e===void 0&&(e=new Int32Array(t),Nh[t]=e);for(let n=0;n!==t;++n)e[n]=i.allocateTextureUnit();return e}function r0(i,t){const e=this.cache;e[0]!==t&&(i.uniform1f(this.addr,t),e[0]=t)}function o0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(De(e,t))return;i.uniform2fv(this.addr,t),Ie(e,t)}}function a0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(i.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(De(e,t))return;i.uniform3fv(this.addr,t),Ie(e,t)}}function c0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(De(e,t))return;i.uniform4fv(this.addr,t),Ie(e,t)}}function l0(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(De(e,t))return;i.uniformMatrix2fv(this.addr,!1,t),Ie(e,t)}else{if(De(e,n))return;Uh.set(n),i.uniformMatrix2fv(this.addr,!1,Uh),Ie(e,n)}}function h0(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(De(e,t))return;i.uniformMatrix3fv(this.addr,!1,t),Ie(e,t)}else{if(De(e,n))return;Oh.set(n),i.uniformMatrix3fv(this.addr,!1,Oh),Ie(e,n)}}function u0(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(De(e,t))return;i.uniformMatrix4fv(this.addr,!1,t),Ie(e,t)}else{if(De(e,n))return;Lh.set(n),i.uniformMatrix4fv(this.addr,!1,Lh),Ie(e,n)}}function d0(i,t){const e=this.cache;e[0]!==t&&(i.uniform1i(this.addr,t),e[0]=t)}function f0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(De(e,t))return;i.uniform2iv(this.addr,t),Ie(e,t)}}function p0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(De(e,t))return;i.uniform3iv(this.addr,t),Ie(e,t)}}function m0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(De(e,t))return;i.uniform4iv(this.addr,t),Ie(e,t)}}function g0(i,t){const e=this.cache;e[0]!==t&&(i.uniform1ui(this.addr,t),e[0]=t)}function _0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(De(e,t))return;i.uniform2uiv(this.addr,t),Ie(e,t)}}function v0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(De(e,t))return;i.uniform3uiv(this.addr,t),Ie(e,t)}}function y0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(De(e,t))return;i.uniform4uiv(this.addr,t),Ie(e,t)}}function x0(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s);const r=this.type===i.SAMPLER_2D_SHADOW?ed:td;e.setTexture2D(t||r,s)}function M0(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture3D(t||id,s)}function S0(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTextureCube(t||sd,s)}function T0(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture2DArray(t||nd,s)}function w0(i){switch(i){case 5126:return r0;case 35664:return o0;case 35665:return a0;case 35666:return c0;case 35674:return l0;case 35675:return h0;case 35676:return u0;case 5124:case 35670:return d0;case 35667:case 35671:return f0;case 35668:case 35672:return p0;case 35669:case 35673:return m0;case 5125:return g0;case 36294:return _0;case 36295:return v0;case 36296:return y0;case 35678:case 36198:case 36298:case 36306:case 35682:return x0;case 35679:case 36299:case 36307:return M0;case 35680:case 36300:case 36308:case 36293:return S0;case 36289:case 36303:case 36311:case 36292:return T0}}function E0(i,t){i.uniform1fv(this.addr,t)}function b0(i,t){const e=ar(t,this.size,2);i.uniform2fv(this.addr,e)}function A0(i,t){const e=ar(t,this.size,3);i.uniform3fv(this.addr,e)}function C0(i,t){const e=ar(t,this.size,4);i.uniform4fv(this.addr,e)}function R0(i,t){const e=ar(t,this.size,4);i.uniformMatrix2fv(this.addr,!1,e)}function P0(i,t){const e=ar(t,this.size,9);i.uniformMatrix3fv(this.addr,!1,e)}function D0(i,t){const e=ar(t,this.size,16);i.uniformMatrix4fv(this.addr,!1,e)}function I0(i,t){i.uniform1iv(this.addr,t)}function N0(i,t){i.uniform2iv(this.addr,t)}function L0(i,t){i.uniform3iv(this.addr,t)}function O0(i,t){i.uniform4iv(this.addr,t)}function U0(i,t){i.uniform1uiv(this.addr,t)}function F0(i,t){i.uniform2uiv(this.addr,t)}function k0(i,t){i.uniform3uiv(this.addr,t)}function B0(i,t){i.uniform4uiv(this.addr,t)}function z0(i,t,e){const n=this.cache,s=t.length,r=da(e,s);De(n,r)||(i.uniform1iv(this.addr,r),Ie(n,r));for(let o=0;o!==s;++o)e.setTexture2D(t[o]||td,r[o])}function V0(i,t,e){const n=this.cache,s=t.length,r=da(e,s);De(n,r)||(i.uniform1iv(this.addr,r),Ie(n,r));for(let o=0;o!==s;++o)e.setTexture3D(t[o]||id,r[o])}function G0(i,t,e){const n=this.cache,s=t.length,r=da(e,s);De(n,r)||(i.uniform1iv(this.addr,r),Ie(n,r));for(let o=0;o!==s;++o)e.setTextureCube(t[o]||sd,r[o])}function H0(i,t,e){const n=this.cache,s=t.length,r=da(e,s);De(n,r)||(i.uniform1iv(this.addr,r),Ie(n,r));for(let o=0;o!==s;++o)e.setTexture2DArray(t[o]||nd,r[o])}function W0(i){switch(i){case 5126:return E0;case 35664:return b0;case 35665:return A0;case 35666:return C0;case 35674:return R0;case 35675:return P0;case 35676:return D0;case 5124:case 35670:return I0;case 35667:case 35671:return N0;case 35668:case 35672:return L0;case 35669:case 35673:return O0;case 5125:return U0;case 36294:return F0;case 36295:return k0;case 36296:return B0;case 35678:case 36198:case 36298:case 36306:case 35682:return z0;case 35679:case 36299:case 36307:return V0;case 35680:case 36300:case 36308:case 36293:return G0;case 36289:case 36303:case 36311:case 36292:return H0}}class q0{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=w0(e.type)}}class X0{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=W0(e.type)}}class Y0{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const s=this.seq;for(let r=0,o=s.length;r!==o;++r){const a=s[r];a.setValue(t,e[a.id],n)}}}const rc=/(\w+)(\])?(\[|\.)?/g;function Fh(i,t){i.seq.push(t),i.map[t.id]=t}function j0(i,t,e){const n=i.name,s=n.length;for(rc.lastIndex=0;;){const r=rc.exec(n),o=rc.lastIndex;let a=r[1];const c=r[2]==="]",l=r[3];if(c&&(a=a|0),l===void 0||l==="["&&o+2===s){Fh(e,l===void 0?new q0(a,i,t):new X0(a,i,t));break}else{let u=e.map[a];u===void 0&&(u=new Y0(a),Fh(e,u)),e=u}}}class Ro{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const r=t.getActiveUniform(e,s),o=t.getUniformLocation(e,r.name);j0(r,o,this)}}setValue(t,e,n,s){const r=this.map[e];r!==void 0&&r.setValue(t,n,s)}setOptional(t,e,n){const s=e[n];s!==void 0&&this.setValue(t,n,s)}static upload(t,e,n,s){for(let r=0,o=e.length;r!==o;++r){const a=e[r],c=n[a.id];c.needsUpdate!==!1&&a.setValue(t,c.value,s)}}static seqWithValue(t,e){const n=[];for(let s=0,r=t.length;s!==r;++s){const o=t[s];o.id in e&&n.push(o)}return n}}function kh(i,t,e){const n=i.createShader(t);return i.shaderSource(n,e),i.compileShader(n),n}const $0=37297;let Z0=0;function K0(i,t){const e=i.split(`
`),n=[],s=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let o=s;o<r;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}function J0(i){const t=ne.getPrimaries(ne.workingColorSpace),e=ne.getPrimaries(i);let n;switch(t===e?n="":t===Oo&&e===Lo?n="LinearDisplayP3ToLinearSRGB":t===Lo&&e===Oo&&(n="LinearSRGBToLinearDisplayP3"),i){case Oi:case ua:return[n,"LinearTransferOETF"];case Fn:case Uc:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",i),[n,"LinearTransferOETF"]}}function Bh(i,t,e){const n=i.getShaderParameter(t,i.COMPILE_STATUS),s=i.getShaderInfoLog(t).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const o=parseInt(r[1]);return e.toUpperCase()+`

`+s+`

`+K0(i.getShaderSource(t),o)}else return s}function Q0(i,t){const e=J0(t);return`vec4 ${i}( vec4 value ) { return ${e[0]}( ${e[1]}( value ) ); }`}function tv(i,t){let e;switch(t){case $f:e="Linear";break;case Zf:e="Reinhard";break;case Kf:e="OptimizedCineon";break;case Jf:e="ACESFilmic";break;case tp:e="AgX";break;case ep:e="Neutral";break;case Qf:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+i+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function ev(i){return[i.extensionDerivatives||i.envMapCubeUVHeight||i.bumpMap||i.normalMapTangentSpace||i.clearcoatNormalMap||i.flatShading||i.alphaToCoverage||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Us).join(`
`)}function nv(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Us).join(`
`)}function iv(i){const t=[];for(const e in i){const n=i[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function sv(i,t){const e={},n=i.getProgramParameter(t,i.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const r=i.getActiveAttrib(t,s),o=r.name;let a=1;r.type===i.FLOAT_MAT2&&(a=2),r.type===i.FLOAT_MAT3&&(a=3),r.type===i.FLOAT_MAT4&&(a=4),e[o]={type:r.type,location:i.getAttribLocation(t,o),locationSize:a}}return e}function Us(i){return i!==""}function zh(i,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Vh(i,t){return i.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const rv=/^[ \t]*#include +<([\w\d./]+)>/gm;function yc(i){return i.replace(rv,av)}const ov=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function av(i,t){let e=Gt[t];if(e===void 0){const n=ov.get(t);if(n!==void 0)e=Gt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return yc(e)}const cv=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Gh(i){return i.replace(cv,lv)}function lv(i,t,e,n){let s="";for(let r=parseInt(t);r<parseInt(e);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function Hh(i){let t=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	`;return i.isWebGL2&&(t+=`precision ${i.precision} sampler3D;
		precision ${i.precision} sampler2DArray;
		precision ${i.precision} sampler2DShadow;
		precision ${i.precision} samplerCubeShadow;
		precision ${i.precision} sampler2DArrayShadow;
		precision ${i.precision} isampler2D;
		precision ${i.precision} isampler3D;
		precision ${i.precision} isamplerCube;
		precision ${i.precision} isampler2DArray;
		precision ${i.precision} usampler2D;
		precision ${i.precision} usampler3D;
		precision ${i.precision} usamplerCube;
		precision ${i.precision} usampler2DArray;
		`),i.precision==="highp"?t+=`
#define HIGH_PRECISION`:i.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function hv(i){let t="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Ru?t="SHADOWMAP_TYPE_PCF":i.shadowMapType===Tf?t="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Qn&&(t="SHADOWMAP_TYPE_VSM"),t}function uv(i){let t="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Gs:case Hs:t="ENVMAP_TYPE_CUBE";break;case ha:t="ENVMAP_TYPE_CUBE_UV";break}return t}function dv(i){let t="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Hs:t="ENVMAP_MODE_REFRACTION";break}return t}function fv(i){let t="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case Lc:t="ENVMAP_BLENDING_MULTIPLY";break;case Yf:t="ENVMAP_BLENDING_MIX";break;case jf:t="ENVMAP_BLENDING_ADD";break}return t}function pv(i){const t=i.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function mv(i,t,e,n){const s=i.getContext(),r=e.defines;let o=e.vertexShader,a=e.fragmentShader;const c=hv(e),l=uv(e),h=dv(e),u=fv(e),d=pv(e),m=e.isWebGL2?"":ev(e),g=nv(e),_=iv(r),p=s.createProgram();let f,x,y=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(f=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,_].filter(Us).join(`
`),f.length>0&&(f+=`
`),x=[m,"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,_].filter(Us).join(`
`),x.length>0&&(x+=`
`)):(f=[Hh(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,_,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Us).join(`
`),x=[m,Hh(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,_,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+l:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Ei?"#define TONE_MAPPING":"",e.toneMapping!==Ei?Gt.tonemapping_pars_fragment:"",e.toneMapping!==Ei?tv("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Gt.colorspace_pars_fragment,Q0("linearToOutputTexel",e.outputColorSpace),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Us).join(`
`)),o=yc(o),o=zh(o,e),o=Vh(o,e),a=yc(a),a=zh(a,e),a=Vh(a,e),o=Gh(o),a=Gh(a),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,f=[g,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+f,x=["precision mediump sampler2DArray;","#define varying in",e.glslVersion===rh?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===rh?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const S=y+f+o,M=y+x+a,T=kh(s,s.VERTEX_SHADER,S),w=kh(s,s.FRAGMENT_SHADER,M);s.attachShader(p,T),s.attachShader(p,w),e.index0AttributeName!==void 0?s.bindAttribLocation(p,0,e.index0AttributeName):e.morphTargets===!0&&s.bindAttribLocation(p,0,"position"),s.linkProgram(p);function A(I){if(i.debug.checkShaderErrors){const F=s.getProgramInfoLog(p).trim(),D=s.getShaderInfoLog(T).trim(),U=s.getShaderInfoLog(w).trim();let L=!0,V=!0;if(s.getProgramParameter(p,s.LINK_STATUS)===!1)if(L=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(s,p,T,w);else{const z=Bh(s,T,"vertex"),G=Bh(s,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(p,s.VALIDATE_STATUS)+`

Material Name: `+I.name+`
Material Type: `+I.type+`

Program Info Log: `+F+`
`+z+`
`+G)}else F!==""?console.warn("THREE.WebGLProgram: Program Info Log:",F):(D===""||U==="")&&(V=!1);V&&(I.diagnostics={runnable:L,programLog:F,vertexShader:{log:D,prefix:f},fragmentShader:{log:U,prefix:x}})}s.deleteShader(T),s.deleteShader(w),N=new Ro(s,p),v=sv(s,p)}let N;this.getUniforms=function(){return N===void 0&&A(this),N};let v;this.getAttributes=function(){return v===void 0&&A(this),v};let b=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return b===!1&&(b=s.getProgramParameter(p,$0)),b},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(p),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=Z0++,this.cacheKey=t,this.usedTimes=1,this.program=p,this.vertexShader=T,this.fragmentShader=w,this}let gv=0;class _v{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,s=this._getShaderStage(e),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(s)===!1&&(o.add(s),s.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new vv(t),e.set(t,n)),n}}class vv{constructor(t){this.id=gv++,this.code=t,this.usedTimes=0}}function yv(i,t,e,n,s,r,o){const a=new Bc,c=new _v,l=new Set,h=[],u=s.isWebGL2,d=s.logarithmicDepthBuffer,m=s.vertexTextures;let g=s.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(v){return l.add(v),v===0?"uv":`uv${v}`}function f(v,b,I,F,D){const U=F.fog,L=D.geometry,V=v.isMeshStandardMaterial?F.environment:null,z=(v.isMeshStandardMaterial?e:t).get(v.envMap||V),G=z&&z.mapping===ha?z.image.height:null,X=_[v.type];v.precision!==null&&(g=s.getMaxPrecision(v.precision),g!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",g,"instead."));const K=L.morphAttributes.position||L.morphAttributes.normal||L.morphAttributes.color,rt=K!==void 0?K.length:0;let St=0;L.morphAttributes.position!==void 0&&(St=1),L.morphAttributes.normal!==void 0&&(St=2),L.morphAttributes.color!==void 0&&(St=3);let W,Z,ot,vt;if(X){const ae=kn[X];W=ae.vertexShader,Z=ae.fragmentShader}else W=v.vertexShader,Z=v.fragmentShader,c.update(v),ot=c.getVertexShaderID(v),vt=c.getFragmentShaderID(v);const tt=i.getRenderTarget(),mt=D.isInstancedMesh===!0,Xt=D.isBatchedMesh===!0,At=!!v.map,k=!!v.matcap,Re=!!z,wt=!!v.aoMap,Q=!!v.lightMap,nt=!!v.bumpMap,Tt=!!v.normalMap,_t=!!v.displacementMap,pt=!!v.emissiveMap,It=!!v.metalnessMap,P=!!v.roughnessMap,E=v.anisotropy>0,$=v.clearcoat>0,J=v.iridescence>0,st=v.sheen>0,et=v.transmission>0,Bt=E&&!!v.anisotropyMap,Pt=$&&!!v.clearcoatMap,ht=$&&!!v.clearcoatNormalMap,dt=$&&!!v.clearcoatRoughnessMap,zt=J&&!!v.iridescenceMap,at=J&&!!v.iridescenceThicknessMap,Ae=st&&!!v.sheenColorMap,Yt=st&&!!v.sheenRoughnessMap,Et=!!v.specularMap,yt=!!v.specularColorMap,xt=!!v.specularIntensityMap,Zt=et&&!!v.transmissionMap,Ft=et&&!!v.thicknessMap,fe=!!v.gradientMap,O=!!v.alphaMap,ut=v.alphaTest>0,q=!!v.alphaHash,ct=!!v.extensions;let ft=Ei;v.toneMapped&&(tt===null||tt.isXRRenderTarget===!0)&&(ft=i.toneMapping);const jt={isWebGL2:u,shaderID:X,shaderType:v.type,shaderName:v.name,vertexShader:W,fragmentShader:Z,defines:v.defines,customVertexShaderID:ot,customFragmentShaderID:vt,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:g,batching:Xt,instancing:mt,instancingColor:mt&&D.instanceColor!==null,instancingMorph:mt&&D.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:tt===null?i.outputColorSpace:tt.isXRRenderTarget===!0?tt.texture.colorSpace:Oi,alphaToCoverage:!!v.alphaToCoverage,map:At,matcap:k,envMap:Re,envMapMode:Re&&z.mapping,envMapCubeUVHeight:G,aoMap:wt,lightMap:Q,bumpMap:nt,normalMap:Tt,displacementMap:m&&_t,emissiveMap:pt,normalMapObjectSpace:Tt&&v.normalMapType===up,normalMapTangentSpace:Tt&&v.normalMapType===Bu,metalnessMap:It,roughnessMap:P,anisotropy:E,anisotropyMap:Bt,clearcoat:$,clearcoatMap:Pt,clearcoatNormalMap:ht,clearcoatRoughnessMap:dt,iridescence:J,iridescenceMap:zt,iridescenceThicknessMap:at,sheen:st,sheenColorMap:Ae,sheenRoughnessMap:Yt,specularMap:Et,specularColorMap:yt,specularIntensityMap:xt,transmission:et,transmissionMap:Zt,thicknessMap:Ft,gradientMap:fe,opaque:v.transparent===!1&&v.blending===Bs&&v.alphaToCoverage===!1,alphaMap:O,alphaTest:ut,alphaHash:q,combine:v.combine,mapUv:At&&p(v.map.channel),aoMapUv:wt&&p(v.aoMap.channel),lightMapUv:Q&&p(v.lightMap.channel),bumpMapUv:nt&&p(v.bumpMap.channel),normalMapUv:Tt&&p(v.normalMap.channel),displacementMapUv:_t&&p(v.displacementMap.channel),emissiveMapUv:pt&&p(v.emissiveMap.channel),metalnessMapUv:It&&p(v.metalnessMap.channel),roughnessMapUv:P&&p(v.roughnessMap.channel),anisotropyMapUv:Bt&&p(v.anisotropyMap.channel),clearcoatMapUv:Pt&&p(v.clearcoatMap.channel),clearcoatNormalMapUv:ht&&p(v.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:dt&&p(v.clearcoatRoughnessMap.channel),iridescenceMapUv:zt&&p(v.iridescenceMap.channel),iridescenceThicknessMapUv:at&&p(v.iridescenceThicknessMap.channel),sheenColorMapUv:Ae&&p(v.sheenColorMap.channel),sheenRoughnessMapUv:Yt&&p(v.sheenRoughnessMap.channel),specularMapUv:Et&&p(v.specularMap.channel),specularColorMapUv:yt&&p(v.specularColorMap.channel),specularIntensityMapUv:xt&&p(v.specularIntensityMap.channel),transmissionMapUv:Zt&&p(v.transmissionMap.channel),thicknessMapUv:Ft&&p(v.thicknessMap.channel),alphaMapUv:O&&p(v.alphaMap.channel),vertexTangents:!!L.attributes.tangent&&(Tt||E),vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!L.attributes.color&&L.attributes.color.itemSize===4,pointsUvs:D.isPoints===!0&&!!L.attributes.uv&&(At||O),fog:!!U,useFog:v.fog===!0,fogExp2:!!U&&U.isFogExp2,flatShading:v.flatShading===!0,sizeAttenuation:v.sizeAttenuation===!0,logarithmicDepthBuffer:d,skinning:D.isSkinnedMesh===!0,morphTargets:L.morphAttributes.position!==void 0,morphNormals:L.morphAttributes.normal!==void 0,morphColors:L.morphAttributes.color!==void 0,morphTargetsCount:rt,morphTextureStride:St,numDirLights:b.directional.length,numPointLights:b.point.length,numSpotLights:b.spot.length,numSpotLightMaps:b.spotLightMap.length,numRectAreaLights:b.rectArea.length,numHemiLights:b.hemi.length,numDirLightShadows:b.directionalShadowMap.length,numPointLightShadows:b.pointShadowMap.length,numSpotLightShadows:b.spotShadowMap.length,numSpotLightShadowsWithMaps:b.numSpotLightShadowsWithMaps,numLightProbes:b.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:v.dithering,shadowMapEnabled:i.shadowMap.enabled&&I.length>0,shadowMapType:i.shadowMap.type,toneMapping:ft,useLegacyLights:i._useLegacyLights,decodeVideoTexture:At&&v.map.isVideoTexture===!0&&ne.getTransfer(v.map.colorSpace)===he,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===He,flipSided:v.side===sn,useDepthPacking:v.depthPacking>=0,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:ct&&v.extensions.derivatives===!0,extensionFragDepth:ct&&v.extensions.fragDepth===!0,extensionDrawBuffers:ct&&v.extensions.drawBuffers===!0,extensionShaderTextureLOD:ct&&v.extensions.shaderTextureLOD===!0,extensionClipCullDistance:ct&&v.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:ct&&v.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:v.customProgramCacheKey()};return jt.vertexUv1s=l.has(1),jt.vertexUv2s=l.has(2),jt.vertexUv3s=l.has(3),l.clear(),jt}function x(v){const b=[];if(v.shaderID?b.push(v.shaderID):(b.push(v.customVertexShaderID),b.push(v.customFragmentShaderID)),v.defines!==void 0)for(const I in v.defines)b.push(I),b.push(v.defines[I]);return v.isRawShaderMaterial===!1&&(y(b,v),S(b,v),b.push(i.outputColorSpace)),b.push(v.customProgramCacheKey),b.join()}function y(v,b){v.push(b.precision),v.push(b.outputColorSpace),v.push(b.envMapMode),v.push(b.envMapCubeUVHeight),v.push(b.mapUv),v.push(b.alphaMapUv),v.push(b.lightMapUv),v.push(b.aoMapUv),v.push(b.bumpMapUv),v.push(b.normalMapUv),v.push(b.displacementMapUv),v.push(b.emissiveMapUv),v.push(b.metalnessMapUv),v.push(b.roughnessMapUv),v.push(b.anisotropyMapUv),v.push(b.clearcoatMapUv),v.push(b.clearcoatNormalMapUv),v.push(b.clearcoatRoughnessMapUv),v.push(b.iridescenceMapUv),v.push(b.iridescenceThicknessMapUv),v.push(b.sheenColorMapUv),v.push(b.sheenRoughnessMapUv),v.push(b.specularMapUv),v.push(b.specularColorMapUv),v.push(b.specularIntensityMapUv),v.push(b.transmissionMapUv),v.push(b.thicknessMapUv),v.push(b.combine),v.push(b.fogExp2),v.push(b.sizeAttenuation),v.push(b.morphTargetsCount),v.push(b.morphAttributeCount),v.push(b.numDirLights),v.push(b.numPointLights),v.push(b.numSpotLights),v.push(b.numSpotLightMaps),v.push(b.numHemiLights),v.push(b.numRectAreaLights),v.push(b.numDirLightShadows),v.push(b.numPointLightShadows),v.push(b.numSpotLightShadows),v.push(b.numSpotLightShadowsWithMaps),v.push(b.numLightProbes),v.push(b.shadowMapType),v.push(b.toneMapping),v.push(b.numClippingPlanes),v.push(b.numClipIntersection),v.push(b.depthPacking)}function S(v,b){a.disableAll(),b.isWebGL2&&a.enable(0),b.supportsVertexTextures&&a.enable(1),b.instancing&&a.enable(2),b.instancingColor&&a.enable(3),b.instancingMorph&&a.enable(4),b.matcap&&a.enable(5),b.envMap&&a.enable(6),b.normalMapObjectSpace&&a.enable(7),b.normalMapTangentSpace&&a.enable(8),b.clearcoat&&a.enable(9),b.iridescence&&a.enable(10),b.alphaTest&&a.enable(11),b.vertexColors&&a.enable(12),b.vertexAlphas&&a.enable(13),b.vertexUv1s&&a.enable(14),b.vertexUv2s&&a.enable(15),b.vertexUv3s&&a.enable(16),b.vertexTangents&&a.enable(17),b.anisotropy&&a.enable(18),b.alphaHash&&a.enable(19),b.batching&&a.enable(20),v.push(a.mask),a.disableAll(),b.fog&&a.enable(0),b.useFog&&a.enable(1),b.flatShading&&a.enable(2),b.logarithmicDepthBuffer&&a.enable(3),b.skinning&&a.enable(4),b.morphTargets&&a.enable(5),b.morphNormals&&a.enable(6),b.morphColors&&a.enable(7),b.premultipliedAlpha&&a.enable(8),b.shadowMapEnabled&&a.enable(9),b.useLegacyLights&&a.enable(10),b.doubleSided&&a.enable(11),b.flipSided&&a.enable(12),b.useDepthPacking&&a.enable(13),b.dithering&&a.enable(14),b.transmission&&a.enable(15),b.sheen&&a.enable(16),b.opaque&&a.enable(17),b.pointsUvs&&a.enable(18),b.decodeVideoTexture&&a.enable(19),b.alphaToCoverage&&a.enable(20),v.push(a.mask)}function M(v){const b=_[v.type];let I;if(b){const F=kn[b];I=Qp.clone(F.uniforms)}else I=v.uniforms;return I}function T(v,b){let I;for(let F=0,D=h.length;F<D;F++){const U=h[F];if(U.cacheKey===b){I=U,++I.usedTimes;break}}return I===void 0&&(I=new mv(i,b,v,r),h.push(I)),I}function w(v){if(--v.usedTimes===0){const b=h.indexOf(v);h[b]=h[h.length-1],h.pop(),v.destroy()}}function A(v){c.remove(v)}function N(){c.dispose()}return{getParameters:f,getProgramCacheKey:x,getUniforms:M,acquireProgram:T,releaseProgram:w,releaseShaderCache:A,programs:h,dispose:N}}function xv(){let i=new WeakMap;function t(r){let o=i.get(r);return o===void 0&&(o={},i.set(r,o)),o}function e(r){i.delete(r)}function n(r,o,a){i.get(r)[o]=a}function s(){i=new WeakMap}return{get:t,remove:e,update:n,dispose:s}}function Mv(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.material.id!==t.material.id?i.material.id-t.material.id:i.z!==t.z?i.z-t.z:i.id-t.id}function Wh(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.z!==t.z?t.z-i.z:i.id-t.id}function qh(){const i=[];let t=0;const e=[],n=[],s=[];function r(){t=0,e.length=0,n.length=0,s.length=0}function o(u,d,m,g,_,p){let f=i[t];return f===void 0?(f={id:u.id,object:u,geometry:d,material:m,groupOrder:g,renderOrder:u.renderOrder,z:_,group:p},i[t]=f):(f.id=u.id,f.object=u,f.geometry=d,f.material=m,f.groupOrder=g,f.renderOrder=u.renderOrder,f.z=_,f.group=p),t++,f}function a(u,d,m,g,_,p){const f=o(u,d,m,g,_,p);m.transmission>0?n.push(f):m.transparent===!0?s.push(f):e.push(f)}function c(u,d,m,g,_,p){const f=o(u,d,m,g,_,p);m.transmission>0?n.unshift(f):m.transparent===!0?s.unshift(f):e.unshift(f)}function l(u,d){e.length>1&&e.sort(u||Mv),n.length>1&&n.sort(d||Wh),s.length>1&&s.sort(d||Wh)}function h(){for(let u=t,d=i.length;u<d;u++){const m=i[u];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:e,transmissive:n,transparent:s,init:r,push:a,unshift:c,finish:h,sort:l}}function Sv(){let i=new WeakMap;function t(n,s){const r=i.get(n);let o;return r===void 0?(o=new qh,i.set(n,[o])):s>=r.length?(o=new qh,r.push(o)):o=r[s],o}function e(){i=new WeakMap}return{get:t,dispose:e}}function Tv(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new C,color:new Kt};break;case"SpotLight":e={position:new C,direction:new C,color:new Kt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new C,color:new Kt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new C,skyColor:new Kt,groundColor:new Kt};break;case"RectAreaLight":e={color:new Kt,position:new C,halfWidth:new C,halfHeight:new C};break}return i[t.id]=e,e}}}function wv(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ut};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ut};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ut,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[t.id]=e,e}}}let Ev=0;function bv(i,t){return(t.castShadow?2:0)-(i.castShadow?2:0)+(t.map?1:0)-(i.map?1:0)}function Av(i,t){const e=new Tv,n=wv(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)s.probe.push(new C);const r=new C,o=new te,a=new te;function c(h,u){let d=0,m=0,g=0;for(let I=0;I<9;I++)s.probe[I].set(0,0,0);let _=0,p=0,f=0,x=0,y=0,S=0,M=0,T=0,w=0,A=0,N=0;h.sort(bv);const v=u===!0?Math.PI:1;for(let I=0,F=h.length;I<F;I++){const D=h[I],U=D.color,L=D.intensity,V=D.distance,z=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)d+=U.r*L*v,m+=U.g*L*v,g+=U.b*L*v;else if(D.isLightProbe){for(let G=0;G<9;G++)s.probe[G].addScaledVector(D.sh.coefficients[G],L);N++}else if(D.isDirectionalLight){const G=e.get(D);if(G.color.copy(D.color).multiplyScalar(D.intensity*v),D.castShadow){const X=D.shadow,K=n.get(D);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,s.directionalShadow[_]=K,s.directionalShadowMap[_]=z,s.directionalShadowMatrix[_]=D.shadow.matrix,S++}s.directional[_]=G,_++}else if(D.isSpotLight){const G=e.get(D);G.position.setFromMatrixPosition(D.matrixWorld),G.color.copy(U).multiplyScalar(L*v),G.distance=V,G.coneCos=Math.cos(D.angle),G.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),G.decay=D.decay,s.spot[f]=G;const X=D.shadow;if(D.map&&(s.spotLightMap[w]=D.map,w++,X.updateMatrices(D),D.castShadow&&A++),s.spotLightMatrix[f]=X.matrix,D.castShadow){const K=n.get(D);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,s.spotShadow[f]=K,s.spotShadowMap[f]=z,T++}f++}else if(D.isRectAreaLight){const G=e.get(D);G.color.copy(U).multiplyScalar(L),G.halfWidth.set(D.width*.5,0,0),G.halfHeight.set(0,D.height*.5,0),s.rectArea[x]=G,x++}else if(D.isPointLight){const G=e.get(D);if(G.color.copy(D.color).multiplyScalar(D.intensity*v),G.distance=D.distance,G.decay=D.decay,D.castShadow){const X=D.shadow,K=n.get(D);K.shadowBias=X.bias,K.shadowNormalBias=X.normalBias,K.shadowRadius=X.radius,K.shadowMapSize=X.mapSize,K.shadowCameraNear=X.camera.near,K.shadowCameraFar=X.camera.far,s.pointShadow[p]=K,s.pointShadowMap[p]=z,s.pointShadowMatrix[p]=D.shadow.matrix,M++}s.point[p]=G,p++}else if(D.isHemisphereLight){const G=e.get(D);G.skyColor.copy(D.color).multiplyScalar(L*v),G.groundColor.copy(D.groundColor).multiplyScalar(L*v),s.hemi[y]=G,y++}}x>0&&(t.isWebGL2?i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=lt.LTC_FLOAT_1,s.rectAreaLTC2=lt.LTC_FLOAT_2):(s.rectAreaLTC1=lt.LTC_HALF_1,s.rectAreaLTC2=lt.LTC_HALF_2):i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=lt.LTC_FLOAT_1,s.rectAreaLTC2=lt.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=lt.LTC_HALF_1,s.rectAreaLTC2=lt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=d,s.ambient[1]=m,s.ambient[2]=g;const b=s.hash;(b.directionalLength!==_||b.pointLength!==p||b.spotLength!==f||b.rectAreaLength!==x||b.hemiLength!==y||b.numDirectionalShadows!==S||b.numPointShadows!==M||b.numSpotShadows!==T||b.numSpotMaps!==w||b.numLightProbes!==N)&&(s.directional.length=_,s.spot.length=f,s.rectArea.length=x,s.point.length=p,s.hemi.length=y,s.directionalShadow.length=S,s.directionalShadowMap.length=S,s.pointShadow.length=M,s.pointShadowMap.length=M,s.spotShadow.length=T,s.spotShadowMap.length=T,s.directionalShadowMatrix.length=S,s.pointShadowMatrix.length=M,s.spotLightMatrix.length=T+w-A,s.spotLightMap.length=w,s.numSpotLightShadowsWithMaps=A,s.numLightProbes=N,b.directionalLength=_,b.pointLength=p,b.spotLength=f,b.rectAreaLength=x,b.hemiLength=y,b.numDirectionalShadows=S,b.numPointShadows=M,b.numSpotShadows=T,b.numSpotMaps=w,b.numLightProbes=N,s.version=Ev++)}function l(h,u){let d=0,m=0,g=0,_=0,p=0;const f=u.matrixWorldInverse;for(let x=0,y=h.length;x<y;x++){const S=h[x];if(S.isDirectionalLight){const M=s.directional[d];M.direction.setFromMatrixPosition(S.matrixWorld),r.setFromMatrixPosition(S.target.matrixWorld),M.direction.sub(r),M.direction.transformDirection(f),d++}else if(S.isSpotLight){const M=s.spot[g];M.position.setFromMatrixPosition(S.matrixWorld),M.position.applyMatrix4(f),M.direction.setFromMatrixPosition(S.matrixWorld),r.setFromMatrixPosition(S.target.matrixWorld),M.direction.sub(r),M.direction.transformDirection(f),g++}else if(S.isRectAreaLight){const M=s.rectArea[_];M.position.setFromMatrixPosition(S.matrixWorld),M.position.applyMatrix4(f),a.identity(),o.copy(S.matrixWorld),o.premultiply(f),a.extractRotation(o),M.halfWidth.set(S.width*.5,0,0),M.halfHeight.set(0,S.height*.5,0),M.halfWidth.applyMatrix4(a),M.halfHeight.applyMatrix4(a),_++}else if(S.isPointLight){const M=s.point[m];M.position.setFromMatrixPosition(S.matrixWorld),M.position.applyMatrix4(f),m++}else if(S.isHemisphereLight){const M=s.hemi[p];M.direction.setFromMatrixPosition(S.matrixWorld),M.direction.transformDirection(f),p++}}}return{setup:c,setupView:l,state:s}}function Xh(i,t){const e=new Av(i,t),n=[],s=[];function r(){n.length=0,s.length=0}function o(u){n.push(u)}function a(u){s.push(u)}function c(u){e.setup(n,u)}function l(u){e.setupView(n,u)}return{init:r,state:{lightsArray:n,shadowsArray:s,lights:e},setupLights:c,setupLightsView:l,pushLight:o,pushShadow:a}}function Cv(i,t){let e=new WeakMap;function n(r,o=0){const a=e.get(r);let c;return a===void 0?(c=new Xh(i,t),e.set(r,[c])):o>=a.length?(c=new Xh(i,t),a.push(c)):c=a[o],c}function s(){e=new WeakMap}return{get:n,dispose:s}}class Rv extends or{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=lp,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Pv extends or{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const Dv=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Iv=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Nv(i,t,e){let n=new zc;const s=new Ut,r=new Ut,o=new ge,a=new Rv({depthPacking:hp}),c=new Pv,l={},h=e.maxTextureSize,u={[Ri]:sn,[sn]:Ri,[He]:He},d=new Pi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ut},radius:{value:4}},vertexShader:Dv,fragmentShader:Iv}),m=d.clone();m.defines.HORIZONTAL_PASS=1;const g=new an;g.setAttribute("position",new mn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new bt(g,d),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ru;let f=this.type;this.render=function(T,w,A){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||T.length===0)return;const N=i.getRenderTarget(),v=i.getActiveCubeFace(),b=i.getActiveMipmapLevel(),I=i.state;I.setBlending(Ti),I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);const F=f!==Qn&&this.type===Qn,D=f===Qn&&this.type!==Qn;for(let U=0,L=T.length;U<L;U++){const V=T[U],z=V.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",V,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;s.copy(z.mapSize);const G=z.getFrameExtents();if(s.multiply(G),r.copy(z.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/G.x),s.x=r.x*G.x,z.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/G.y),s.y=r.y*G.y,z.mapSize.y=r.y)),z.map===null||F===!0||D===!0){const K=this.type!==Qn?{minFilter:ke,magFilter:ke}:{};z.map!==null&&z.map.dispose(),z.map=new rs(s.x,s.y,K),z.map.texture.name=V.name+".shadowMap",z.camera.updateProjectionMatrix()}i.setRenderTarget(z.map),i.clear();const X=z.getViewportCount();for(let K=0;K<X;K++){const rt=z.getViewport(K);o.set(r.x*rt.x,r.y*rt.y,r.x*rt.z,r.y*rt.w),I.viewport(o),z.updateMatrices(V,K),n=z.getFrustum(),S(w,A,z.camera,V,this.type)}z.isPointLightShadow!==!0&&this.type===Qn&&x(z,A),z.needsUpdate=!1}f=this.type,p.needsUpdate=!1,i.setRenderTarget(N,v,b)};function x(T,w){const A=t.update(_);d.defines.VSM_SAMPLES!==T.blurSamples&&(d.defines.VSM_SAMPLES=T.blurSamples,m.defines.VSM_SAMPLES=T.blurSamples,d.needsUpdate=!0,m.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new rs(s.x,s.y)),d.uniforms.shadow_pass.value=T.map.texture,d.uniforms.resolution.value=T.mapSize,d.uniforms.radius.value=T.radius,i.setRenderTarget(T.mapPass),i.clear(),i.renderBufferDirect(w,null,A,d,_,null),m.uniforms.shadow_pass.value=T.mapPass.texture,m.uniforms.resolution.value=T.mapSize,m.uniforms.radius.value=T.radius,i.setRenderTarget(T.map),i.clear(),i.renderBufferDirect(w,null,A,m,_,null)}function y(T,w,A,N){let v=null;const b=A.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(b!==void 0)v=b;else if(v=A.isPointLight===!0?c:a,i.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0){const I=v.uuid,F=w.uuid;let D=l[I];D===void 0&&(D={},l[I]=D);let U=D[F];U===void 0&&(U=v.clone(),D[F]=U,w.addEventListener("dispose",M)),v=U}if(v.visible=w.visible,v.wireframe=w.wireframe,N===Qn?v.side=w.shadowSide!==null?w.shadowSide:w.side:v.side=w.shadowSide!==null?w.shadowSide:u[w.side],v.alphaMap=w.alphaMap,v.alphaTest=w.alphaTest,v.map=w.map,v.clipShadows=w.clipShadows,v.clippingPlanes=w.clippingPlanes,v.clipIntersection=w.clipIntersection,v.displacementMap=w.displacementMap,v.displacementScale=w.displacementScale,v.displacementBias=w.displacementBias,v.wireframeLinewidth=w.wireframeLinewidth,v.linewidth=w.linewidth,A.isPointLight===!0&&v.isMeshDistanceMaterial===!0){const I=i.properties.get(v);I.light=A}return v}function S(T,w,A,N,v){if(T.visible===!1)return;if(T.layers.test(w.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&v===Qn)&&(!T.frustumCulled||n.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,T.matrixWorld);const F=t.update(T),D=T.material;if(Array.isArray(D)){const U=F.groups;for(let L=0,V=U.length;L<V;L++){const z=U[L],G=D[z.materialIndex];if(G&&G.visible){const X=y(T,G,N,v);T.onBeforeShadow(i,T,w,A,F,X,z),i.renderBufferDirect(A,null,F,X,T,z),T.onAfterShadow(i,T,w,A,F,X,z)}}}else if(D.visible){const U=y(T,D,N,v);T.onBeforeShadow(i,T,w,A,F,U,null),i.renderBufferDirect(A,null,F,U,T,null),T.onAfterShadow(i,T,w,A,F,U,null)}}const I=T.children;for(let F=0,D=I.length;F<D;F++)S(I[F],w,A,N,v)}function M(T){T.target.removeEventListener("dispose",M);for(const A in l){const N=l[A],v=T.target.uuid;v in N&&(N[v].dispose(),delete N[v])}}}function Lv(i,t,e){const n=e.isWebGL2;function s(){let O=!1;const ut=new ge;let q=null;const ct=new ge(0,0,0,0);return{setMask:function(ft){q!==ft&&!O&&(i.colorMask(ft,ft,ft,ft),q=ft)},setLocked:function(ft){O=ft},setClear:function(ft,jt,ae,Fe,vn){vn===!0&&(ft*=Fe,jt*=Fe,ae*=Fe),ut.set(ft,jt,ae,Fe),ct.equals(ut)===!1&&(i.clearColor(ft,jt,ae,Fe),ct.copy(ut))},reset:function(){O=!1,q=null,ct.set(-1,0,0,0)}}}function r(){let O=!1,ut=null,q=null,ct=null;return{setTest:function(ft){ft?mt(i.DEPTH_TEST):Xt(i.DEPTH_TEST)},setMask:function(ft){ut!==ft&&!O&&(i.depthMask(ft),ut=ft)},setFunc:function(ft){if(q!==ft){switch(ft){case zf:i.depthFunc(i.NEVER);break;case Vf:i.depthFunc(i.ALWAYS);break;case Gf:i.depthFunc(i.LESS);break;case Io:i.depthFunc(i.LEQUAL);break;case Hf:i.depthFunc(i.EQUAL);break;case Wf:i.depthFunc(i.GEQUAL);break;case qf:i.depthFunc(i.GREATER);break;case Xf:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}q=ft}},setLocked:function(ft){O=ft},setClear:function(ft){ct!==ft&&(i.clearDepth(ft),ct=ft)},reset:function(){O=!1,ut=null,q=null,ct=null}}}function o(){let O=!1,ut=null,q=null,ct=null,ft=null,jt=null,ae=null,Fe=null,vn=null;return{setTest:function(ce){O||(ce?mt(i.STENCIL_TEST):Xt(i.STENCIL_TEST))},setMask:function(ce){ut!==ce&&!O&&(i.stencilMask(ce),ut=ce)},setFunc:function(ce,Ye,Un){(q!==ce||ct!==Ye||ft!==Un)&&(i.stencilFunc(ce,Ye,Un),q=ce,ct=Ye,ft=Un)},setOp:function(ce,Ye,Un){(jt!==ce||ae!==Ye||Fe!==Un)&&(i.stencilOp(ce,Ye,Un),jt=ce,ae=Ye,Fe=Un)},setLocked:function(ce){O=ce},setClear:function(ce){vn!==ce&&(i.clearStencil(ce),vn=ce)},reset:function(){O=!1,ut=null,q=null,ct=null,ft=null,jt=null,ae=null,Fe=null,vn=null}}}const a=new s,c=new r,l=new o,h=new WeakMap,u=new WeakMap;let d={},m={},g=new WeakMap,_=[],p=null,f=!1,x=null,y=null,S=null,M=null,T=null,w=null,A=null,N=new Kt(0,0,0),v=0,b=!1,I=null,F=null,D=null,U=null,L=null;const V=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let z=!1,G=0;const X=i.getParameter(i.VERSION);X.indexOf("WebGL")!==-1?(G=parseFloat(/^WebGL (\d)/.exec(X)[1]),z=G>=1):X.indexOf("OpenGL ES")!==-1&&(G=parseFloat(/^OpenGL ES (\d)/.exec(X)[1]),z=G>=2);let K=null,rt={};const St=i.getParameter(i.SCISSOR_BOX),W=i.getParameter(i.VIEWPORT),Z=new ge().fromArray(St),ot=new ge().fromArray(W);function vt(O,ut,q,ct){const ft=new Uint8Array(4),jt=i.createTexture();i.bindTexture(O,jt),i.texParameteri(O,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(O,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let ae=0;ae<q;ae++)n&&(O===i.TEXTURE_3D||O===i.TEXTURE_2D_ARRAY)?i.texImage3D(ut,0,i.RGBA,1,1,ct,0,i.RGBA,i.UNSIGNED_BYTE,ft):i.texImage2D(ut+ae,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,ft);return jt}const tt={};tt[i.TEXTURE_2D]=vt(i.TEXTURE_2D,i.TEXTURE_2D,1),tt[i.TEXTURE_CUBE_MAP]=vt(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(tt[i.TEXTURE_2D_ARRAY]=vt(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),tt[i.TEXTURE_3D]=vt(i.TEXTURE_3D,i.TEXTURE_3D,1,1)),a.setClear(0,0,0,1),c.setClear(1),l.setClear(0),mt(i.DEPTH_TEST),c.setFunc(Io),_t(!1),pt(bl),mt(i.CULL_FACE),nt(Ti);function mt(O){d[O]!==!0&&(i.enable(O),d[O]=!0)}function Xt(O){d[O]!==!1&&(i.disable(O),d[O]=!1)}function At(O,ut){return m[O]!==ut?(i.bindFramebuffer(O,ut),m[O]=ut,n&&(O===i.DRAW_FRAMEBUFFER&&(m[i.FRAMEBUFFER]=ut),O===i.FRAMEBUFFER&&(m[i.DRAW_FRAMEBUFFER]=ut)),!0):!1}function k(O,ut){let q=_,ct=!1;if(O){q=g.get(ut),q===void 0&&(q=[],g.set(ut,q));const ft=O.textures;if(q.length!==ft.length||q[0]!==i.COLOR_ATTACHMENT0){for(let jt=0,ae=ft.length;jt<ae;jt++)q[jt]=i.COLOR_ATTACHMENT0+jt;q.length=ft.length,ct=!0}}else q[0]!==i.BACK&&(q[0]=i.BACK,ct=!0);if(ct)if(e.isWebGL2)i.drawBuffers(q);else if(t.has("WEBGL_draw_buffers")===!0)t.get("WEBGL_draw_buffers").drawBuffersWEBGL(q);else throw new Error("THREE.WebGLState: Usage of gl.drawBuffers() require WebGL2 or WEBGL_draw_buffers extension")}function Re(O){return p!==O?(i.useProgram(O),p=O,!0):!1}const wt={[$i]:i.FUNC_ADD,[Ef]:i.FUNC_SUBTRACT,[bf]:i.FUNC_REVERSE_SUBTRACT};if(n)wt[Rl]=i.MIN,wt[Pl]=i.MAX;else{const O=t.get("EXT_blend_minmax");O!==null&&(wt[Rl]=O.MIN_EXT,wt[Pl]=O.MAX_EXT)}const Q={[Af]:i.ZERO,[Cf]:i.ONE,[Rf]:i.SRC_COLOR,[uc]:i.SRC_ALPHA,[Of]:i.SRC_ALPHA_SATURATE,[Nf]:i.DST_COLOR,[Df]:i.DST_ALPHA,[Pf]:i.ONE_MINUS_SRC_COLOR,[dc]:i.ONE_MINUS_SRC_ALPHA,[Lf]:i.ONE_MINUS_DST_COLOR,[If]:i.ONE_MINUS_DST_ALPHA,[Uf]:i.CONSTANT_COLOR,[Ff]:i.ONE_MINUS_CONSTANT_COLOR,[kf]:i.CONSTANT_ALPHA,[Bf]:i.ONE_MINUS_CONSTANT_ALPHA};function nt(O,ut,q,ct,ft,jt,ae,Fe,vn,ce){if(O===Ti){f===!0&&(Xt(i.BLEND),f=!1);return}if(f===!1&&(mt(i.BLEND),f=!0),O!==wf){if(O!==x||ce!==b){if((y!==$i||T!==$i)&&(i.blendEquation(i.FUNC_ADD),y=$i,T=$i),ce)switch(O){case Bs:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case wi:i.blendFunc(i.ONE,i.ONE);break;case Al:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Cl:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case Bs:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case wi:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case Al:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Cl:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}S=null,M=null,w=null,A=null,N.set(0,0,0),v=0,x=O,b=ce}return}ft=ft||ut,jt=jt||q,ae=ae||ct,(ut!==y||ft!==T)&&(i.blendEquationSeparate(wt[ut],wt[ft]),y=ut,T=ft),(q!==S||ct!==M||jt!==w||ae!==A)&&(i.blendFuncSeparate(Q[q],Q[ct],Q[jt],Q[ae]),S=q,M=ct,w=jt,A=ae),(Fe.equals(N)===!1||vn!==v)&&(i.blendColor(Fe.r,Fe.g,Fe.b,vn),N.copy(Fe),v=vn),x=O,b=!1}function Tt(O,ut){O.side===He?Xt(i.CULL_FACE):mt(i.CULL_FACE);let q=O.side===sn;ut&&(q=!q),_t(q),O.blending===Bs&&O.transparent===!1?nt(Ti):nt(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.blendColor,O.blendAlpha,O.premultipliedAlpha),c.setFunc(O.depthFunc),c.setTest(O.depthTest),c.setMask(O.depthWrite),a.setMask(O.colorWrite);const ct=O.stencilWrite;l.setTest(ct),ct&&(l.setMask(O.stencilWriteMask),l.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),l.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),P(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),O.alphaToCoverage===!0?mt(i.SAMPLE_ALPHA_TO_COVERAGE):Xt(i.SAMPLE_ALPHA_TO_COVERAGE)}function _t(O){I!==O&&(O?i.frontFace(i.CW):i.frontFace(i.CCW),I=O)}function pt(O){O!==Mf?(mt(i.CULL_FACE),O!==F&&(O===bl?i.cullFace(i.BACK):O===Sf?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):Xt(i.CULL_FACE),F=O}function It(O){O!==D&&(z&&i.lineWidth(O),D=O)}function P(O,ut,q){O?(mt(i.POLYGON_OFFSET_FILL),(U!==ut||L!==q)&&(i.polygonOffset(ut,q),U=ut,L=q)):Xt(i.POLYGON_OFFSET_FILL)}function E(O){O?mt(i.SCISSOR_TEST):Xt(i.SCISSOR_TEST)}function $(O){O===void 0&&(O=i.TEXTURE0+V-1),K!==O&&(i.activeTexture(O),K=O)}function J(O,ut,q){q===void 0&&(K===null?q=i.TEXTURE0+V-1:q=K);let ct=rt[q];ct===void 0&&(ct={type:void 0,texture:void 0},rt[q]=ct),(ct.type!==O||ct.texture!==ut)&&(K!==q&&(i.activeTexture(q),K=q),i.bindTexture(O,ut||tt[O]),ct.type=O,ct.texture=ut)}function st(){const O=rt[K];O!==void 0&&O.type!==void 0&&(i.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function et(){try{i.compressedTexImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Bt(){try{i.compressedTexImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Pt(){try{i.texSubImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ht(){try{i.texSubImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function dt(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function zt(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function at(){try{i.texStorage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ae(){try{i.texStorage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Yt(){try{i.texImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Et(){try{i.texImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function yt(O){Z.equals(O)===!1&&(i.scissor(O.x,O.y,O.z,O.w),Z.copy(O))}function xt(O){ot.equals(O)===!1&&(i.viewport(O.x,O.y,O.z,O.w),ot.copy(O))}function Zt(O,ut){let q=u.get(ut);q===void 0&&(q=new WeakMap,u.set(ut,q));let ct=q.get(O);ct===void 0&&(ct=i.getUniformBlockIndex(ut,O.name),q.set(O,ct))}function Ft(O,ut){const ct=u.get(ut).get(O);h.get(ut)!==ct&&(i.uniformBlockBinding(ut,ct,O.__bindingPointIndex),h.set(ut,ct))}function fe(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),n===!0&&(i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),d={},K=null,rt={},m={},g=new WeakMap,_=[],p=null,f=!1,x=null,y=null,S=null,M=null,T=null,w=null,A=null,N=new Kt(0,0,0),v=0,b=!1,I=null,F=null,D=null,U=null,L=null,Z.set(0,0,i.canvas.width,i.canvas.height),ot.set(0,0,i.canvas.width,i.canvas.height),a.reset(),c.reset(),l.reset()}return{buffers:{color:a,depth:c,stencil:l},enable:mt,disable:Xt,bindFramebuffer:At,drawBuffers:k,useProgram:Re,setBlending:nt,setMaterial:Tt,setFlipSided:_t,setCullFace:pt,setLineWidth:It,setPolygonOffset:P,setScissorTest:E,activeTexture:$,bindTexture:J,unbindTexture:st,compressedTexImage2D:et,compressedTexImage3D:Bt,texImage2D:Yt,texImage3D:Et,updateUBOMapping:Zt,uniformBlockBinding:Ft,texStorage2D:at,texStorage3D:Ae,texSubImage2D:Pt,texSubImage3D:ht,compressedTexSubImage2D:dt,compressedTexSubImage3D:zt,scissor:yt,viewport:xt,reset:fe}}function Ov(i,t,e,n,s,r,o){const a=s.isWebGL2,c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new Ut,u=new WeakMap;let d;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(P,E){return g?new OffscreenCanvas(P,E):ko("canvas")}function p(P,E,$,J){let st=1;const et=It(P);if((et.width>J||et.height>J)&&(st=J/Math.max(et.width,et.height)),st<1||E===!0)if(typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&P instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&P instanceof ImageBitmap||typeof VideoFrame<"u"&&P instanceof VideoFrame){const Bt=E?Fo:Math.floor,Pt=Bt(st*et.width),ht=Bt(st*et.height);d===void 0&&(d=_(Pt,ht));const dt=$?_(Pt,ht):d;return dt.width=Pt,dt.height=ht,dt.getContext("2d").drawImage(P,0,0,Pt,ht),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+et.width+"x"+et.height+") to ("+Pt+"x"+ht+")."),dt}else return"data"in P&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+et.width+"x"+et.height+")."),P;return P}function f(P){const E=It(P);return vc(E.width)&&vc(E.height)}function x(P){return a?!1:P.wrapS!==Cn||P.wrapT!==Cn||P.minFilter!==ke&&P.minFilter!==tn}function y(P,E){return P.generateMipmaps&&E&&P.minFilter!==ke&&P.minFilter!==tn}function S(P){i.generateMipmap(P)}function M(P,E,$,J,st=!1){if(a===!1)return E;if(P!==null){if(i[P]!==void 0)return i[P];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+P+"'")}let et=E;if(E===i.RED&&($===i.FLOAT&&(et=i.R32F),$===i.HALF_FLOAT&&(et=i.R16F),$===i.UNSIGNED_BYTE&&(et=i.R8)),E===i.RED_INTEGER&&($===i.UNSIGNED_BYTE&&(et=i.R8UI),$===i.UNSIGNED_SHORT&&(et=i.R16UI),$===i.UNSIGNED_INT&&(et=i.R32UI),$===i.BYTE&&(et=i.R8I),$===i.SHORT&&(et=i.R16I),$===i.INT&&(et=i.R32I)),E===i.RG&&($===i.FLOAT&&(et=i.RG32F),$===i.HALF_FLOAT&&(et=i.RG16F),$===i.UNSIGNED_BYTE&&(et=i.RG8)),E===i.RG_INTEGER&&($===i.UNSIGNED_BYTE&&(et=i.RG8UI),$===i.UNSIGNED_SHORT&&(et=i.RG16UI),$===i.UNSIGNED_INT&&(et=i.RG32UI),$===i.BYTE&&(et=i.RG8I),$===i.SHORT&&(et=i.RG16I),$===i.INT&&(et=i.RG32I)),E===i.RGBA){const Bt=st?No:ne.getTransfer(J);$===i.FLOAT&&(et=i.RGBA32F),$===i.HALF_FLOAT&&(et=i.RGBA16F),$===i.UNSIGNED_BYTE&&(et=Bt===he?i.SRGB8_ALPHA8:i.RGBA8),$===i.UNSIGNED_SHORT_4_4_4_4&&(et=i.RGBA4),$===i.UNSIGNED_SHORT_5_5_5_1&&(et=i.RGB5_A1)}return(et===i.R16F||et===i.R32F||et===i.RG16F||et===i.RG32F||et===i.RGBA16F||et===i.RGBA32F)&&t.get("EXT_color_buffer_float"),et}function T(P,E,$){return y(P,$)===!0||P.isFramebufferTexture&&P.minFilter!==ke&&P.minFilter!==tn?Math.log2(Math.max(E.width,E.height))+1:P.mipmaps!==void 0&&P.mipmaps.length>0?P.mipmaps.length:P.isCompressedTexture&&Array.isArray(P.image)?E.mipmaps.length:1}function w(P){return P===ke||P===Dl||P===pr?i.NEAREST:i.LINEAR}function A(P){const E=P.target;E.removeEventListener("dispose",A),v(E),E.isVideoTexture&&u.delete(E)}function N(P){const E=P.target;E.removeEventListener("dispose",N),I(E)}function v(P){const E=n.get(P);if(E.__webglInit===void 0)return;const $=P.source,J=m.get($);if(J){const st=J[E.__cacheKey];st.usedTimes--,st.usedTimes===0&&b(P),Object.keys(J).length===0&&m.delete($)}n.remove(P)}function b(P){const E=n.get(P);i.deleteTexture(E.__webglTexture);const $=P.source,J=m.get($);delete J[E.__cacheKey],o.memory.textures--}function I(P){const E=n.get(P);if(P.depthTexture&&P.depthTexture.dispose(),P.isWebGLCubeRenderTarget)for(let J=0;J<6;J++){if(Array.isArray(E.__webglFramebuffer[J]))for(let st=0;st<E.__webglFramebuffer[J].length;st++)i.deleteFramebuffer(E.__webglFramebuffer[J][st]);else i.deleteFramebuffer(E.__webglFramebuffer[J]);E.__webglDepthbuffer&&i.deleteRenderbuffer(E.__webglDepthbuffer[J])}else{if(Array.isArray(E.__webglFramebuffer))for(let J=0;J<E.__webglFramebuffer.length;J++)i.deleteFramebuffer(E.__webglFramebuffer[J]);else i.deleteFramebuffer(E.__webglFramebuffer);if(E.__webglDepthbuffer&&i.deleteRenderbuffer(E.__webglDepthbuffer),E.__webglMultisampledFramebuffer&&i.deleteFramebuffer(E.__webglMultisampledFramebuffer),E.__webglColorRenderbuffer)for(let J=0;J<E.__webglColorRenderbuffer.length;J++)E.__webglColorRenderbuffer[J]&&i.deleteRenderbuffer(E.__webglColorRenderbuffer[J]);E.__webglDepthRenderbuffer&&i.deleteRenderbuffer(E.__webglDepthRenderbuffer)}const $=P.textures;for(let J=0,st=$.length;J<st;J++){const et=n.get($[J]);et.__webglTexture&&(i.deleteTexture(et.__webglTexture),o.memory.textures--),n.remove($[J])}n.remove(P)}let F=0;function D(){F=0}function U(){const P=F;return P>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+P+" texture units while this GPU supports only "+s.maxTextures),F+=1,P}function L(P){const E=[];return E.push(P.wrapS),E.push(P.wrapT),E.push(P.wrapR||0),E.push(P.magFilter),E.push(P.minFilter),E.push(P.anisotropy),E.push(P.internalFormat),E.push(P.format),E.push(P.type),E.push(P.generateMipmaps),E.push(P.premultiplyAlpha),E.push(P.flipY),E.push(P.unpackAlignment),E.push(P.colorSpace),E.join()}function V(P,E){const $=n.get(P);if(P.isVideoTexture&&_t(P),P.isRenderTargetTexture===!1&&P.version>0&&$.__version!==P.version){const J=P.image;if(J===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(J.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ot($,P,E);return}}e.bindTexture(i.TEXTURE_2D,$.__webglTexture,i.TEXTURE0+E)}function z(P,E){const $=n.get(P);if(P.version>0&&$.__version!==P.version){ot($,P,E);return}e.bindTexture(i.TEXTURE_2D_ARRAY,$.__webglTexture,i.TEXTURE0+E)}function G(P,E){const $=n.get(P);if(P.version>0&&$.__version!==P.version){ot($,P,E);return}e.bindTexture(i.TEXTURE_3D,$.__webglTexture,i.TEXTURE0+E)}function X(P,E){const $=n.get(P);if(P.version>0&&$.__version!==P.version){vt($,P,E);return}e.bindTexture(i.TEXTURE_CUBE_MAP,$.__webglTexture,i.TEXTURE0+E)}const K={[mc]:i.REPEAT,[Cn]:i.CLAMP_TO_EDGE,[gc]:i.MIRRORED_REPEAT},rt={[ke]:i.NEAREST,[Dl]:i.NEAREST_MIPMAP_NEAREST,[pr]:i.NEAREST_MIPMAP_LINEAR,[tn]:i.LINEAR,[Ra]:i.LINEAR_MIPMAP_NEAREST,[Ji]:i.LINEAR_MIPMAP_LINEAR},St={[dp]:i.NEVER,[vp]:i.ALWAYS,[fp]:i.LESS,[zu]:i.LEQUAL,[pp]:i.EQUAL,[_p]:i.GEQUAL,[mp]:i.GREATER,[gp]:i.NOTEQUAL};function W(P,E,$){if(E.type===Bn&&t.has("OES_texture_float_linear")===!1&&(E.magFilter===tn||E.magFilter===Ra||E.magFilter===pr||E.magFilter===Ji||E.minFilter===tn||E.minFilter===Ra||E.minFilter===pr||E.minFilter===Ji)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),$?(i.texParameteri(P,i.TEXTURE_WRAP_S,K[E.wrapS]),i.texParameteri(P,i.TEXTURE_WRAP_T,K[E.wrapT]),(P===i.TEXTURE_3D||P===i.TEXTURE_2D_ARRAY)&&i.texParameteri(P,i.TEXTURE_WRAP_R,K[E.wrapR]),i.texParameteri(P,i.TEXTURE_MAG_FILTER,rt[E.magFilter]),i.texParameteri(P,i.TEXTURE_MIN_FILTER,rt[E.minFilter])):(i.texParameteri(P,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(P,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),(P===i.TEXTURE_3D||P===i.TEXTURE_2D_ARRAY)&&i.texParameteri(P,i.TEXTURE_WRAP_R,i.CLAMP_TO_EDGE),(E.wrapS!==Cn||E.wrapT!==Cn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(P,i.TEXTURE_MAG_FILTER,w(E.magFilter)),i.texParameteri(P,i.TEXTURE_MIN_FILTER,w(E.minFilter)),E.minFilter!==ke&&E.minFilter!==tn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),E.compareFunction&&(i.texParameteri(P,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(P,i.TEXTURE_COMPARE_FUNC,St[E.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(E.magFilter===ke||E.minFilter!==pr&&E.minFilter!==Ji||E.type===Bn&&t.has("OES_texture_float_linear")===!1||a===!1&&E.type===br&&t.has("OES_texture_half_float_linear")===!1)return;if(E.anisotropy>1||n.get(E).__currentAnisotropy){const J=t.get("EXT_texture_filter_anisotropic");i.texParameterf(P,J.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,s.getMaxAnisotropy())),n.get(E).__currentAnisotropy=E.anisotropy}}}function Z(P,E){let $=!1;P.__webglInit===void 0&&(P.__webglInit=!0,E.addEventListener("dispose",A));const J=E.source;let st=m.get(J);st===void 0&&(st={},m.set(J,st));const et=L(E);if(et!==P.__cacheKey){st[et]===void 0&&(st[et]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,$=!0),st[et].usedTimes++;const Bt=st[P.__cacheKey];Bt!==void 0&&(st[P.__cacheKey].usedTimes--,Bt.usedTimes===0&&b(E)),P.__cacheKey=et,P.__webglTexture=st[et].texture}return $}function ot(P,E,$){let J=i.TEXTURE_2D;(E.isDataArrayTexture||E.isCompressedArrayTexture)&&(J=i.TEXTURE_2D_ARRAY),E.isData3DTexture&&(J=i.TEXTURE_3D);const st=Z(P,E),et=E.source;e.bindTexture(J,P.__webglTexture,i.TEXTURE0+$);const Bt=n.get(et);if(et.version!==Bt.__version||st===!0){e.activeTexture(i.TEXTURE0+$);const Pt=ne.getPrimaries(ne.workingColorSpace),ht=E.colorSpace===Mi?null:ne.getPrimaries(E.colorSpace),dt=E.colorSpace===Mi||Pt===ht?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,E.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,E.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,dt);const zt=x(E)&&f(E.image)===!1;let at=p(E.image,zt,!1,s.maxTextureSize);at=pt(E,at);const Ae=f(at)||a,Yt=r.convert(E.format,E.colorSpace);let Et=r.convert(E.type),yt=M(E.internalFormat,Yt,Et,E.colorSpace,E.isVideoTexture);W(J,E,Ae);let xt;const Zt=E.mipmaps,Ft=a&&E.isVideoTexture!==!0&&yt!==ku,fe=Bt.__version===void 0||st===!0,O=et.dataReady,ut=T(E,at,Ae);if(E.isDepthTexture)yt=i.DEPTH_COMPONENT,a?E.type===Bn?yt=i.DEPTH_COMPONENT32F:E.type===Si?yt=i.DEPTH_COMPONENT24:E.type===ts?yt=i.DEPTH24_STENCIL8:yt=i.DEPTH_COMPONENT16:E.type===Bn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===es&&yt===i.DEPTH_COMPONENT&&E.type!==Oc&&E.type!==Si&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=Si,Et=r.convert(E.type)),E.format===Ws&&yt===i.DEPTH_COMPONENT&&(yt=i.DEPTH_STENCIL,E.type!==ts&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=ts,Et=r.convert(E.type))),fe&&(Ft?e.texStorage2D(i.TEXTURE_2D,1,yt,at.width,at.height):e.texImage2D(i.TEXTURE_2D,0,yt,at.width,at.height,0,Yt,Et,null));else if(E.isDataTexture)if(Zt.length>0&&Ae){Ft&&fe&&e.texStorage2D(i.TEXTURE_2D,ut,yt,Zt[0].width,Zt[0].height);for(let q=0,ct=Zt.length;q<ct;q++)xt=Zt[q],Ft?O&&e.texSubImage2D(i.TEXTURE_2D,q,0,0,xt.width,xt.height,Yt,Et,xt.data):e.texImage2D(i.TEXTURE_2D,q,yt,xt.width,xt.height,0,Yt,Et,xt.data);E.generateMipmaps=!1}else Ft?(fe&&e.texStorage2D(i.TEXTURE_2D,ut,yt,at.width,at.height),O&&e.texSubImage2D(i.TEXTURE_2D,0,0,0,at.width,at.height,Yt,Et,at.data)):e.texImage2D(i.TEXTURE_2D,0,yt,at.width,at.height,0,Yt,Et,at.data);else if(E.isCompressedTexture)if(E.isCompressedArrayTexture){Ft&&fe&&e.texStorage3D(i.TEXTURE_2D_ARRAY,ut,yt,Zt[0].width,Zt[0].height,at.depth);for(let q=0,ct=Zt.length;q<ct;q++)xt=Zt[q],E.format!==Rn?Yt!==null?Ft?O&&e.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,q,0,0,0,xt.width,xt.height,at.depth,Yt,xt.data,0,0):e.compressedTexImage3D(i.TEXTURE_2D_ARRAY,q,yt,xt.width,xt.height,at.depth,0,xt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ft?O&&e.texSubImage3D(i.TEXTURE_2D_ARRAY,q,0,0,0,xt.width,xt.height,at.depth,Yt,Et,xt.data):e.texImage3D(i.TEXTURE_2D_ARRAY,q,yt,xt.width,xt.height,at.depth,0,Yt,Et,xt.data)}else{Ft&&fe&&e.texStorage2D(i.TEXTURE_2D,ut,yt,Zt[0].width,Zt[0].height);for(let q=0,ct=Zt.length;q<ct;q++)xt=Zt[q],E.format!==Rn?Yt!==null?Ft?O&&e.compressedTexSubImage2D(i.TEXTURE_2D,q,0,0,xt.width,xt.height,Yt,xt.data):e.compressedTexImage2D(i.TEXTURE_2D,q,yt,xt.width,xt.height,0,xt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ft?O&&e.texSubImage2D(i.TEXTURE_2D,q,0,0,xt.width,xt.height,Yt,Et,xt.data):e.texImage2D(i.TEXTURE_2D,q,yt,xt.width,xt.height,0,Yt,Et,xt.data)}else if(E.isDataArrayTexture)Ft?(fe&&e.texStorage3D(i.TEXTURE_2D_ARRAY,ut,yt,at.width,at.height,at.depth),O&&e.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,at.width,at.height,at.depth,Yt,Et,at.data)):e.texImage3D(i.TEXTURE_2D_ARRAY,0,yt,at.width,at.height,at.depth,0,Yt,Et,at.data);else if(E.isData3DTexture)Ft?(fe&&e.texStorage3D(i.TEXTURE_3D,ut,yt,at.width,at.height,at.depth),O&&e.texSubImage3D(i.TEXTURE_3D,0,0,0,0,at.width,at.height,at.depth,Yt,Et,at.data)):e.texImage3D(i.TEXTURE_3D,0,yt,at.width,at.height,at.depth,0,Yt,Et,at.data);else if(E.isFramebufferTexture){if(fe)if(Ft)e.texStorage2D(i.TEXTURE_2D,ut,yt,at.width,at.height);else{let q=at.width,ct=at.height;for(let ft=0;ft<ut;ft++)e.texImage2D(i.TEXTURE_2D,ft,yt,q,ct,0,Yt,Et,null),q>>=1,ct>>=1}}else if(Zt.length>0&&Ae){if(Ft&&fe){const q=It(Zt[0]);e.texStorage2D(i.TEXTURE_2D,ut,yt,q.width,q.height)}for(let q=0,ct=Zt.length;q<ct;q++)xt=Zt[q],Ft?O&&e.texSubImage2D(i.TEXTURE_2D,q,0,0,Yt,Et,xt):e.texImage2D(i.TEXTURE_2D,q,yt,Yt,Et,xt);E.generateMipmaps=!1}else if(Ft){if(fe){const q=It(at);e.texStorage2D(i.TEXTURE_2D,ut,yt,q.width,q.height)}O&&e.texSubImage2D(i.TEXTURE_2D,0,0,0,Yt,Et,at)}else e.texImage2D(i.TEXTURE_2D,0,yt,Yt,Et,at);y(E,Ae)&&S(J),Bt.__version=et.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function vt(P,E,$){if(E.image.length!==6)return;const J=Z(P,E),st=E.source;e.bindTexture(i.TEXTURE_CUBE_MAP,P.__webglTexture,i.TEXTURE0+$);const et=n.get(st);if(st.version!==et.__version||J===!0){e.activeTexture(i.TEXTURE0+$);const Bt=ne.getPrimaries(ne.workingColorSpace),Pt=E.colorSpace===Mi?null:ne.getPrimaries(E.colorSpace),ht=E.colorSpace===Mi||Bt===Pt?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,E.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,E.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,E.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,ht);const dt=E.isCompressedTexture||E.image[0].isCompressedTexture,zt=E.image[0]&&E.image[0].isDataTexture,at=[];for(let q=0;q<6;q++)!dt&&!zt?at[q]=p(E.image[q],!1,!0,s.maxCubemapSize):at[q]=zt?E.image[q].image:E.image[q],at[q]=pt(E,at[q]);const Ae=at[0],Yt=f(Ae)||a,Et=r.convert(E.format,E.colorSpace),yt=r.convert(E.type),xt=M(E.internalFormat,Et,yt,E.colorSpace),Zt=a&&E.isVideoTexture!==!0,Ft=et.__version===void 0||J===!0,fe=st.dataReady;let O=T(E,Ae,Yt);W(i.TEXTURE_CUBE_MAP,E,Yt);let ut;if(dt){Zt&&Ft&&e.texStorage2D(i.TEXTURE_CUBE_MAP,O,xt,Ae.width,Ae.height);for(let q=0;q<6;q++){ut=at[q].mipmaps;for(let ct=0;ct<ut.length;ct++){const ft=ut[ct];E.format!==Rn?Et!==null?Zt?fe&&e.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,ct,0,0,ft.width,ft.height,Et,ft.data):e.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,ct,xt,ft.width,ft.height,0,ft.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Zt?fe&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,ct,0,0,ft.width,ft.height,Et,yt,ft.data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,ct,xt,ft.width,ft.height,0,Et,yt,ft.data)}}}else{if(ut=E.mipmaps,Zt&&Ft){ut.length>0&&O++;const q=It(at[0]);e.texStorage2D(i.TEXTURE_CUBE_MAP,O,xt,q.width,q.height)}for(let q=0;q<6;q++)if(zt){Zt?fe&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,0,0,at[q].width,at[q].height,Et,yt,at[q].data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,xt,at[q].width,at[q].height,0,Et,yt,at[q].data);for(let ct=0;ct<ut.length;ct++){const jt=ut[ct].image[q].image;Zt?fe&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,ct+1,0,0,jt.width,jt.height,Et,yt,jt.data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,ct+1,xt,jt.width,jt.height,0,Et,yt,jt.data)}}else{Zt?fe&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,0,0,Et,yt,at[q]):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,0,xt,Et,yt,at[q]);for(let ct=0;ct<ut.length;ct++){const ft=ut[ct];Zt?fe&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,ct+1,0,0,Et,yt,ft.image[q]):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+q,ct+1,xt,Et,yt,ft.image[q])}}}y(E,Yt)&&S(i.TEXTURE_CUBE_MAP),et.__version=st.version,E.onUpdate&&E.onUpdate(E)}P.__version=E.version}function tt(P,E,$,J,st,et){const Bt=r.convert($.format,$.colorSpace),Pt=r.convert($.type),ht=M($.internalFormat,Bt,Pt,$.colorSpace);if(!n.get(E).__hasExternalTextures){const zt=Math.max(1,E.width>>et),at=Math.max(1,E.height>>et);st===i.TEXTURE_3D||st===i.TEXTURE_2D_ARRAY?e.texImage3D(st,et,ht,zt,at,E.depth,0,Bt,Pt,null):e.texImage2D(st,et,ht,zt,at,0,Bt,Pt,null)}e.bindFramebuffer(i.FRAMEBUFFER,P),Tt(E)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,J,st,n.get($).__webglTexture,0,nt(E)):(st===i.TEXTURE_2D||st>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&st<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,J,st,n.get($).__webglTexture,et),e.bindFramebuffer(i.FRAMEBUFFER,null)}function mt(P,E,$){if(i.bindRenderbuffer(i.RENDERBUFFER,P),E.depthBuffer&&!E.stencilBuffer){let J=a===!0?i.DEPTH_COMPONENT24:i.DEPTH_COMPONENT16;if($||Tt(E)){const st=E.depthTexture;st&&st.isDepthTexture&&(st.type===Bn?J=i.DEPTH_COMPONENT32F:st.type===Si&&(J=i.DEPTH_COMPONENT24));const et=nt(E);Tt(E)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,et,J,E.width,E.height):i.renderbufferStorageMultisample(i.RENDERBUFFER,et,J,E.width,E.height)}else i.renderbufferStorage(i.RENDERBUFFER,J,E.width,E.height);i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,P)}else if(E.depthBuffer&&E.stencilBuffer){const J=nt(E);$&&Tt(E)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,J,i.DEPTH24_STENCIL8,E.width,E.height):Tt(E)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,J,i.DEPTH24_STENCIL8,E.width,E.height):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,E.width,E.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,P)}else{const J=E.textures;for(let st=0;st<J.length;st++){const et=J[st],Bt=r.convert(et.format,et.colorSpace),Pt=r.convert(et.type),ht=M(et.internalFormat,Bt,Pt,et.colorSpace),dt=nt(E);$&&Tt(E)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,dt,ht,E.width,E.height):Tt(E)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,dt,ht,E.width,E.height):i.renderbufferStorage(i.RENDERBUFFER,ht,E.width,E.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function Xt(P,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(i.FRAMEBUFFER,P),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),V(E.depthTexture,0);const J=n.get(E.depthTexture).__webglTexture,st=nt(E);if(E.depthTexture.format===es)Tt(E)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,J,0,st):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,J,0);else if(E.depthTexture.format===Ws)Tt(E)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,J,0,st):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,J,0);else throw new Error("Unknown depthTexture format")}function At(P){const E=n.get(P),$=P.isWebGLCubeRenderTarget===!0;if(P.depthTexture&&!E.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");Xt(E.__webglFramebuffer,P)}else if($){E.__webglDepthbuffer=[];for(let J=0;J<6;J++)e.bindFramebuffer(i.FRAMEBUFFER,E.__webglFramebuffer[J]),E.__webglDepthbuffer[J]=i.createRenderbuffer(),mt(E.__webglDepthbuffer[J],P,!1)}else e.bindFramebuffer(i.FRAMEBUFFER,E.__webglFramebuffer),E.__webglDepthbuffer=i.createRenderbuffer(),mt(E.__webglDepthbuffer,P,!1);e.bindFramebuffer(i.FRAMEBUFFER,null)}function k(P,E,$){const J=n.get(P);E!==void 0&&tt(J.__webglFramebuffer,P,P.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),$!==void 0&&At(P)}function Re(P){const E=P.texture,$=n.get(P),J=n.get(E);P.addEventListener("dispose",N);const st=P.textures,et=P.isWebGLCubeRenderTarget===!0,Bt=st.length>1,Pt=f(P)||a;if(Bt||(J.__webglTexture===void 0&&(J.__webglTexture=i.createTexture()),J.__version=E.version,o.memory.textures++),et){$.__webglFramebuffer=[];for(let ht=0;ht<6;ht++)if(a&&E.mipmaps&&E.mipmaps.length>0){$.__webglFramebuffer[ht]=[];for(let dt=0;dt<E.mipmaps.length;dt++)$.__webglFramebuffer[ht][dt]=i.createFramebuffer()}else $.__webglFramebuffer[ht]=i.createFramebuffer()}else{if(a&&E.mipmaps&&E.mipmaps.length>0){$.__webglFramebuffer=[];for(let ht=0;ht<E.mipmaps.length;ht++)$.__webglFramebuffer[ht]=i.createFramebuffer()}else $.__webglFramebuffer=i.createFramebuffer();if(Bt)if(s.drawBuffers)for(let ht=0,dt=st.length;ht<dt;ht++){const zt=n.get(st[ht]);zt.__webglTexture===void 0&&(zt.__webglTexture=i.createTexture(),o.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&P.samples>0&&Tt(P)===!1){$.__webglMultisampledFramebuffer=i.createFramebuffer(),$.__webglColorRenderbuffer=[],e.bindFramebuffer(i.FRAMEBUFFER,$.__webglMultisampledFramebuffer);for(let ht=0;ht<st.length;ht++){const dt=st[ht];$.__webglColorRenderbuffer[ht]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,$.__webglColorRenderbuffer[ht]);const zt=r.convert(dt.format,dt.colorSpace),at=r.convert(dt.type),Ae=M(dt.internalFormat,zt,at,dt.colorSpace,P.isXRRenderTarget===!0),Yt=nt(P);i.renderbufferStorageMultisample(i.RENDERBUFFER,Yt,Ae,P.width,P.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ht,i.RENDERBUFFER,$.__webglColorRenderbuffer[ht])}i.bindRenderbuffer(i.RENDERBUFFER,null),P.depthBuffer&&($.__webglDepthRenderbuffer=i.createRenderbuffer(),mt($.__webglDepthRenderbuffer,P,!0)),e.bindFramebuffer(i.FRAMEBUFFER,null)}}if(et){e.bindTexture(i.TEXTURE_CUBE_MAP,J.__webglTexture),W(i.TEXTURE_CUBE_MAP,E,Pt);for(let ht=0;ht<6;ht++)if(a&&E.mipmaps&&E.mipmaps.length>0)for(let dt=0;dt<E.mipmaps.length;dt++)tt($.__webglFramebuffer[ht][dt],P,E,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,dt);else tt($.__webglFramebuffer[ht],P,E,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+ht,0);y(E,Pt)&&S(i.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Bt){for(let ht=0,dt=st.length;ht<dt;ht++){const zt=st[ht],at=n.get(zt);e.bindTexture(i.TEXTURE_2D,at.__webglTexture),W(i.TEXTURE_2D,zt,Pt),tt($.__webglFramebuffer,P,zt,i.COLOR_ATTACHMENT0+ht,i.TEXTURE_2D,0),y(zt,Pt)&&S(i.TEXTURE_2D)}e.unbindTexture()}else{let ht=i.TEXTURE_2D;if((P.isWebGL3DRenderTarget||P.isWebGLArrayRenderTarget)&&(a?ht=P.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(ht,J.__webglTexture),W(ht,E,Pt),a&&E.mipmaps&&E.mipmaps.length>0)for(let dt=0;dt<E.mipmaps.length;dt++)tt($.__webglFramebuffer[dt],P,E,i.COLOR_ATTACHMENT0,ht,dt);else tt($.__webglFramebuffer,P,E,i.COLOR_ATTACHMENT0,ht,0);y(E,Pt)&&S(ht),e.unbindTexture()}P.depthBuffer&&At(P)}function wt(P){const E=f(P)||a,$=P.textures;for(let J=0,st=$.length;J<st;J++){const et=$[J];if(y(et,E)){const Bt=P.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:i.TEXTURE_2D,Pt=n.get(et).__webglTexture;e.bindTexture(Bt,Pt),S(Bt),e.unbindTexture()}}}function Q(P){if(a&&P.samples>0&&Tt(P)===!1){const E=P.textures,$=P.width,J=P.height;let st=i.COLOR_BUFFER_BIT;const et=[],Bt=P.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Pt=n.get(P),ht=E.length>1;if(ht)for(let dt=0;dt<E.length;dt++)e.bindFramebuffer(i.FRAMEBUFFER,Pt.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+dt,i.RENDERBUFFER,null),e.bindFramebuffer(i.FRAMEBUFFER,Pt.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+dt,i.TEXTURE_2D,null,0);e.bindFramebuffer(i.READ_FRAMEBUFFER,Pt.__webglMultisampledFramebuffer),e.bindFramebuffer(i.DRAW_FRAMEBUFFER,Pt.__webglFramebuffer);for(let dt=0;dt<E.length;dt++){et.push(i.COLOR_ATTACHMENT0+dt),P.depthBuffer&&et.push(Bt);const zt=Pt.__ignoreDepthValues!==void 0?Pt.__ignoreDepthValues:!1;if(zt===!1&&(P.depthBuffer&&(st|=i.DEPTH_BUFFER_BIT),P.stencilBuffer&&(st|=i.STENCIL_BUFFER_BIT)),ht&&i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,Pt.__webglColorRenderbuffer[dt]),zt===!0&&(i.invalidateFramebuffer(i.READ_FRAMEBUFFER,[Bt]),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[Bt])),ht){const at=n.get(E[dt]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,at,0)}i.blitFramebuffer(0,0,$,J,0,0,$,J,st,i.NEAREST),l&&i.invalidateFramebuffer(i.READ_FRAMEBUFFER,et)}if(e.bindFramebuffer(i.READ_FRAMEBUFFER,null),e.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),ht)for(let dt=0;dt<E.length;dt++){e.bindFramebuffer(i.FRAMEBUFFER,Pt.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+dt,i.RENDERBUFFER,Pt.__webglColorRenderbuffer[dt]);const zt=n.get(E[dt]).__webglTexture;e.bindFramebuffer(i.FRAMEBUFFER,Pt.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+dt,i.TEXTURE_2D,zt,0)}e.bindFramebuffer(i.DRAW_FRAMEBUFFER,Pt.__webglMultisampledFramebuffer)}}function nt(P){return Math.min(s.maxSamples,P.samples)}function Tt(P){const E=n.get(P);return a&&P.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function _t(P){const E=o.render.frame;u.get(P)!==E&&(u.set(P,E),P.update())}function pt(P,E){const $=P.colorSpace,J=P.format,st=P.type;return P.isCompressedTexture===!0||P.isVideoTexture===!0||P.format===_c||$!==Oi&&$!==Mi&&(ne.getTransfer($)===he?a===!1?t.has("EXT_sRGB")===!0&&J===Rn?(P.format=_c,P.minFilter=tn,P.generateMipmaps=!1):E=Gu.sRGBToLinear(E):(J!==Rn||st!==bi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",$)),E}function It(P){return typeof HTMLImageElement<"u"&&P instanceof HTMLImageElement?(h.width=P.naturalWidth||P.width,h.height=P.naturalHeight||P.height):typeof VideoFrame<"u"&&P instanceof VideoFrame?(h.width=P.displayWidth,h.height=P.displayHeight):(h.width=P.width,h.height=P.height),h}this.allocateTextureUnit=U,this.resetTextureUnits=D,this.setTexture2D=V,this.setTexture2DArray=z,this.setTexture3D=G,this.setTextureCube=X,this.rebindTextures=k,this.setupRenderTarget=Re,this.updateRenderTargetMipmap=wt,this.updateMultisampleRenderTarget=Q,this.setupDepthRenderbuffer=At,this.setupFrameBufferTexture=tt,this.useMultisampledRTT=Tt}function Uv(i,t,e){const n=e.isWebGL2;function s(r,o=Mi){let a;const c=ne.getTransfer(o);if(r===bi)return i.UNSIGNED_BYTE;if(r===Iu)return i.UNSIGNED_SHORT_4_4_4_4;if(r===Nu)return i.UNSIGNED_SHORT_5_5_5_1;if(r===np)return i.BYTE;if(r===ip)return i.SHORT;if(r===Oc)return i.UNSIGNED_SHORT;if(r===Du)return i.INT;if(r===Si)return i.UNSIGNED_INT;if(r===Bn)return i.FLOAT;if(r===br)return n?i.HALF_FLOAT:(a=t.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===sp)return i.ALPHA;if(r===Rn)return i.RGBA;if(r===rp)return i.LUMINANCE;if(r===op)return i.LUMINANCE_ALPHA;if(r===es)return i.DEPTH_COMPONENT;if(r===Ws)return i.DEPTH_STENCIL;if(r===_c)return a=t.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(r===Lu)return i.RED;if(r===Ou)return i.RED_INTEGER;if(r===ap)return i.RG;if(r===Uu)return i.RG_INTEGER;if(r===Fu)return i.RGBA_INTEGER;if(r===Pa||r===Da||r===Ia||r===Na)if(c===he)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(r===Pa)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Da)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Ia)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Na)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===Pa)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Da)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ia)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Na)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Il||r===Nl||r===Ll||r===Ol)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===Il)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Nl)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Ll)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Ol)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===ku)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Ul||r===Fl)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(r===Ul)return c===he?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(r===Fl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===kl||r===Bl||r===zl||r===Vl||r===Gl||r===Hl||r===Wl||r===ql||r===Xl||r===Yl||r===jl||r===$l||r===Zl||r===Kl)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(r===kl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Bl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===zl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Vl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Gl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Hl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Wl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===ql)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Xl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Yl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===jl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===$l)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Zl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Kl)return c===he?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===La||r===Jl||r===Ql)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(r===La)return c===he?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===Jl)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===Ql)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===cp||r===th||r===eh||r===nh)if(a=t.get("EXT_texture_compression_rgtc"),a!==null){if(r===La)return a.COMPRESSED_RED_RGTC1_EXT;if(r===th)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===eh)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===nh)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===ts?n?i.UNSIGNED_INT_24_8:(a=t.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[r]!==void 0?i[r]:null}return{convert:s}}class Fv extends en{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class nn extends Pe{constructor(){super(),this.isGroup=!0,this.type="Group"}}const kv={type:"move"};class oc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new nn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new nn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new C,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new C),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new nn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new C,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new C),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let s=null,r=null,o=null;const a=this._targetRay,c=this._grip,l=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(l&&t.hand){o=!0;for(const _ of t.hand.values()){const p=e.getJointPose(_,n),f=this._getHandJoint(l,_);p!==null&&(f.matrix.fromArray(p.transform.matrix),f.matrix.decompose(f.position,f.rotation,f.scale),f.matrixWorldNeedsUpdate=!0,f.jointRadius=p.radius),f.visible=p!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],d=h.position.distanceTo(u.position),m=.02,g=.005;l.inputState.pinching&&d>m+g?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&d<=m-g&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else c!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));a!==null&&(s=e.getPose(t.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(a.matrix.fromArray(s.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,s.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(s.linearVelocity)):a.hasLinearVelocity=!1,s.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(s.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(kv)))}return a!==null&&(a.visible=s!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new nn;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}const Bv=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,zv=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class Vv{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const s=new We,r=t.properties.get(s);r.__webglTexture=e.texture,(e.depthNear!=n.depthNear||e.depthFar!=n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=s}}render(t,e){if(this.texture!==null){if(this.mesh===null){const n=e.cameras[0].viewport,s=new Pi({extensions:{fragDepth:!0},vertexShader:Bv,fragmentShader:zv,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new bt(new us(20,20),s)}t.render(this.mesh,e)}}reset(){this.texture=null,this.mesh=null}}class Gv extends ir{constructor(t,e){super();const n=this;let s=null,r=1,o=null,a="local-floor",c=1,l=null,h=null,u=null,d=null,m=null,g=null;const _=new Vv,p=e.getContextAttributes();let f=null,x=null;const y=[],S=[],M=new Ut;let T=null;const w=new en;w.layers.enable(1),w.viewport=new ge;const A=new en;A.layers.enable(2),A.viewport=new ge;const N=[w,A],v=new Fv;v.layers.enable(1),v.layers.enable(2);let b=null,I=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(W){let Z=y[W];return Z===void 0&&(Z=new oc,y[W]=Z),Z.getTargetRaySpace()},this.getControllerGrip=function(W){let Z=y[W];return Z===void 0&&(Z=new oc,y[W]=Z),Z.getGripSpace()},this.getHand=function(W){let Z=y[W];return Z===void 0&&(Z=new oc,y[W]=Z),Z.getHandSpace()};function F(W){const Z=S.indexOf(W.inputSource);if(Z===-1)return;const ot=y[Z];ot!==void 0&&(ot.update(W.inputSource,W.frame,l||o),ot.dispatchEvent({type:W.type,data:W.inputSource}))}function D(){s.removeEventListener("select",F),s.removeEventListener("selectstart",F),s.removeEventListener("selectend",F),s.removeEventListener("squeeze",F),s.removeEventListener("squeezestart",F),s.removeEventListener("squeezeend",F),s.removeEventListener("end",D),s.removeEventListener("inputsourceschange",U);for(let W=0;W<y.length;W++){const Z=S[W];Z!==null&&(S[W]=null,y[W].disconnect(Z))}b=null,I=null,_.reset(),t.setRenderTarget(f),m=null,d=null,u=null,s=null,x=null,St.stop(),n.isPresenting=!1,t.setPixelRatio(T),t.setSize(M.width,M.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(W){r=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(W){a=W,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(W){l=W},this.getBaseLayer=function(){return d!==null?d:m},this.getBinding=function(){return u},this.getFrame=function(){return g},this.getSession=function(){return s},this.setSession=async function(W){if(s=W,s!==null){if(f=t.getRenderTarget(),s.addEventListener("select",F),s.addEventListener("selectstart",F),s.addEventListener("selectend",F),s.addEventListener("squeeze",F),s.addEventListener("squeezestart",F),s.addEventListener("squeezeend",F),s.addEventListener("end",D),s.addEventListener("inputsourceschange",U),p.xrCompatible!==!0&&await e.makeXRCompatible(),T=t.getPixelRatio(),t.getSize(M),s.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const Z={antialias:s.renderState.layers===void 0?p.antialias:!0,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};m=new XRWebGLLayer(s,e,Z),s.updateRenderState({baseLayer:m}),t.setPixelRatio(1),t.setSize(m.framebufferWidth,m.framebufferHeight,!1),x=new rs(m.framebufferWidth,m.framebufferHeight,{format:Rn,type:bi,colorSpace:t.outputColorSpace,stencilBuffer:p.stencil})}else{let Z=null,ot=null,vt=null;p.depth&&(vt=p.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Z=p.stencil?Ws:es,ot=p.stencil?ts:Si);const tt={colorFormat:e.RGBA8,depthFormat:vt,scaleFactor:r};u=new XRWebGLBinding(s,e),d=u.createProjectionLayer(tt),s.updateRenderState({layers:[d]}),t.setPixelRatio(1),t.setSize(d.textureWidth,d.textureHeight,!1),x=new rs(d.textureWidth,d.textureHeight,{format:Rn,type:bi,depthTexture:new Qu(d.textureWidth,d.textureHeight,ot,void 0,void 0,void 0,void 0,void 0,void 0,Z),stencilBuffer:p.stencil,colorSpace:t.outputColorSpace,samples:p.antialias?4:0});const mt=t.properties.get(x);mt.__ignoreDepthValues=d.ignoreDepthValues}x.isXRRenderTarget=!0,this.setFoveation(c),l=null,o=await s.requestReferenceSpace(a),St.setContext(s),St.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode};function U(W){for(let Z=0;Z<W.removed.length;Z++){const ot=W.removed[Z],vt=S.indexOf(ot);vt>=0&&(S[vt]=null,y[vt].disconnect(ot))}for(let Z=0;Z<W.added.length;Z++){const ot=W.added[Z];let vt=S.indexOf(ot);if(vt===-1){for(let mt=0;mt<y.length;mt++)if(mt>=S.length){S.push(ot),vt=mt;break}else if(S[mt]===null){S[mt]=ot,vt=mt;break}if(vt===-1)break}const tt=y[vt];tt&&tt.connect(ot)}}const L=new C,V=new C;function z(W,Z,ot){L.setFromMatrixPosition(Z.matrixWorld),V.setFromMatrixPosition(ot.matrixWorld);const vt=L.distanceTo(V),tt=Z.projectionMatrix.elements,mt=ot.projectionMatrix.elements,Xt=tt[14]/(tt[10]-1),At=tt[14]/(tt[10]+1),k=(tt[9]+1)/tt[5],Re=(tt[9]-1)/tt[5],wt=(tt[8]-1)/tt[0],Q=(mt[8]+1)/mt[0],nt=Xt*wt,Tt=Xt*Q,_t=vt/(-wt+Q),pt=_t*-wt;Z.matrixWorld.decompose(W.position,W.quaternion,W.scale),W.translateX(pt),W.translateZ(_t),W.matrixWorld.compose(W.position,W.quaternion,W.scale),W.matrixWorldInverse.copy(W.matrixWorld).invert();const It=Xt+_t,P=At+_t,E=nt-pt,$=Tt+(vt-pt),J=k*At/P*It,st=Re*At/P*It;W.projectionMatrix.makePerspective(E,$,J,st,It,P),W.projectionMatrixInverse.copy(W.projectionMatrix).invert()}function G(W,Z){Z===null?W.matrixWorld.copy(W.matrix):W.matrixWorld.multiplyMatrices(Z.matrixWorld,W.matrix),W.matrixWorldInverse.copy(W.matrixWorld).invert()}this.updateCamera=function(W){if(s===null)return;_.texture!==null&&(W.near=_.depthNear,W.far=_.depthFar),v.near=A.near=w.near=W.near,v.far=A.far=w.far=W.far,(b!==v.near||I!==v.far)&&(s.updateRenderState({depthNear:v.near,depthFar:v.far}),b=v.near,I=v.far,w.near=b,w.far=I,A.near=b,A.far=I,w.updateProjectionMatrix(),A.updateProjectionMatrix(),W.updateProjectionMatrix());const Z=W.parent,ot=v.cameras;G(v,Z);for(let vt=0;vt<ot.length;vt++)G(ot[vt],Z);ot.length===2?z(v,w,A):v.projectionMatrix.copy(w.projectionMatrix),X(W,v,Z)};function X(W,Z,ot){ot===null?W.matrix.copy(Z.matrixWorld):(W.matrix.copy(ot.matrixWorld),W.matrix.invert(),W.matrix.multiply(Z.matrixWorld)),W.matrix.decompose(W.position,W.quaternion,W.scale),W.updateMatrixWorld(!0),W.projectionMatrix.copy(Z.projectionMatrix),W.projectionMatrixInverse.copy(Z.projectionMatrixInverse),W.isPerspectiveCamera&&(W.fov=qs*2*Math.atan(1/W.projectionMatrix.elements[5]),W.zoom=1)}this.getCamera=function(){return v},this.getFoveation=function(){if(!(d===null&&m===null))return c},this.setFoveation=function(W){c=W,d!==null&&(d.fixedFoveation=W),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=W)},this.hasDepthSensing=function(){return _.texture!==null};let K=null;function rt(W,Z){if(h=Z.getViewerPose(l||o),g=Z,h!==null){const ot=h.views;m!==null&&(t.setRenderTargetFramebuffer(x,m.framebuffer),t.setRenderTarget(x));let vt=!1;ot.length!==v.cameras.length&&(v.cameras.length=0,vt=!0);for(let mt=0;mt<ot.length;mt++){const Xt=ot[mt];let At=null;if(m!==null)At=m.getViewport(Xt);else{const Re=u.getViewSubImage(d,Xt);At=Re.viewport,mt===0&&(t.setRenderTargetTextures(x,Re.colorTexture,d.ignoreDepthValues?void 0:Re.depthStencilTexture),t.setRenderTarget(x))}let k=N[mt];k===void 0&&(k=new en,k.layers.enable(mt),k.viewport=new ge,N[mt]=k),k.matrix.fromArray(Xt.transform.matrix),k.matrix.decompose(k.position,k.quaternion,k.scale),k.projectionMatrix.fromArray(Xt.projectionMatrix),k.projectionMatrixInverse.copy(k.projectionMatrix).invert(),k.viewport.set(At.x,At.y,At.width,At.height),mt===0&&(v.matrix.copy(k.matrix),v.matrix.decompose(v.position,v.quaternion,v.scale)),vt===!0&&v.cameras.push(k)}const tt=s.enabledFeatures;if(tt&&tt.includes("depth-sensing")){const mt=u.getDepthInformation(ot[0]);mt&&mt.isValid&&mt.texture&&_.init(t,mt,s.renderState)}}for(let ot=0;ot<y.length;ot++){const vt=S[ot],tt=y[ot];vt!==null&&tt!==void 0&&tt.update(vt,Z,l||o)}_.render(t,v),K&&K(W,Z),Z.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Z}),g=null}const St=new Ku;St.setAnimationLoop(rt),this.setAnimationLoop=function(W){K=W},this.dispose=function(){}}}const Yi=new _n,Hv=new te;function Wv(i,t){function e(p,f){p.matrixAutoUpdate===!0&&p.updateMatrix(),f.value.copy(p.matrix)}function n(p,f){f.color.getRGB(p.fogColor.value,ju(i)),f.isFog?(p.fogNear.value=f.near,p.fogFar.value=f.far):f.isFogExp2&&(p.fogDensity.value=f.density)}function s(p,f,x,y,S){f.isMeshBasicMaterial||f.isMeshLambertMaterial?r(p,f):f.isMeshToonMaterial?(r(p,f),u(p,f)):f.isMeshPhongMaterial?(r(p,f),h(p,f)):f.isMeshStandardMaterial?(r(p,f),d(p,f),f.isMeshPhysicalMaterial&&m(p,f,S)):f.isMeshMatcapMaterial?(r(p,f),g(p,f)):f.isMeshDepthMaterial?r(p,f):f.isMeshDistanceMaterial?(r(p,f),_(p,f)):f.isMeshNormalMaterial?r(p,f):f.isLineBasicMaterial?(o(p,f),f.isLineDashedMaterial&&a(p,f)):f.isPointsMaterial?c(p,f,x,y):f.isSpriteMaterial?l(p,f):f.isShadowMaterial?(p.color.value.copy(f.color),p.opacity.value=f.opacity):f.isShaderMaterial&&(f.uniformsNeedUpdate=!1)}function r(p,f){p.opacity.value=f.opacity,f.color&&p.diffuse.value.copy(f.color),f.emissive&&p.emissive.value.copy(f.emissive).multiplyScalar(f.emissiveIntensity),f.map&&(p.map.value=f.map,e(f.map,p.mapTransform)),f.alphaMap&&(p.alphaMap.value=f.alphaMap,e(f.alphaMap,p.alphaMapTransform)),f.bumpMap&&(p.bumpMap.value=f.bumpMap,e(f.bumpMap,p.bumpMapTransform),p.bumpScale.value=f.bumpScale,f.side===sn&&(p.bumpScale.value*=-1)),f.normalMap&&(p.normalMap.value=f.normalMap,e(f.normalMap,p.normalMapTransform),p.normalScale.value.copy(f.normalScale),f.side===sn&&p.normalScale.value.negate()),f.displacementMap&&(p.displacementMap.value=f.displacementMap,e(f.displacementMap,p.displacementMapTransform),p.displacementScale.value=f.displacementScale,p.displacementBias.value=f.displacementBias),f.emissiveMap&&(p.emissiveMap.value=f.emissiveMap,e(f.emissiveMap,p.emissiveMapTransform)),f.specularMap&&(p.specularMap.value=f.specularMap,e(f.specularMap,p.specularMapTransform)),f.alphaTest>0&&(p.alphaTest.value=f.alphaTest);const x=t.get(f),y=x.envMap,S=x.envMapRotation;if(y&&(p.envMap.value=y,Yi.copy(S),Yi.x*=-1,Yi.y*=-1,Yi.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(Yi.y*=-1,Yi.z*=-1),p.envMapRotation.value.setFromMatrix4(Hv.makeRotationFromEuler(Yi)),p.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=f.reflectivity,p.ior.value=f.ior,p.refractionRatio.value=f.refractionRatio),f.lightMap){p.lightMap.value=f.lightMap;const M=i._useLegacyLights===!0?Math.PI:1;p.lightMapIntensity.value=f.lightMapIntensity*M,e(f.lightMap,p.lightMapTransform)}f.aoMap&&(p.aoMap.value=f.aoMap,p.aoMapIntensity.value=f.aoMapIntensity,e(f.aoMap,p.aoMapTransform))}function o(p,f){p.diffuse.value.copy(f.color),p.opacity.value=f.opacity,f.map&&(p.map.value=f.map,e(f.map,p.mapTransform))}function a(p,f){p.dashSize.value=f.dashSize,p.totalSize.value=f.dashSize+f.gapSize,p.scale.value=f.scale}function c(p,f,x,y){p.diffuse.value.copy(f.color),p.opacity.value=f.opacity,p.size.value=f.size*x,p.scale.value=y*.5,f.map&&(p.map.value=f.map,e(f.map,p.uvTransform)),f.alphaMap&&(p.alphaMap.value=f.alphaMap,e(f.alphaMap,p.alphaMapTransform)),f.alphaTest>0&&(p.alphaTest.value=f.alphaTest)}function l(p,f){p.diffuse.value.copy(f.color),p.opacity.value=f.opacity,p.rotation.value=f.rotation,f.map&&(p.map.value=f.map,e(f.map,p.mapTransform)),f.alphaMap&&(p.alphaMap.value=f.alphaMap,e(f.alphaMap,p.alphaMapTransform)),f.alphaTest>0&&(p.alphaTest.value=f.alphaTest)}function h(p,f){p.specular.value.copy(f.specular),p.shininess.value=Math.max(f.shininess,1e-4)}function u(p,f){f.gradientMap&&(p.gradientMap.value=f.gradientMap)}function d(p,f){p.metalness.value=f.metalness,f.metalnessMap&&(p.metalnessMap.value=f.metalnessMap,e(f.metalnessMap,p.metalnessMapTransform)),p.roughness.value=f.roughness,f.roughnessMap&&(p.roughnessMap.value=f.roughnessMap,e(f.roughnessMap,p.roughnessMapTransform)),t.get(f).envMap&&(p.envMapIntensity.value=f.envMapIntensity)}function m(p,f,x){p.ior.value=f.ior,f.sheen>0&&(p.sheenColor.value.copy(f.sheenColor).multiplyScalar(f.sheen),p.sheenRoughness.value=f.sheenRoughness,f.sheenColorMap&&(p.sheenColorMap.value=f.sheenColorMap,e(f.sheenColorMap,p.sheenColorMapTransform)),f.sheenRoughnessMap&&(p.sheenRoughnessMap.value=f.sheenRoughnessMap,e(f.sheenRoughnessMap,p.sheenRoughnessMapTransform))),f.clearcoat>0&&(p.clearcoat.value=f.clearcoat,p.clearcoatRoughness.value=f.clearcoatRoughness,f.clearcoatMap&&(p.clearcoatMap.value=f.clearcoatMap,e(f.clearcoatMap,p.clearcoatMapTransform)),f.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=f.clearcoatRoughnessMap,e(f.clearcoatRoughnessMap,p.clearcoatRoughnessMapTransform)),f.clearcoatNormalMap&&(p.clearcoatNormalMap.value=f.clearcoatNormalMap,e(f.clearcoatNormalMap,p.clearcoatNormalMapTransform),p.clearcoatNormalScale.value.copy(f.clearcoatNormalScale),f.side===sn&&p.clearcoatNormalScale.value.negate())),f.iridescence>0&&(p.iridescence.value=f.iridescence,p.iridescenceIOR.value=f.iridescenceIOR,p.iridescenceThicknessMinimum.value=f.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=f.iridescenceThicknessRange[1],f.iridescenceMap&&(p.iridescenceMap.value=f.iridescenceMap,e(f.iridescenceMap,p.iridescenceMapTransform)),f.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=f.iridescenceThicknessMap,e(f.iridescenceThicknessMap,p.iridescenceThicknessMapTransform))),f.transmission>0&&(p.transmission.value=f.transmission,p.transmissionSamplerMap.value=x.texture,p.transmissionSamplerSize.value.set(x.width,x.height),f.transmissionMap&&(p.transmissionMap.value=f.transmissionMap,e(f.transmissionMap,p.transmissionMapTransform)),p.thickness.value=f.thickness,f.thicknessMap&&(p.thicknessMap.value=f.thicknessMap,e(f.thicknessMap,p.thicknessMapTransform)),p.attenuationDistance.value=f.attenuationDistance,p.attenuationColor.value.copy(f.attenuationColor)),f.anisotropy>0&&(p.anisotropyVector.value.set(f.anisotropy*Math.cos(f.anisotropyRotation),f.anisotropy*Math.sin(f.anisotropyRotation)),f.anisotropyMap&&(p.anisotropyMap.value=f.anisotropyMap,e(f.anisotropyMap,p.anisotropyMapTransform))),p.specularIntensity.value=f.specularIntensity,p.specularColor.value.copy(f.specularColor),f.specularColorMap&&(p.specularColorMap.value=f.specularColorMap,e(f.specularColorMap,p.specularColorMapTransform)),f.specularIntensityMap&&(p.specularIntensityMap.value=f.specularIntensityMap,e(f.specularIntensityMap,p.specularIntensityMapTransform))}function g(p,f){f.matcap&&(p.matcap.value=f.matcap)}function _(p,f){const x=t.get(f).light;p.referencePosition.value.setFromMatrixPosition(x.matrixWorld),p.nearDistance.value=x.shadow.camera.near,p.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function qv(i,t,e,n){let s={},r={},o=[];const a=e.isWebGL2?i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS):0;function c(x,y){const S=y.program;n.uniformBlockBinding(x,S)}function l(x,y){let S=s[x.id];S===void 0&&(g(x),S=h(x),s[x.id]=S,x.addEventListener("dispose",p));const M=y.program;n.updateUBOMapping(x,M);const T=t.render.frame;r[x.id]!==T&&(d(x),r[x.id]=T)}function h(x){const y=u();x.__bindingPointIndex=y;const S=i.createBuffer(),M=x.__size,T=x.usage;return i.bindBuffer(i.UNIFORM_BUFFER,S),i.bufferData(i.UNIFORM_BUFFER,M,T),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,y,S),S}function u(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const y=s[x.id],S=x.uniforms,M=x.__cache;i.bindBuffer(i.UNIFORM_BUFFER,y);for(let T=0,w=S.length;T<w;T++){const A=Array.isArray(S[T])?S[T]:[S[T]];for(let N=0,v=A.length;N<v;N++){const b=A[N];if(m(b,T,N,M)===!0){const I=b.__offset,F=Array.isArray(b.value)?b.value:[b.value];let D=0;for(let U=0;U<F.length;U++){const L=F[U],V=_(L);typeof L=="number"||typeof L=="boolean"?(b.__data[0]=L,i.bufferSubData(i.UNIFORM_BUFFER,I+D,b.__data)):L.isMatrix3?(b.__data[0]=L.elements[0],b.__data[1]=L.elements[1],b.__data[2]=L.elements[2],b.__data[3]=0,b.__data[4]=L.elements[3],b.__data[5]=L.elements[4],b.__data[6]=L.elements[5],b.__data[7]=0,b.__data[8]=L.elements[6],b.__data[9]=L.elements[7],b.__data[10]=L.elements[8],b.__data[11]=0):(L.toArray(b.__data,D),D+=V.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,I,b.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function m(x,y,S,M){const T=x.value,w=y+"_"+S;if(M[w]===void 0)return typeof T=="number"||typeof T=="boolean"?M[w]=T:M[w]=T.clone(),!0;{const A=M[w];if(typeof T=="number"||typeof T=="boolean"){if(A!==T)return M[w]=T,!0}else if(A.equals(T)===!1)return A.copy(T),!0}return!1}function g(x){const y=x.uniforms;let S=0;const M=16;for(let w=0,A=y.length;w<A;w++){const N=Array.isArray(y[w])?y[w]:[y[w]];for(let v=0,b=N.length;v<b;v++){const I=N[v],F=Array.isArray(I.value)?I.value:[I.value];for(let D=0,U=F.length;D<U;D++){const L=F[D],V=_(L),z=S%M;z!==0&&M-z<V.boundary&&(S+=M-z),I.__data=new Float32Array(V.storage/Float32Array.BYTES_PER_ELEMENT),I.__offset=S,S+=V.storage}}}const T=S%M;return T>0&&(S+=M-T),x.__size=S,x.__cache={},this}function _(x){const y={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(y.boundary=4,y.storage=4):x.isVector2?(y.boundary=8,y.storage=8):x.isVector3||x.isColor?(y.boundary=16,y.storage=12):x.isVector4?(y.boundary=16,y.storage=16):x.isMatrix3?(y.boundary=48,y.storage=48):x.isMatrix4?(y.boundary=64,y.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),y}function p(x){const y=x.target;y.removeEventListener("dispose",p);const S=o.indexOf(y.__bindingPointIndex);o.splice(S,1),i.deleteBuffer(s[y.id]),delete s[y.id],delete r[y.id]}function f(){for(const x in s)i.deleteBuffer(s[x]);o=[],s={},r={}}return{bind:c,update:l,dispose:f}}class rd{constructor(t={}){const{canvas:e=Lp(),context:n=null,depth:s=!0,stencil:r=!0,alpha:o=!1,antialias:a=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=t;this.isWebGLRenderer=!0;let d;n!==null?d=n.getContextAttributes().alpha:d=o;const m=new Uint32Array(4),g=new Int32Array(4);let _=null,p=null;const f=[],x=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Fn,this._useLegacyLights=!1,this.toneMapping=Ei,this.toneMappingExposure=1;const y=this;let S=!1,M=0,T=0,w=null,A=-1,N=null;const v=new ge,b=new ge;let I=null;const F=new Kt(0);let D=0,U=e.width,L=e.height,V=1,z=null,G=null;const X=new ge(0,0,U,L),K=new ge(0,0,U,L);let rt=!1;const St=new zc;let W=!1,Z=!1,ot=null;const vt=new te,tt=new Ut,mt=new C,Xt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function At(){return w===null?V:1}let k=n;function Re(R,B){for(let Y=0;Y<R.length;Y++){const j=R[Y],H=e.getContext(j,B);if(H!==null)return H}return null}try{const R={alpha:!0,depth:s,stencil:r,antialias:a,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Nc}`),e.addEventListener("webglcontextlost",fe,!1),e.addEventListener("webglcontextrestored",O,!1),e.addEventListener("webglcontextcreationerror",ut,!1),k===null){const B=["webgl2","webgl","experimental-webgl"];if(y.isWebGL1Renderer===!0&&B.shift(),k=Re(B,R),k===null)throw Re(B)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&k instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),k.getShaderPrecisionFormat===void 0&&(k.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let wt,Q,nt,Tt,_t,pt,It,P,E,$,J,st,et,Bt,Pt,ht,dt,zt,at,Ae,Yt,Et,yt,xt;function Zt(){wt=new K_(k),Q=new q_(k,wt,t),wt.init(Q),Et=new Uv(k,wt,Q),nt=new Lv(k,wt,Q),Tt=new t0(k),_t=new xv,pt=new Ov(k,wt,nt,_t,Q,Et,Tt),It=new Y_(y),P=new Z_(y),E=new om(k,Q),yt=new H_(k,wt,E,Q),$=new J_(k,E,Tt,yt),J=new s0(k,$,E,Tt),at=new i0(k,Q,pt),ht=new X_(_t),st=new yv(y,It,P,wt,Q,yt,ht),et=new Wv(y,_t),Bt=new Sv,Pt=new Cv(wt,Q),zt=new G_(y,It,P,nt,J,d,c),dt=new Nv(y,J,Q),xt=new qv(k,Tt,Q,nt),Ae=new W_(k,wt,Tt,Q),Yt=new Q_(k,wt,Tt,Q),Tt.programs=st.programs,y.capabilities=Q,y.extensions=wt,y.properties=_t,y.renderLists=Bt,y.shadowMap=dt,y.state=nt,y.info=Tt}Zt();const Ft=new Gv(y,k);this.xr=Ft,this.getContext=function(){return k},this.getContextAttributes=function(){return k.getContextAttributes()},this.forceContextLoss=function(){const R=wt.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=wt.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return V},this.setPixelRatio=function(R){R!==void 0&&(V=R,this.setSize(U,L,!1))},this.getSize=function(R){return R.set(U,L)},this.setSize=function(R,B,Y=!0){if(Ft.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}U=R,L=B,e.width=Math.floor(R*V),e.height=Math.floor(B*V),Y===!0&&(e.style.width=R+"px",e.style.height=B+"px"),this.setViewport(0,0,R,B)},this.getDrawingBufferSize=function(R){return R.set(U*V,L*V).floor()},this.setDrawingBufferSize=function(R,B,Y){U=R,L=B,V=Y,e.width=Math.floor(R*Y),e.height=Math.floor(B*Y),this.setViewport(0,0,R,B)},this.getCurrentViewport=function(R){return R.copy(v)},this.getViewport=function(R){return R.copy(X)},this.setViewport=function(R,B,Y,j){R.isVector4?X.set(R.x,R.y,R.z,R.w):X.set(R,B,Y,j),nt.viewport(v.copy(X).multiplyScalar(V).round())},this.getScissor=function(R){return R.copy(K)},this.setScissor=function(R,B,Y,j){R.isVector4?K.set(R.x,R.y,R.z,R.w):K.set(R,B,Y,j),nt.scissor(b.copy(K).multiplyScalar(V).round())},this.getScissorTest=function(){return rt},this.setScissorTest=function(R){nt.setScissorTest(rt=R)},this.setOpaqueSort=function(R){z=R},this.setTransparentSort=function(R){G=R},this.getClearColor=function(R){return R.copy(zt.getClearColor())},this.setClearColor=function(){zt.setClearColor.apply(zt,arguments)},this.getClearAlpha=function(){return zt.getClearAlpha()},this.setClearAlpha=function(){zt.setClearAlpha.apply(zt,arguments)},this.clear=function(R=!0,B=!0,Y=!0){let j=0;if(R){let H=!1;if(w!==null){const gt=w.texture.format;H=gt===Fu||gt===Uu||gt===Ou}if(H){const gt=w.texture.type,Mt=gt===bi||gt===Si||gt===Oc||gt===ts||gt===Iu||gt===Nu,Rt=zt.getClearColor(),Dt=zt.getClearAlpha(),qt=Rt.r,Ot=Rt.g,kt=Rt.b;Mt?(m[0]=qt,m[1]=Ot,m[2]=kt,m[3]=Dt,k.clearBufferuiv(k.COLOR,0,m)):(g[0]=qt,g[1]=Ot,g[2]=kt,g[3]=Dt,k.clearBufferiv(k.COLOR,0,g))}else j|=k.COLOR_BUFFER_BIT}B&&(j|=k.DEPTH_BUFFER_BIT),Y&&(j|=k.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),k.clear(j)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",fe,!1),e.removeEventListener("webglcontextrestored",O,!1),e.removeEventListener("webglcontextcreationerror",ut,!1),Bt.dispose(),Pt.dispose(),_t.dispose(),It.dispose(),P.dispose(),J.dispose(),yt.dispose(),xt.dispose(),st.dispose(),Ft.dispose(),Ft.removeEventListener("sessionstart",vn),Ft.removeEventListener("sessionend",ce),ot&&(ot.dispose(),ot=null),Ye.stop()};function fe(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),S=!0}function O(){console.log("THREE.WebGLRenderer: Context Restored."),S=!1;const R=Tt.autoReset,B=dt.enabled,Y=dt.autoUpdate,j=dt.needsUpdate,H=dt.type;Zt(),Tt.autoReset=R,dt.enabled=B,dt.autoUpdate=Y,dt.needsUpdate=j,dt.type=H}function ut(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function q(R){const B=R.target;B.removeEventListener("dispose",q),ct(B)}function ct(R){ft(R),_t.remove(R)}function ft(R){const B=_t.get(R).programs;B!==void 0&&(B.forEach(function(Y){st.releaseProgram(Y)}),R.isShaderMaterial&&st.releaseShaderCache(R))}this.renderBufferDirect=function(R,B,Y,j,H,gt){B===null&&(B=Xt);const Mt=H.isMesh&&H.matrixWorld.determinant()<0,Rt=_f(R,B,Y,j,H);nt.setMaterial(j,Mt);let Dt=Y.index,qt=1;if(j.wireframe===!0){if(Dt=$.getWireframeAttribute(Y),Dt===void 0)return;qt=2}const Ot=Y.drawRange,kt=Y.attributes.position;let Se=Ot.start*qt,cn=(Ot.start+Ot.count)*qt;gt!==null&&(Se=Math.max(Se,gt.start*qt),cn=Math.min(cn,(gt.start+gt.count)*qt)),Dt!==null?(Se=Math.max(Se,0),cn=Math.min(cn,Dt.count)):kt!=null&&(Se=Math.max(Se,0),cn=Math.min(cn,kt.count));const Le=cn-Se;if(Le<0||Le===1/0)return;yt.setup(H,j,Rt,Y,Dt);let Xn,_e=Ae;if(Dt!==null&&(Xn=E.get(Dt),_e=Yt,_e.setIndex(Xn)),H.isMesh)j.wireframe===!0?(nt.setLineWidth(j.wireframeLinewidth*At()),_e.setMode(k.LINES)):_e.setMode(k.TRIANGLES);else if(H.isLine){let Vt=j.linewidth;Vt===void 0&&(Vt=1),nt.setLineWidth(Vt*At()),H.isLineSegments?_e.setMode(k.LINES):H.isLineLoop?_e.setMode(k.LINE_LOOP):_e.setMode(k.LINE_STRIP)}else H.isPoints?_e.setMode(k.POINTS):H.isSprite&&_e.setMode(k.TRIANGLES);if(H.isBatchedMesh)_e.renderMultiDraw(H._multiDrawStarts,H._multiDrawCounts,H._multiDrawCount);else if(H.isInstancedMesh)_e.renderInstances(Se,Le,H.count);else if(Y.isInstancedBufferGeometry){const Vt=Y._maxInstanceCount!==void 0?Y._maxInstanceCount:1/0,Ea=Math.min(Y.instanceCount,Vt);_e.renderInstances(Se,Le,Ea)}else _e.render(Se,Le)};function jt(R,B,Y){R.transparent===!0&&R.side===He&&R.forceSinglePass===!1?(R.side=sn,R.needsUpdate=!0,Qr(R,B,Y),R.side=Ri,R.needsUpdate=!0,Qr(R,B,Y),R.side=He):Qr(R,B,Y)}this.compile=function(R,B,Y=null){Y===null&&(Y=R),p=Pt.get(Y),p.init(),x.push(p),Y.traverseVisible(function(H){H.isLight&&H.layers.test(B.layers)&&(p.pushLight(H),H.castShadow&&p.pushShadow(H))}),R!==Y&&R.traverseVisible(function(H){H.isLight&&H.layers.test(B.layers)&&(p.pushLight(H),H.castShadow&&p.pushShadow(H))}),p.setupLights(y._useLegacyLights);const j=new Set;return R.traverse(function(H){const gt=H.material;if(gt)if(Array.isArray(gt))for(let Mt=0;Mt<gt.length;Mt++){const Rt=gt[Mt];jt(Rt,Y,H),j.add(Rt)}else jt(gt,Y,H),j.add(gt)}),x.pop(),p=null,j},this.compileAsync=function(R,B,Y=null){const j=this.compile(R,B,Y);return new Promise(H=>{function gt(){if(j.forEach(function(Mt){_t.get(Mt).currentProgram.isReady()&&j.delete(Mt)}),j.size===0){H(R);return}setTimeout(gt,10)}wt.get("KHR_parallel_shader_compile")!==null?gt():setTimeout(gt,10)})};let ae=null;function Fe(R){ae&&ae(R)}function vn(){Ye.stop()}function ce(){Ye.start()}const Ye=new Ku;Ye.setAnimationLoop(Fe),typeof self<"u"&&Ye.setContext(self),this.setAnimationLoop=function(R){ae=R,Ft.setAnimationLoop(R),R===null?Ye.stop():Ye.start()},Ft.addEventListener("sessionstart",vn),Ft.addEventListener("sessionend",ce),this.render=function(R,B){if(B!==void 0&&B.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(S===!0)return;R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),B.parent===null&&B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),Ft.enabled===!0&&Ft.isPresenting===!0&&(Ft.cameraAutoUpdate===!0&&Ft.updateCamera(B),B=Ft.getCamera()),R.isScene===!0&&R.onBeforeRender(y,R,B,w),p=Pt.get(R,x.length),p.init(),x.push(p),vt.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse),St.setFromProjectionMatrix(vt),Z=this.localClippingEnabled,W=ht.init(this.clippingPlanes,Z),_=Bt.get(R,f.length),_.init(),f.push(_),Un(R,B,0,y.sortObjects),_.finish(),y.sortObjects===!0&&_.sort(z,G),this.info.render.frame++,W===!0&&ht.beginShadows();const Y=p.state.shadowsArray;if(dt.render(Y,R,B),W===!0&&ht.endShadows(),this.info.autoReset===!0&&this.info.reset(),(Ft.enabled===!1||Ft.isPresenting===!1||Ft.hasDepthSensing()===!1)&&zt.render(_,R),p.setupLights(y._useLegacyLights),B.isArrayCamera){const j=B.cameras;for(let H=0,gt=j.length;H<gt;H++){const Mt=j[H];xl(_,R,Mt,Mt.viewport)}}else xl(_,R,B);w!==null&&(pt.updateMultisampleRenderTarget(w),pt.updateRenderTargetMipmap(w)),R.isScene===!0&&R.onAfterRender(y,R,B),yt.resetDefaultState(),A=-1,N=null,x.pop(),x.length>0?p=x[x.length-1]:p=null,f.pop(),f.length>0?_=f[f.length-1]:_=null};function Un(R,B,Y,j){if(R.visible===!1)return;if(R.layers.test(B.layers)){if(R.isGroup)Y=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(B);else if(R.isLight)p.pushLight(R),R.castShadow&&p.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||St.intersectsSprite(R)){j&&mt.setFromMatrixPosition(R.matrixWorld).applyMatrix4(vt);const Mt=J.update(R),Rt=R.material;Rt.visible&&_.push(R,Mt,Rt,Y,mt.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||St.intersectsObject(R))){const Mt=J.update(R),Rt=R.material;if(j&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),mt.copy(R.boundingSphere.center)):(Mt.boundingSphere===null&&Mt.computeBoundingSphere(),mt.copy(Mt.boundingSphere.center)),mt.applyMatrix4(R.matrixWorld).applyMatrix4(vt)),Array.isArray(Rt)){const Dt=Mt.groups;for(let qt=0,Ot=Dt.length;qt<Ot;qt++){const kt=Dt[qt],Se=Rt[kt.materialIndex];Se&&Se.visible&&_.push(R,Mt,Se,Y,mt.z,kt)}}else Rt.visible&&_.push(R,Mt,Rt,Y,mt.z,null)}}const gt=R.children;for(let Mt=0,Rt=gt.length;Mt<Rt;Mt++)Un(gt[Mt],B,Y,j)}function xl(R,B,Y,j){const H=R.opaque,gt=R.transmissive,Mt=R.transparent;p.setupLightsView(Y),W===!0&&ht.setGlobalState(y.clippingPlanes,Y),gt.length>0&&gf(H,gt,B,Y),j&&nt.viewport(v.copy(j)),H.length>0&&Jr(H,B,Y),gt.length>0&&Jr(gt,B,Y),Mt.length>0&&Jr(Mt,B,Y),nt.buffers.depth.setTest(!0),nt.buffers.depth.setMask(!0),nt.buffers.color.setMask(!0),nt.setPolygonOffset(!1)}function gf(R,B,Y,j){if((Y.isScene===!0?Y.overrideMaterial:null)!==null)return;const gt=Q.isWebGL2;ot===null&&(ot=new rs(1,1,{generateMipmaps:!0,type:wt.has("EXT_color_buffer_half_float")?br:bi,minFilter:Ji,samples:gt?4:0})),y.getDrawingBufferSize(tt),gt?ot.setSize(tt.x,tt.y):ot.setSize(Fo(tt.x),Fo(tt.y));const Mt=y.getRenderTarget();y.setRenderTarget(ot),y.getClearColor(F),D=y.getClearAlpha(),D<1&&y.setClearColor(16777215,.5),y.clear();const Rt=y.toneMapping;y.toneMapping=Ei,Jr(R,Y,j),pt.updateMultisampleRenderTarget(ot),pt.updateRenderTargetMipmap(ot);let Dt=!1;for(let qt=0,Ot=B.length;qt<Ot;qt++){const kt=B[qt],Se=kt.object,cn=kt.geometry,Le=kt.material,Xn=kt.group;if(Le.side===He&&Se.layers.test(j.layers)){const _e=Le.side;Le.side=sn,Le.needsUpdate=!0,Ml(Se,Y,j,cn,Le,Xn),Le.side=_e,Le.needsUpdate=!0,Dt=!0}}Dt===!0&&(pt.updateMultisampleRenderTarget(ot),pt.updateRenderTargetMipmap(ot)),y.setRenderTarget(Mt),y.setClearColor(F,D),y.toneMapping=Rt}function Jr(R,B,Y){const j=B.isScene===!0?B.overrideMaterial:null;for(let H=0,gt=R.length;H<gt;H++){const Mt=R[H],Rt=Mt.object,Dt=Mt.geometry,qt=j===null?Mt.material:j,Ot=Mt.group;Rt.layers.test(Y.layers)&&Ml(Rt,B,Y,Dt,qt,Ot)}}function Ml(R,B,Y,j,H,gt){R.onBeforeRender(y,B,Y,j,H,gt),R.modelViewMatrix.multiplyMatrices(Y.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),H.onBeforeRender(y,B,Y,j,R,gt),H.transparent===!0&&H.side===He&&H.forceSinglePass===!1?(H.side=sn,H.needsUpdate=!0,y.renderBufferDirect(Y,B,j,H,R,gt),H.side=Ri,H.needsUpdate=!0,y.renderBufferDirect(Y,B,j,H,R,gt),H.side=He):y.renderBufferDirect(Y,B,j,H,R,gt),R.onAfterRender(y,B,Y,j,H,gt)}function Qr(R,B,Y){B.isScene!==!0&&(B=Xt);const j=_t.get(R),H=p.state.lights,gt=p.state.shadowsArray,Mt=H.state.version,Rt=st.getParameters(R,H.state,gt,B,Y),Dt=st.getProgramCacheKey(Rt);let qt=j.programs;j.environment=R.isMeshStandardMaterial?B.environment:null,j.fog=B.fog,j.envMap=(R.isMeshStandardMaterial?P:It).get(R.envMap||j.environment),j.envMapRotation=j.environment!==null&&R.envMap===null?B.environmentRotation:R.envMapRotation,qt===void 0&&(R.addEventListener("dispose",q),qt=new Map,j.programs=qt);let Ot=qt.get(Dt);if(Ot!==void 0){if(j.currentProgram===Ot&&j.lightsStateVersion===Mt)return Tl(R,Rt),Ot}else Rt.uniforms=st.getUniforms(R),R.onBuild(Y,Rt,y),R.onBeforeCompile(Rt,y),Ot=st.acquireProgram(Rt,Dt),qt.set(Dt,Ot),j.uniforms=Rt.uniforms;const kt=j.uniforms;return(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(kt.clippingPlanes=ht.uniform),Tl(R,Rt),j.needsLights=yf(R),j.lightsStateVersion=Mt,j.needsLights&&(kt.ambientLightColor.value=H.state.ambient,kt.lightProbe.value=H.state.probe,kt.directionalLights.value=H.state.directional,kt.directionalLightShadows.value=H.state.directionalShadow,kt.spotLights.value=H.state.spot,kt.spotLightShadows.value=H.state.spotShadow,kt.rectAreaLights.value=H.state.rectArea,kt.ltc_1.value=H.state.rectAreaLTC1,kt.ltc_2.value=H.state.rectAreaLTC2,kt.pointLights.value=H.state.point,kt.pointLightShadows.value=H.state.pointShadow,kt.hemisphereLights.value=H.state.hemi,kt.directionalShadowMap.value=H.state.directionalShadowMap,kt.directionalShadowMatrix.value=H.state.directionalShadowMatrix,kt.spotShadowMap.value=H.state.spotShadowMap,kt.spotLightMatrix.value=H.state.spotLightMatrix,kt.spotLightMap.value=H.state.spotLightMap,kt.pointShadowMap.value=H.state.pointShadowMap,kt.pointShadowMatrix.value=H.state.pointShadowMatrix),j.currentProgram=Ot,j.uniformsList=null,Ot}function Sl(R){if(R.uniformsList===null){const B=R.currentProgram.getUniforms();R.uniformsList=Ro.seqWithValue(B.seq,R.uniforms)}return R.uniformsList}function Tl(R,B){const Y=_t.get(R);Y.outputColorSpace=B.outputColorSpace,Y.batching=B.batching,Y.instancing=B.instancing,Y.instancingColor=B.instancingColor,Y.instancingMorph=B.instancingMorph,Y.skinning=B.skinning,Y.morphTargets=B.morphTargets,Y.morphNormals=B.morphNormals,Y.morphColors=B.morphColors,Y.morphTargetsCount=B.morphTargetsCount,Y.numClippingPlanes=B.numClippingPlanes,Y.numIntersection=B.numClipIntersection,Y.vertexAlphas=B.vertexAlphas,Y.vertexTangents=B.vertexTangents,Y.toneMapping=B.toneMapping}function _f(R,B,Y,j,H){B.isScene!==!0&&(B=Xt),pt.resetTextureUnits();const gt=B.fog,Mt=j.isMeshStandardMaterial?B.environment:null,Rt=w===null?y.outputColorSpace:w.isXRRenderTarget===!0?w.texture.colorSpace:Oi,Dt=(j.isMeshStandardMaterial?P:It).get(j.envMap||Mt),qt=j.vertexColors===!0&&!!Y.attributes.color&&Y.attributes.color.itemSize===4,Ot=!!Y.attributes.tangent&&(!!j.normalMap||j.anisotropy>0),kt=!!Y.morphAttributes.position,Se=!!Y.morphAttributes.normal,cn=!!Y.morphAttributes.color;let Le=Ei;j.toneMapped&&(w===null||w.isXRRenderTarget===!0)&&(Le=y.toneMapping);const Xn=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,_e=Xn!==void 0?Xn.length:0,Vt=_t.get(j),Ea=p.state.lights;if(W===!0&&(Z===!0||R!==N)){const yn=R===N&&j.id===A;ht.setState(j,R,yn)}let pe=!1;j.version===Vt.__version?(Vt.needsLights&&Vt.lightsStateVersion!==Ea.state.version||Vt.outputColorSpace!==Rt||H.isBatchedMesh&&Vt.batching===!1||!H.isBatchedMesh&&Vt.batching===!0||H.isInstancedMesh&&Vt.instancing===!1||!H.isInstancedMesh&&Vt.instancing===!0||H.isSkinnedMesh&&Vt.skinning===!1||!H.isSkinnedMesh&&Vt.skinning===!0||H.isInstancedMesh&&Vt.instancingColor===!0&&H.instanceColor===null||H.isInstancedMesh&&Vt.instancingColor===!1&&H.instanceColor!==null||H.isInstancedMesh&&Vt.instancingMorph===!0&&H.morphTexture===null||H.isInstancedMesh&&Vt.instancingMorph===!1&&H.morphTexture!==null||Vt.envMap!==Dt||j.fog===!0&&Vt.fog!==gt||Vt.numClippingPlanes!==void 0&&(Vt.numClippingPlanes!==ht.numPlanes||Vt.numIntersection!==ht.numIntersection)||Vt.vertexAlphas!==qt||Vt.vertexTangents!==Ot||Vt.morphTargets!==kt||Vt.morphNormals!==Se||Vt.morphColors!==cn||Vt.toneMapping!==Le||Q.isWebGL2===!0&&Vt.morphTargetsCount!==_e)&&(pe=!0):(pe=!0,Vt.__version=j.version);let zi=Vt.currentProgram;pe===!0&&(zi=Qr(j,B,H));let wl=!1,fr=!1,ba=!1;const ze=zi.getUniforms(),Vi=Vt.uniforms;if(nt.useProgram(zi.program)&&(wl=!0,fr=!0,ba=!0),j.id!==A&&(A=j.id,fr=!0),wl||N!==R){ze.setValue(k,"projectionMatrix",R.projectionMatrix),ze.setValue(k,"viewMatrix",R.matrixWorldInverse);const yn=ze.map.cameraPosition;yn!==void 0&&yn.setValue(k,mt.setFromMatrixPosition(R.matrixWorld)),Q.logarithmicDepthBuffer&&ze.setValue(k,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(j.isMeshPhongMaterial||j.isMeshToonMaterial||j.isMeshLambertMaterial||j.isMeshBasicMaterial||j.isMeshStandardMaterial||j.isShaderMaterial)&&ze.setValue(k,"isOrthographic",R.isOrthographicCamera===!0),N!==R&&(N=R,fr=!0,ba=!0)}if(H.isSkinnedMesh){ze.setOptional(k,H,"bindMatrix"),ze.setOptional(k,H,"bindMatrixInverse");const yn=H.skeleton;yn&&(Q.floatVertexTextures?(yn.boneTexture===null&&yn.computeBoneTexture(),ze.setValue(k,"boneTexture",yn.boneTexture,pt)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}H.isBatchedMesh&&(ze.setOptional(k,H,"batchingTexture"),ze.setValue(k,"batchingTexture",H._matricesTexture,pt));const Aa=Y.morphAttributes;if((Aa.position!==void 0||Aa.normal!==void 0||Aa.color!==void 0&&Q.isWebGL2===!0)&&at.update(H,Y,zi),(fr||Vt.receiveShadow!==H.receiveShadow)&&(Vt.receiveShadow=H.receiveShadow,ze.setValue(k,"receiveShadow",H.receiveShadow)),j.isMeshGouraudMaterial&&j.envMap!==null&&(Vi.envMap.value=Dt,Vi.flipEnvMap.value=Dt.isCubeTexture&&Dt.isRenderTargetTexture===!1?-1:1),fr&&(ze.setValue(k,"toneMappingExposure",y.toneMappingExposure),Vt.needsLights&&vf(Vi,ba),gt&&j.fog===!0&&et.refreshFogUniforms(Vi,gt),et.refreshMaterialUniforms(Vi,j,V,L,ot),Ro.upload(k,Sl(Vt),Vi,pt)),j.isShaderMaterial&&j.uniformsNeedUpdate===!0&&(Ro.upload(k,Sl(Vt),Vi,pt),j.uniformsNeedUpdate=!1),j.isSpriteMaterial&&ze.setValue(k,"center",H.center),ze.setValue(k,"modelViewMatrix",H.modelViewMatrix),ze.setValue(k,"normalMatrix",H.normalMatrix),ze.setValue(k,"modelMatrix",H.matrixWorld),j.isShaderMaterial||j.isRawShaderMaterial){const yn=j.uniformsGroups;for(let Ca=0,xf=yn.length;Ca<xf;Ca++)if(Q.isWebGL2){const El=yn[Ca];xt.update(El,zi),xt.bind(El,zi)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return zi}function vf(R,B){R.ambientLightColor.needsUpdate=B,R.lightProbe.needsUpdate=B,R.directionalLights.needsUpdate=B,R.directionalLightShadows.needsUpdate=B,R.pointLights.needsUpdate=B,R.pointLightShadows.needsUpdate=B,R.spotLights.needsUpdate=B,R.spotLightShadows.needsUpdate=B,R.rectAreaLights.needsUpdate=B,R.hemisphereLights.needsUpdate=B}function yf(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return M},this.getActiveMipmapLevel=function(){return T},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(R,B,Y){_t.get(R.texture).__webglTexture=B,_t.get(R.depthTexture).__webglTexture=Y;const j=_t.get(R);j.__hasExternalTextures=!0,j.__autoAllocateDepthBuffer=Y===void 0,j.__autoAllocateDepthBuffer||wt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),j.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(R,B){const Y=_t.get(R);Y.__webglFramebuffer=B,Y.__useDefaultFramebuffer=B===void 0},this.setRenderTarget=function(R,B=0,Y=0){w=R,M=B,T=Y;let j=!0,H=null,gt=!1,Mt=!1;if(R){const Dt=_t.get(R);Dt.__useDefaultFramebuffer!==void 0?(nt.bindFramebuffer(k.FRAMEBUFFER,null),j=!1):Dt.__webglFramebuffer===void 0?pt.setupRenderTarget(R):Dt.__hasExternalTextures&&pt.rebindTextures(R,_t.get(R.texture).__webglTexture,_t.get(R.depthTexture).__webglTexture);const qt=R.texture;(qt.isData3DTexture||qt.isDataArrayTexture||qt.isCompressedArrayTexture)&&(Mt=!0);const Ot=_t.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(Ot[B])?H=Ot[B][Y]:H=Ot[B],gt=!0):Q.isWebGL2&&R.samples>0&&pt.useMultisampledRTT(R)===!1?H=_t.get(R).__webglMultisampledFramebuffer:Array.isArray(Ot)?H=Ot[Y]:H=Ot,v.copy(R.viewport),b.copy(R.scissor),I=R.scissorTest}else v.copy(X).multiplyScalar(V).floor(),b.copy(K).multiplyScalar(V).floor(),I=rt;if(nt.bindFramebuffer(k.FRAMEBUFFER,H)&&Q.drawBuffers&&j&&nt.drawBuffers(R,H),nt.viewport(v),nt.scissor(b),nt.setScissorTest(I),gt){const Dt=_t.get(R.texture);k.framebufferTexture2D(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,k.TEXTURE_CUBE_MAP_POSITIVE_X+B,Dt.__webglTexture,Y)}else if(Mt){const Dt=_t.get(R.texture),qt=B||0;k.framebufferTextureLayer(k.FRAMEBUFFER,k.COLOR_ATTACHMENT0,Dt.__webglTexture,Y||0,qt)}A=-1},this.readRenderTargetPixels=function(R,B,Y,j,H,gt,Mt){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Rt=_t.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&Mt!==void 0&&(Rt=Rt[Mt]),Rt){nt.bindFramebuffer(k.FRAMEBUFFER,Rt);try{const Dt=R.texture,qt=Dt.format,Ot=Dt.type;if(qt!==Rn&&Et.convert(qt)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const kt=Ot===br&&(wt.has("EXT_color_buffer_half_float")||Q.isWebGL2&&wt.has("EXT_color_buffer_float"));if(Ot!==bi&&Et.convert(Ot)!==k.getParameter(k.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Ot===Bn&&(Q.isWebGL2||wt.has("OES_texture_float")||wt.has("WEBGL_color_buffer_float")))&&!kt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}B>=0&&B<=R.width-j&&Y>=0&&Y<=R.height-H&&k.readPixels(B,Y,j,H,Et.convert(qt),Et.convert(Ot),gt)}finally{const Dt=w!==null?_t.get(w).__webglFramebuffer:null;nt.bindFramebuffer(k.FRAMEBUFFER,Dt)}}},this.copyFramebufferToTexture=function(R,B,Y=0){const j=Math.pow(2,-Y),H=Math.floor(B.image.width*j),gt=Math.floor(B.image.height*j);pt.setTexture2D(B,0),k.copyTexSubImage2D(k.TEXTURE_2D,Y,0,0,R.x,R.y,H,gt),nt.unbindTexture()},this.copyTextureToTexture=function(R,B,Y,j=0){const H=B.image.width,gt=B.image.height,Mt=Et.convert(Y.format),Rt=Et.convert(Y.type);pt.setTexture2D(Y,0),k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,Y.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Y.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,Y.unpackAlignment),B.isDataTexture?k.texSubImage2D(k.TEXTURE_2D,j,R.x,R.y,H,gt,Mt,Rt,B.image.data):B.isCompressedTexture?k.compressedTexSubImage2D(k.TEXTURE_2D,j,R.x,R.y,B.mipmaps[0].width,B.mipmaps[0].height,Mt,B.mipmaps[0].data):k.texSubImage2D(k.TEXTURE_2D,j,R.x,R.y,Mt,Rt,B.image),j===0&&Y.generateMipmaps&&k.generateMipmap(k.TEXTURE_2D),nt.unbindTexture()},this.copyTextureToTexture3D=function(R,B,Y,j,H=0){if(y.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const gt=Math.round(R.max.x-R.min.x),Mt=Math.round(R.max.y-R.min.y),Rt=R.max.z-R.min.z+1,Dt=Et.convert(j.format),qt=Et.convert(j.type);let Ot;if(j.isData3DTexture)pt.setTexture3D(j,0),Ot=k.TEXTURE_3D;else if(j.isDataArrayTexture||j.isCompressedArrayTexture)pt.setTexture2DArray(j,0),Ot=k.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}k.pixelStorei(k.UNPACK_FLIP_Y_WEBGL,j.flipY),k.pixelStorei(k.UNPACK_PREMULTIPLY_ALPHA_WEBGL,j.premultiplyAlpha),k.pixelStorei(k.UNPACK_ALIGNMENT,j.unpackAlignment);const kt=k.getParameter(k.UNPACK_ROW_LENGTH),Se=k.getParameter(k.UNPACK_IMAGE_HEIGHT),cn=k.getParameter(k.UNPACK_SKIP_PIXELS),Le=k.getParameter(k.UNPACK_SKIP_ROWS),Xn=k.getParameter(k.UNPACK_SKIP_IMAGES),_e=Y.isCompressedTexture?Y.mipmaps[H]:Y.image;k.pixelStorei(k.UNPACK_ROW_LENGTH,_e.width),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,_e.height),k.pixelStorei(k.UNPACK_SKIP_PIXELS,R.min.x),k.pixelStorei(k.UNPACK_SKIP_ROWS,R.min.y),k.pixelStorei(k.UNPACK_SKIP_IMAGES,R.min.z),Y.isDataTexture||Y.isData3DTexture?k.texSubImage3D(Ot,H,B.x,B.y,B.z,gt,Mt,Rt,Dt,qt,_e.data):j.isCompressedArrayTexture?k.compressedTexSubImage3D(Ot,H,B.x,B.y,B.z,gt,Mt,Rt,Dt,_e.data):k.texSubImage3D(Ot,H,B.x,B.y,B.z,gt,Mt,Rt,Dt,qt,_e),k.pixelStorei(k.UNPACK_ROW_LENGTH,kt),k.pixelStorei(k.UNPACK_IMAGE_HEIGHT,Se),k.pixelStorei(k.UNPACK_SKIP_PIXELS,cn),k.pixelStorei(k.UNPACK_SKIP_ROWS,Le),k.pixelStorei(k.UNPACK_SKIP_IMAGES,Xn),H===0&&j.generateMipmaps&&k.generateMipmap(Ot),nt.unbindTexture()},this.initTexture=function(R){R.isCubeTexture?pt.setTextureCube(R,0):R.isData3DTexture?pt.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?pt.setTexture2DArray(R,0):pt.setTexture2D(R,0),nt.unbindTexture()},this.resetState=function(){M=0,T=0,w=null,nt.reset(),yt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ei}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=t===Uc?"display-p3":"srgb",e.unpackColorSpace=ne.workingColorSpace===ua?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(t){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=t}}class Xv extends rd{}Xv.prototype.isWebGL1Renderer=!0;class Yv extends Pe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new _n,this.environmentRotation=new _n,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class jv extends We{constructor(t=null,e=1,n=1,s,r,o,a,c,l=ke,h=ke,u,d){super(null,o,a,c,l,h,s,r,u,d),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Yh extends mn{constructor(t,e,n,s=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=s}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Ds=new te,jh=new te,So=[],$h=new gn,$v=new te,yr=new bt,xr=new un;class Zv extends bt{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Yh(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let s=0;s<n;s++)this.setMatrixAt(s,$v)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new gn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,Ds),$h.copy(t.boundingBox).applyMatrix4(Ds),this.boundingBox.union($h)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new un),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,Ds),xr.copy(t.boundingSphere).applyMatrix4(Ds),this.boundingSphere.union(xr)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,s=this.morphTexture.source.data.data,r=n.length+1,o=t*r+1;for(let a=0;a<n.length;a++)n[a]=s[o+a]}raycast(t,e){const n=this.matrixWorld,s=this.count;if(yr.geometry=this.geometry,yr.material=this.material,yr.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),xr.copy(this.boundingSphere),xr.applyMatrix4(n),t.ray.intersectsSphere(xr)!==!1))for(let r=0;r<s;r++){this.getMatrixAt(r,Ds),jh.multiplyMatrices(n,Ds),yr.matrixWorld=jh,yr.raycast(t,So);for(let o=0,a=So.length;o<a;o++){const c=So[o];c.instanceId=r,c.object=this,e.push(c)}So.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Yh(new Float32Array(this.instanceMatrix.count*3),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,s=n.length+1;this.morphTexture===null&&(this.morphTexture=new jv(new Float32Array(s*this.count),s,this.count,Lu,Bn));const r=this.morphTexture.source.data.data;let o=0;for(let l=0;l<n.length;l++)o+=n[l];const a=this.geometry.morphTargetsRelative?1:1-o,c=s*t;r[c]=a,r.set(n,c+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class od extends or{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Kt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Zh=new te,xc=new kc,To=new un,wo=new C;class Kv extends Pe{constructor(t=new an,e=new od){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,s=this.matrixWorld,r=t.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),To.copy(n.boundingSphere),To.applyMatrix4(s),To.radius+=r,t.ray.intersectsSphere(To)===!1)return;Zh.copy(s).invert(),xc.copy(t.ray).applyMatrix4(Zh);const a=r/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,l=n.index,u=n.attributes.position;if(l!==null){const d=Math.max(0,o.start),m=Math.min(l.count,o.start+o.count);for(let g=d,_=m;g<_;g++){const p=l.getX(g);wo.fromBufferAttribute(u,p),Kh(wo,p,c,s,t,e,this)}}else{const d=Math.max(0,o.start),m=Math.min(u.count,o.start+o.count);for(let g=d,_=m;g<_;g++)wo.fromBufferAttribute(u,g),Kh(wo,g,c,s,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=s.length;r<o;r++){const a=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=r}}}}}function Kh(i,t,e,n,s,r,o){const a=xc.distanceSqToPoint(i);if(a<e){const c=new C;xc.closestPointToPoint(i,c),c.applyMatrix4(n);const l=s.ray.origin.distanceTo(c);if(l<s.near||l>s.far)return;r.push({distance:l,distanceToRay:Math.sqrt(a),point:c,index:t,face:null,object:o})}}class Jv extends We{constructor(t,e,n,s,r,o,a,c,l){super(t,e,n,s,r,o,a,c,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Ai extends an{constructor(t=1,e=32,n=0,s=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:s},e=Math.max(3,e);const r=[],o=[],a=[],c=[],l=new C,h=new Ut;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let u=0,d=3;u<=e;u++,d+=3){const m=n+u/e*s;l.x=t*Math.cos(m),l.y=t*Math.sin(m),o.push(l.x,l.y,l.z),a.push(0,0,1),h.x=(o[d]/t+1)/2,h.y=(o[d+1]/t+1)/2,c.push(h.x,h.y)}for(let u=1;u<=e;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new Me(o,3)),this.setAttribute("normal",new Me(a,3)),this.setAttribute("uv",new Me(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ai(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Ui extends an{constructor(t=1,e=1,n=1,s=32,r=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:s,heightSegments:r,openEnded:o,thetaStart:a,thetaLength:c};const l=this;s=Math.floor(s),r=Math.floor(r);const h=[],u=[],d=[],m=[];let g=0;const _=[],p=n/2;let f=0;x(),o===!1&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(h),this.setAttribute("position",new Me(u,3)),this.setAttribute("normal",new Me(d,3)),this.setAttribute("uv",new Me(m,2));function x(){const S=new C,M=new C;let T=0;const w=(e-t)/n;for(let A=0;A<=r;A++){const N=[],v=A/r,b=v*(e-t)+t;for(let I=0;I<=s;I++){const F=I/s,D=F*c+a,U=Math.sin(D),L=Math.cos(D);M.x=b*U,M.y=-v*n+p,M.z=b*L,u.push(M.x,M.y,M.z),S.set(U,w,L).normalize(),d.push(S.x,S.y,S.z),m.push(F,1-v),N.push(g++)}_.push(N)}for(let A=0;A<s;A++)for(let N=0;N<r;N++){const v=_[N][A],b=_[N+1][A],I=_[N+1][A+1],F=_[N][A+1];h.push(v,b,F),h.push(b,I,F),T+=6}l.addGroup(f,T,0),f+=T}function y(S){const M=g,T=new Ut,w=new C;let A=0;const N=S===!0?t:e,v=S===!0?1:-1;for(let I=1;I<=s;I++)u.push(0,p*v,0),d.push(0,v,0),m.push(.5,.5),g++;const b=g;for(let I=0;I<=s;I++){const D=I/s*c+a,U=Math.cos(D),L=Math.sin(D);w.x=N*L,w.y=p*v,w.z=N*U,u.push(w.x,w.y,w.z),d.push(0,v,0),T.x=U*.5+.5,T.y=L*.5*v+.5,m.push(T.x,T.y),g++}for(let I=0;I<s;I++){const F=M+I,D=b+I;S===!0?h.push(D,D+1,F):h.push(D+1,D,F),A+=3}l.addGroup(f,A,S===!0?1:2),f+=A}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ui(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Fi extends Ui{constructor(t=1,e=1,n=32,s=1,r=!1,o=0,a=Math.PI*2){super(0,t,e,n,s,r,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:s,openEnded:r,thetaStart:o,thetaLength:a}}static fromJSON(t){return new Fi(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Vr extends an{constructor(t=[],e=[],n=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:s};const r=[],o=[];a(s),l(n),h(),this.setAttribute("position",new Me(r,3)),this.setAttribute("normal",new Me(r.slice(),3)),this.setAttribute("uv",new Me(o,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const y=new C,S=new C,M=new C;for(let T=0;T<e.length;T+=3)m(e[T+0],y),m(e[T+1],S),m(e[T+2],M),c(y,S,M,x)}function c(x,y,S,M){const T=M+1,w=[];for(let A=0;A<=T;A++){w[A]=[];const N=x.clone().lerp(S,A/T),v=y.clone().lerp(S,A/T),b=T-A;for(let I=0;I<=b;I++)I===0&&A===T?w[A][I]=N:w[A][I]=N.clone().lerp(v,I/b)}for(let A=0;A<T;A++)for(let N=0;N<2*(T-A)-1;N++){const v=Math.floor(N/2);N%2===0?(d(w[A][v+1]),d(w[A+1][v]),d(w[A][v])):(d(w[A][v+1]),d(w[A+1][v+1]),d(w[A+1][v]))}}function l(x){const y=new C;for(let S=0;S<r.length;S+=3)y.x=r[S+0],y.y=r[S+1],y.z=r[S+2],y.normalize().multiplyScalar(x),r[S+0]=y.x,r[S+1]=y.y,r[S+2]=y.z}function h(){const x=new C;for(let y=0;y<r.length;y+=3){x.x=r[y+0],x.y=r[y+1],x.z=r[y+2];const S=p(x)/2/Math.PI+.5,M=f(x)/Math.PI+.5;o.push(S,1-M)}g(),u()}function u(){for(let x=0;x<o.length;x+=6){const y=o[x+0],S=o[x+2],M=o[x+4],T=Math.max(y,S,M),w=Math.min(y,S,M);T>.9&&w<.1&&(y<.2&&(o[x+0]+=1),S<.2&&(o[x+2]+=1),M<.2&&(o[x+4]+=1))}}function d(x){r.push(x.x,x.y,x.z)}function m(x,y){const S=x*3;y.x=t[S+0],y.y=t[S+1],y.z=t[S+2]}function g(){const x=new C,y=new C,S=new C,M=new C,T=new Ut,w=new Ut,A=new Ut;for(let N=0,v=0;N<r.length;N+=9,v+=6){x.set(r[N+0],r[N+1],r[N+2]),y.set(r[N+3],r[N+4],r[N+5]),S.set(r[N+6],r[N+7],r[N+8]),T.set(o[v+0],o[v+1]),w.set(o[v+2],o[v+3]),A.set(o[v+4],o[v+5]),M.copy(x).add(y).add(S).divideScalar(3);const b=p(M);_(T,v+0,x,b),_(w,v+2,y,b),_(A,v+4,S,b)}}function _(x,y,S,M){M<0&&x.x===1&&(o[y]=x.x-1),S.x===0&&S.z===0&&(o[y]=M/2/Math.PI+.5)}function p(x){return Math.atan2(x.z,-x.x)}function f(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Vr(t.vertices,t.indices,t.radius,t.details)}}class Ys extends Vr{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,s=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-s,-n,0,-s,n,0,s,-n,0,s,n,-s,-n,0,-s,n,0,s,-n,0,s,n,0,-n,0,-s,n,0,-s,-n,0,s,n,0,s],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Ys(t.radius,t.detail)}}class Gc extends Vr{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,s=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(s,r,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Gc(t.radius,t.detail)}}class Hc extends an{constructor(t=.5,e=1,n=32,s=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:s,thetaStart:r,thetaLength:o},n=Math.max(3,n),s=Math.max(1,s);const a=[],c=[],l=[],h=[];let u=t;const d=(e-t)/s,m=new C,g=new Ut;for(let _=0;_<=s;_++){for(let p=0;p<=n;p++){const f=r+p/n*o;m.x=u*Math.cos(f),m.y=u*Math.sin(f),c.push(m.x,m.y,m.z),l.push(0,0,1),g.x=(m.x/e+1)/2,g.y=(m.y/e+1)/2,h.push(g.x,g.y)}u+=d}for(let _=0;_<s;_++){const p=_*(n+1);for(let f=0;f<n;f++){const x=f+p,y=x,S=x+n+1,M=x+n+2,T=x+1;a.push(y,S,T),a.push(S,M,T)}}this.setIndex(a),this.setAttribute("position",new Me(c,3)),this.setAttribute("normal",new Me(l,3)),this.setAttribute("uv",new Me(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Hc(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Di extends an{constructor(t=1,e=32,n=16,s=0,r=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:s,phiLength:r,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let l=0;const h=[],u=new C,d=new C,m=[],g=[],_=[],p=[];for(let f=0;f<=n;f++){const x=[],y=f/n;let S=0;f===0&&o===0?S=.5/e:f===n&&c===Math.PI&&(S=-.5/e);for(let M=0;M<=e;M++){const T=M/e;u.x=-t*Math.cos(s+T*r)*Math.sin(o+y*a),u.y=t*Math.cos(o+y*a),u.z=t*Math.sin(s+T*r)*Math.sin(o+y*a),g.push(u.x,u.y,u.z),d.copy(u).normalize(),_.push(d.x,d.y,d.z),p.push(T+S,1-y),x.push(l++)}h.push(x)}for(let f=0;f<n;f++)for(let x=0;x<e;x++){const y=h[f][x+1],S=h[f][x],M=h[f+1][x],T=h[f+1][x+1];(f!==0||o>0)&&m.push(y,S,T),(f!==n-1||c<Math.PI)&&m.push(S,M,T)}this.setIndex(m),this.setAttribute("position",new Me(g,3)),this.setAttribute("normal",new Me(_,3)),this.setAttribute("uv",new Me(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Di(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Wc extends Vr{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],s=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,s,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Wc(t.radius,t.detail)}}class Jh extends or{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Kt(16777215),this.specular=new Kt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Kt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Bu,this.normalScale=new Ut(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new _n,this.combine=Lc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class fa extends Pe{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new Kt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const ac=new te,Qh=new C,tu=new C;class qc{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ut(512,512),this.map=null,this.mapPass=null,this.matrix=new te,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new zc,this._frameExtents=new Ut(1,1),this._viewportCount=1,this._viewports=[new ge(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Qh.setFromMatrixPosition(t.matrixWorld),e.position.copy(Qh),tu.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(tu),e.updateMatrixWorld(),ac.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ac),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(ac)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Qv extends qc{constructor(){super(new en(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=qs*2*t.angle*this.focus,s=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;(n!==e.fov||s!==e.aspect||r!==e.far)&&(e.fov=n,e.aspect=s,e.far=r,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class ty extends fa{constructor(t,e,n=0,s=Math.PI/3,r=0,o=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Pe.DEFAULT_UP),this.updateMatrix(),this.target=new Pe,this.distance=n,this.angle=s,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new Qv}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const eu=new te,Mr=new C,cc=new C;class ey extends qc{constructor(){super(new en(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Ut(4,2),this._viewportCount=6,this._viewports=[new ge(2,1,1,1),new ge(0,1,1,1),new ge(3,1,1,1),new ge(1,1,1,1),new ge(3,0,1,1),new ge(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,s=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Mr.setFromMatrixPosition(t.matrixWorld),n.position.copy(Mr),cc.copy(n.position),cc.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(cc),n.updateMatrixWorld(),s.makeTranslation(-Mr.x,-Mr.y,-Mr.z),eu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(eu)}}class ii extends fa{constructor(t,e,n=0,s=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new ey}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class ny extends qc{constructor(){super(new Ju(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class nu extends fa{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Pe.DEFAULT_UP),this.updateMatrix(),this.target=new Pe,this.shadow=new ny}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class iy extends fa{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}let sy=class{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=iu(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=iu();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}};function iu(){return(typeof performance>"u"?Date:performance).now()}const su=new te;class ad{constructor(t,e,n=0,s=1/0){this.ray=new kc(t,e),this.near=n,this.far=s,this.camera=null,this.layers=new Bc,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return su.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(su),this}intersectObject(t,e=!0,n=[]){return Mc(t,this,n,e),n.sort(ru),n}intersectObjects(t,e=!0,n=[]){for(let s=0,r=t.length;s<r;s++)Mc(t[s],this,n,e);return n.sort(ru),n}}function ru(i,t){return i.distance-t.distance}function Mc(i,t,e,n){if(i.layers.test(t.layers)&&i.raycast(t,e),n===!0){const s=i.children;for(let r=0,o=s.length;r<o;r++)Mc(s[r],t,e,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Nc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Nc);const cd="14.9.17",ou=(i,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:i}),au=(i,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:i}),Sc=(i,t)=>({startTime:t,type:"setValue",value:i}),ld=(i,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:i}),hd=(i,t,{startTime:e,target:n,timeConstant:s})=>n+(t-n)*Math.exp((e-i)/s),Fs=i=>i.type==="exponentialRampToValue",Bo=i=>i.type==="linearRampToValue",xi=i=>Fs(i)||Bo(i),Xc=i=>i.type==="setValue",ti=i=>i.type==="setValueCurve",zo=(i,t,e,n)=>{const s=i[t];return s===void 0?n:xi(s)||Xc(s)?s.value:ti(s)?s.values[s.values.length-1]:hd(e,zo(i,t-1,s.startTime,n),s)},cu=(i,t,e,n,s)=>e===void 0?[n.insertTime,s]:xi(e)?[e.endTime,e.value]:Xc(e)?[e.startTime,e.value]:ti(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,zo(i,t-1,e.startTime,s)],Tc=i=>i.type==="cancelAndHold",wc=i=>i.type==="cancelScheduledValues",vi=i=>Tc(i)||wc(i)?i.cancelTime:Fs(i)||Bo(i)?i.endTime:i.startTime,lu=(i,t,e,{endTime:n,value:s})=>e===s?s:0<e&&0<s||e<0&&s<0?e*(s/e)**((i-t)/(n-t)):0,hu=(i,t,e,{endTime:n,value:s})=>e+(i-t)/(n-t)*(s-e),ry=(i,t)=>{const e=Math.floor(t),n=Math.ceil(t);return e===n?i[e]:(1-(t-e))*i[e]+(1-(n-t))*i[n]},oy=(i,{duration:t,startTime:e,values:n})=>{const s=(i-e)/t*(n.length-1);return ry(n,s)},Eo=i=>i.type==="setTarget";class ay{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=vi(t);if(Tc(t)||wc(t)){const n=this._automationEvents.findIndex(r=>wc(t)&&ti(r)?r.startTime+r.duration>=e:vi(r)>=e),s=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),Tc(t)){const r=this._automationEvents[this._automationEvents.length-1];if(s!==void 0&&xi(s)){if(r!==void 0&&Eo(r))throw new Error("The internal list is malformed.");const o=r===void 0?s.insertTime:ti(r)?r.startTime+r.duration:vi(r),a=r===void 0?this._defaultValue:ti(r)?r.values[r.values.length-1]:r.value,c=Fs(s)?lu(e,o,a,s):hu(e,o,a,s),l=Fs(s)?ou(c,e,this._currenTime):au(c,e,this._currenTime);this._automationEvents.push(l)}if(r!==void 0&&Eo(r)&&this._automationEvents.push(Sc(this.getValue(e),e)),r!==void 0&&ti(r)&&r.startTime+r.duration>e){const o=e-r.startTime,a=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(o*a)),l=o/(c-1)*a,h=r.values.slice(0,c);if(l<1)for(let u=1;u<c;u+=1){const d=l*u%1;h[u]=r.values[u-1]*(1-d)+r.values[u]*d}this._automationEvents[this._automationEvents.length-1]=ld(h,r.startTime,o)}}}else{const n=this._automationEvents.findIndex(o=>vi(o)>e),s=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(s!==void 0&&ti(s)&&vi(s)+s.duration>e)return!1;const r=Fs(t)?ou(t.value,t.endTime,this._currenTime):Bo(t)?au(t.value,e,this._currenTime):t;if(n===-1)this._automationEvents.push(r);else{if(ti(t)&&e+t.duration>vi(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(n=>vi(n)>t);if(e>1){const n=this._automationEvents.slice(e-1),s=n[0];Eo(s)&&n.unshift(Sc(zo(this._automationEvents,e-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=n}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(o=>vi(o)>t),n=this._automationEvents[e],s=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[s];if(r!==void 0&&Eo(r)&&(n===void 0||!xi(n)||n.insertTime>t))return hd(t,zo(this._automationEvents,s-1,r.startTime,this._defaultValue),r);if(r!==void 0&&Xc(r)&&(n===void 0||!xi(n)))return r.value;if(r!==void 0&&ti(r)&&(n===void 0||!xi(n)||r.startTime+r.duration>t))return t<r.startTime+r.duration?oy(t,r):r.values[r.values.length-1];if(r!==void 0&&xi(r)&&(n===void 0||!xi(n)))return r.value;if(n!==void 0&&Fs(n)){const[o,a]=cu(this._automationEvents,s,r,n,this._defaultValue);return lu(t,o,a,n)}if(n!==void 0&&Bo(n)){const[o,a]=cu(this._automationEvents,s,r,n,this._defaultValue);return hu(t,o,a,n)}return this._defaultValue}}const cy=i=>({cancelTime:i,type:"cancelAndHold"}),ly=i=>({cancelTime:i,type:"cancelScheduledValues"}),hy=(i,t)=>({endTime:t,type:"exponentialRampToValue",value:i}),uy=(i,t)=>({endTime:t,type:"linearRampToValue",value:i}),dy=(i,t,e)=>({startTime:t,target:i,timeConstant:e,type:"setTarget"}),fy=()=>new DOMException("","AbortError"),py=i=>(t,e,[n,s,r],o)=>{i(t[s],[e,n,r],a=>a[0]===e&&a[1]===n,o)},my=i=>(t,e,n)=>{const s=[];for(let r=0;r<n.numberOfInputs;r+=1)s.push(new Set);i.set(t,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},gy=i=>(t,e)=>{i.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},js=new WeakSet,ud=new WeakMap,Yc=new WeakMap,dd=new WeakMap,jc=new WeakMap,pa=new WeakMap,fd=new WeakMap,Ec=new WeakMap,bc=new WeakMap,Ac=new WeakMap,pd={construct(){return pd}},_y=i=>{try{const t=new Proxy(i,pd);new t}catch{return!1}return!0},uu=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,du=(i,t)=>{const e=[];let n=i.replace(/^[\s]+/,""),s=n.match(uu);for(;s!==null;){const r=s[1].slice(1,-1),o=s[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(o),n=n.slice(s[0].length).replace(/^[\s]+/,""),s=n.match(uu)}return[e.join(";"),n]},fu=i=>{if(i!==void 0&&!Array.isArray(i))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},pu=i=>{if(!_y(i))throw new TypeError("The given value for processorCtor should be a constructor.");if(i.prototype===null||typeof i.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},vy=(i,t,e,n,s,r,o,a,c,l,h,u,d)=>{let m=0;return(g,_,p={credentials:"omit"})=>{const f=h.get(g);if(f!==void 0&&f.has(_))return Promise.resolve();const x=l.get(g);if(x!==void 0){const M=x.get(_);if(M!==void 0)return M}const y=r(g),S=y.audioWorklet===void 0?s(_).then(([M,T])=>{const[w,A]=du(M,T),N=`${w};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${A}
})})(window,'_AWGS')`;return e(N)}).then(()=>{const M=d._AWGS.pop();if(M===void 0)throw new SyntaxError;n(y.currentTime,y.sampleRate,()=>M(class{},void 0,(T,w)=>{if(T.trim()==="")throw t();const A=bc.get(y);if(A!==void 0){if(A.has(T))throw t();pu(w),fu(w.parameterDescriptors),A.set(T,w)}else pu(w),fu(w.parameterDescriptors),bc.set(y,new Map([[T,w]]))},y.sampleRate,void 0,void 0))}):Promise.all([s(_),Promise.resolve(i(u,u))]).then(([[M,T],w])=>{const A=m+1;m=A;const[N,v]=du(M,T),D=`${N};((AudioWorkletProcessor,registerProcessor)=>{${v}
})(${w?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${w?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${w?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${A}',class extends AudioWorkletProcessor{process(){return !1}})`,U=new Blob([D],{type:"application/javascript; charset=utf-8"}),L=URL.createObjectURL(U);return y.audioWorklet.addModule(L,p).then(()=>{if(a(y))return y;const V=o(y);return V.audioWorklet.addModule(L,p).then(()=>V)}).then(V=>{if(c===null)throw new SyntaxError;try{new c(V,`__sac${A}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(L))});return x===void 0?l.set(g,new Map([[_,S]])):x.set(_,S),S.then(()=>{const M=h.get(g);M===void 0?h.set(g,new Set([_])):M.add(_)}).finally(()=>{const M=l.get(g);M!==void 0&&M.delete(_)}),S}},In=(i,t)=>{const e=i.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},ma=(i,t)=>{const e=Array.from(i).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[n]=e;return i.delete(n),n},md=(i,t,e,n)=>{const s=In(i,t),r=ma(s,o=>o[0]===e&&o[1]===n);return s.size===0&&i.delete(t),r},Gr=i=>In(fd,i),$s=i=>{if(js.has(i))throw new Error("The AudioNode is already stored.");js.add(i),Gr(i).forEach(t=>t(!0))},gd=i=>"port"in i,Hr=i=>{if(!js.has(i))throw new Error("The AudioNode is not stored.");js.delete(i),Gr(i).forEach(t=>t(!1))},Cc=(i,t)=>{!gd(i)&&t.every(e=>e.size===0)&&Hr(i)},yy=(i,t,e,n,s,r,o,a,c,l,h,u,d)=>{const m=new WeakMap;return(g,_,p,f,x)=>{const{activeInputs:y,passiveInputs:S}=r(_),{outputs:M}=r(g),T=a(g),w=A=>{const N=c(_),v=c(g);if(A){const b=md(S,g,p,f);i(y,g,b,!1),!x&&!u(g)&&e(v,N,p,f),d(_)&&$s(_)}else{const b=n(y,g,p,f);t(S,f,b,!1),!x&&!u(g)&&s(v,N,p,f);const I=o(_);if(I===0)h(_)&&Cc(_,y);else{const F=m.get(_);F!==void 0&&clearTimeout(F),m.set(_,setTimeout(()=>{h(_)&&Cc(_,y)},I*1e3))}}};return l(M,[_,p,f],A=>A[0]===_&&A[1]===p&&A[2]===f,!0)?(T.add(w),h(g)?i(y,g,[p,f,w],!0):t(S,f,[g,p,w],!0),!0):!1}},xy=i=>(t,e,[n,s,r],o)=>{const a=t.get(n);a===void 0?t.set(n,new Set([[s,e,r]])):i(a,[s,e,r],c=>c[0]===s&&c[1]===e,o)},My=i=>(t,e)=>{const n=i(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(n).connect(t.destination);const s=()=>{e.removeEventListener("ended",s),e.disconnect(n),n.disconnect()};e.addEventListener("ended",s)},Sy=i=>(t,e)=>{i(t).add(e)},Ty={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},wy=(i,t,e,n,s,r)=>class extends i{constructor(a,c){const l=s(a),h={...Ty,...c},u=n(l,h),d=r(l)?t():null;super(a,!1,u,d),this._nativeAnalyserNode=u}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},Xe=(i,t)=>i.context===t,Ey=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=t(r);if(!Xe(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=i(o,l)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},Vo=i=>{try{i.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Hn=()=>new DOMException("","IndexSizeError"),$c=i=>{i.getChannelData=(t=>e=>{try{return t.call(i,e)}catch(n){throw n.code===12?Hn():n}})(i.getChannelData)},by={numberOfChannels:1},Ay=(i,t,e,n,s,r,o,a)=>{let c=null;return class _d{constructor(h){if(s===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:u,numberOfChannels:d,sampleRate:m}={...by,...h};c===null&&(c=new s(1,1,44100));const g=n!==null&&t(r,r)?new n({length:u,numberOfChannels:d,sampleRate:m}):c.createBuffer(d,u,m);if(g.numberOfChannels===0)throw e();return typeof g.copyFromChannel!="function"?(o(g),$c(g)):t(Vo,()=>Vo(g))||a(g),i.add(g),g}static[Symbol.hasInstance](h){return h!==null&&typeof h=="object"&&Object.getPrototypeOf(h)===_d.prototype||i.has(h)}}},dn=-34028234663852886e22,Ke=34028234663852886e22,ni=i=>js.has(i),Cy={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},Ry=(i,t,e,n,s,r,o,a)=>class extends i{constructor(l,h){const u=r(l),d={...Cy,...h},m=s(u,d),g=o(u),_=g?t():null;super(l,!1,m,_),this._audioBufferSourceNodeRenderer=_,this._isBufferNullified=!1,this._isBufferSet=d.buffer!==null,this._nativeAudioBufferSourceNode=m,this._onended=null,this._playbackRate=e(this,g,m.playbackRate,Ke,dn)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const h=typeof l=="function"?a(this,l):null;this._nativeAudioBufferSourceNode.onended=h;const u=this._nativeAudioBufferSourceNode.onended;this._onended=u!==null&&u===h?l:u}get playbackRate(){return this._playbackRate}start(l=0,h=0,u){if(this._nativeAudioBufferSourceNode.start(l,h,u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=u===void 0?[l,h]:[l,h,u]),this.context.state!=="closed"){$s(this);const d=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",d),ni(this)&&Hr(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",d)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},Py=(i,t,e,n,s)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,h)=>{let u=e(l);const d=Xe(u,h);if(!d){const m={buffer:u.buffer,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,loop:u.loop,loopEnd:u.loopEnd,loopStart:u.loopStart,playbackRate:u.playbackRate.value};u=t(h,m),o!==null&&u.start(...o),a!==null&&u.stop(a)}return r.set(h,u),d?await i(h,l.playbackRate,u.playbackRate):await n(h,l.playbackRate,u.playbackRate),await s(l,h,u),u};return{set start(l){o=l},set stop(l){a=l},render(l,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):c(l,h)}}},Dy=i=>"playbackRate"in i,Iy=i=>"frequency"in i&&"gain"in i,Ny=i=>"offset"in i,Ly=i=>!("frequency"in i)&&"gain"in i,Oy=i=>"detune"in i&&"frequency"in i&&!("gain"in i),Uy=i=>"pan"in i,Je=i=>In(ud,i),Wr=i=>In(dd,i),Rc=(i,t)=>{const{activeInputs:e}=Je(i);e.forEach(s=>s.forEach(([r])=>{t.includes(i)||Rc(r,[...t,i])}));const n=Dy(i)?[i.playbackRate]:gd(i)?Array.from(i.parameters.values()):Iy(i)?[i.Q,i.detune,i.frequency,i.gain]:Ny(i)?[i.offset]:Ly(i)?[i.gain]:Oy(i)?[i.detune,i.frequency]:Uy(i)?[i.pan]:[];for(const s of n){const r=Wr(s);r!==void 0&&r.activeInputs.forEach(([o])=>Rc(o,t))}ni(i)&&Hr(i)},vd=i=>{Rc(i.destination,[])},Fy=i=>i===void 0||typeof i=="number"||typeof i=="string"&&(i==="balanced"||i==="interactive"||i==="playback"),ky=(i,t,e,n,s,r,o,a,c)=>class extends i{constructor(h={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let u;try{u=new c(h)}catch(g){throw g.code===12&&g.message==="sampleRate is not in range"?e():g}if(u===null)throw n();if(!Fy(h.latencyHint))throw new TypeError(`The provided value '${h.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(h.sampleRate!==void 0&&u.sampleRate!==h.sampleRate)throw e();super(u,2);const{latencyHint:d}=h,{sampleRate:m}=u;if(this._baseLatency=typeof u.baseLatency=="number"?u.baseLatency:d==="balanced"?512/m:d==="interactive"||d===void 0?256/m:d==="playback"?1024/m:Math.max(2,Math.min(128,Math.round(d*m/128)))*128/m,this._nativeAudioContext=u,c.name==="webkitAudioContext"?(this._nativeGainNode=u.createGain(),this._nativeOscillatorNode=u.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(u.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,u.state==="running"){this._state="suspended";const g=()=>{this._state==="suspended"&&(this._state=null),u.removeEventListener("statechange",g)};u.addEventListener("statechange",g)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),vd(this)}))}createMediaElementSource(h){return new s(this,{mediaElement:h})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(h){return new o(this,{mediaStream:h})}createMediaStreamTrackSource(h){return new a(this,{mediaStreamTrack:h})}resume(){return this._state==="suspended"?new Promise((h,u)=>{const d=()=>{this._nativeAudioContext.removeEventListener("statechange",d),this._nativeAudioContext.state==="running"?h():this.resume().then(h,u)};this._nativeAudioContext.addEventListener("statechange",d)}):this._nativeAudioContext.resume().catch(h=>{throw h===void 0||h.code===15?t():h})}suspend(){return this._nativeAudioContext.suspend().catch(h=>{throw h===void 0?t():h})}},By=(i,t,e,n,s,r,o,a)=>class extends i{constructor(l,h){const u=r(l),d=o(u),m=s(u,h,d),g=d?t(a):null;super(l,!1,m,g),this._isNodeOfNativeOfflineAudioContext=d,this._nativeAudioDestinationNode=m}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},zy=i=>{const t=new WeakMap,e=async(n,s)=>{const r=s.destination;return t.set(s,r),await i(n,s,r),r};return{render(n,s){const r=t.get(s);return r!==void 0?Promise.resolve(r):e(n,s)}}},Vy=(i,t,e,n,s,r,o,a)=>(c,l)=>{const h=l.listener,u=()=>{const M=new Float32Array(1),T=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),w=o(l);let A=!1,N=[0,0,-1,0,1,0],v=[0,0,0];const b=()=>{if(A)return;A=!0;const U=n(l,256,9,0);U.onaudioprocess=({inputBuffer:L})=>{const V=[r(L,M,0),r(L,M,1),r(L,M,2),r(L,M,3),r(L,M,4),r(L,M,5)];V.some((G,X)=>G!==N[X])&&(h.setOrientation(...V),N=V);const z=[r(L,M,6),r(L,M,7),r(L,M,8)];z.some((G,X)=>G!==v[X])&&(h.setPosition(...z),v=z)},T.connect(U)},I=U=>L=>{L!==N[U]&&(N[U]=L,h.setOrientation(...N))},F=U=>L=>{L!==v[U]&&(v[U]=L,h.setPosition(...v))},D=(U,L,V)=>{const z=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:L});z.connect(T,0,U),z.start(),Object.defineProperty(z.offset,"defaultValue",{get(){return L}});const G=i({context:c},w,z.offset,Ke,dn);return a(G,"value",X=>()=>X.call(G),X=>K=>{try{X.call(G,K)}catch(rt){if(rt.code!==9)throw rt}b(),w&&V(K)}),G.cancelAndHoldAtTime=(X=>w?()=>{throw s()}:(...K)=>{const rt=X.apply(G,K);return b(),rt})(G.cancelAndHoldAtTime),G.cancelScheduledValues=(X=>w?()=>{throw s()}:(...K)=>{const rt=X.apply(G,K);return b(),rt})(G.cancelScheduledValues),G.exponentialRampToValueAtTime=(X=>w?()=>{throw s()}:(...K)=>{const rt=X.apply(G,K);return b(),rt})(G.exponentialRampToValueAtTime),G.linearRampToValueAtTime=(X=>w?()=>{throw s()}:(...K)=>{const rt=X.apply(G,K);return b(),rt})(G.linearRampToValueAtTime),G.setTargetAtTime=(X=>w?()=>{throw s()}:(...K)=>{const rt=X.apply(G,K);return b(),rt})(G.setTargetAtTime),G.setValueAtTime=(X=>w?()=>{throw s()}:(...K)=>{const rt=X.apply(G,K);return b(),rt})(G.setValueAtTime),G.setValueCurveAtTime=(X=>w?()=>{throw s()}:(...K)=>{const rt=X.apply(G,K);return b(),rt})(G.setValueCurveAtTime),G};return{forwardX:D(0,0,I(0)),forwardY:D(1,0,I(1)),forwardZ:D(2,-1,I(2)),positionX:D(6,0,F(0)),positionY:D(7,0,F(1)),positionZ:D(8,0,F(2)),upX:D(3,0,I(3)),upY:D(4,1,I(4)),upZ:D(5,0,I(5))}},{forwardX:d,forwardY:m,forwardZ:g,positionX:_,positionY:p,positionZ:f,upX:x,upY:y,upZ:S}=h.forwardX===void 0?u():h;return{get forwardX(){return d},get forwardY(){return m},get forwardZ(){return g},get positionX(){return _},get positionY(){return p},get positionZ(){return f},get upX(){return x},get upY(){return y},get upZ(){return S}}},Go=i=>"context"in i,qr=i=>Go(i[0]),ds=(i,t,e,n)=>{for(const s of i)if(e(s)){if(n)return!1;throw Error("The set contains at least one similar element.")}return i.add(t),!0},mu=(i,t,[e,n],s)=>{ds(i,[t,e,n],r=>r[0]===t&&r[1]===e,s)},gu=(i,[t,e,n],s)=>{const r=i.get(t);r===void 0?i.set(t,new Set([[e,n]])):ds(r,[e,n],o=>o[0]===e,s)},cr=i=>"inputs"in i,Ho=(i,t,e,n)=>{if(cr(t)){const s=t.inputs[n];return i.connect(s,e,0),[s,e,0]}return i.connect(t,e,n),[t,e,n]},yd=(i,t,e)=>{for(const n of i)if(n[0]===t&&n[1]===e)return i.delete(n),n;return null},Gy=(i,t,e)=>ma(i,n=>n[0]===t&&n[1]===e),xd=(i,t)=>{if(!Gr(i).delete(t))throw new Error("Missing the expected event listener.")},Md=(i,t,e)=>{const n=In(i,t),s=ma(n,r=>r[0]===e);return n.size===0&&i.delete(t),s},Wo=(i,t,e,n)=>{cr(t)?i.disconnect(t.inputs[n],e,0):i.disconnect(t,e,n)},ue=i=>In(Yc,i),Ar=i=>In(jc,i),os=i=>Ec.has(i),Po=i=>!js.has(i),_u=(i,t)=>new Promise(e=>{if(t!==null)e(!0);else{const n=i.createScriptProcessor(256,1,1),s=i.createGain(),r=i.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=i.createBufferSource();a.buffer=r,a.loop=!0,a.connect(n).connect(i.destination),a.connect(s),a.disconnect(s),n.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,h=>h===1)?e(!0):e(!1),a.stop(),n.onaudioprocess=null,a.disconnect(n),n.disconnect(i.destination)},a.start()}}),lc=(i,t)=>{const e=new Map;for(const n of i)for(const s of n){const r=e.get(s);e.set(s,r===void 0?1:r+1)}e.forEach((n,s)=>t(s,n))},qo=i=>"context"in i,Hy=i=>{const t=new Map;i.connect=(e=>(n,s=0,r=0)=>{const o=qo(n)?e(n,s,r):e(n,s),a=t.get(n);return a===void 0?t.set(n,[{input:r,output:s}]):a.every(c=>c.input!==r||c.output!==s)&&a.push({input:r,output:s}),o})(i.connect.bind(i)),i.disconnect=(e=>(n,s,r)=>{if(e.apply(i),n===void 0)t.clear();else if(typeof n=="number")for(const[o,a]of t){const c=a.filter(l=>l.output!==n);c.length===0?t.delete(o):t.set(o,c)}else if(t.has(n))if(s===void 0)t.delete(n);else{const o=t.get(n);if(o!==void 0){const a=o.filter(c=>c.output!==s&&(c.input!==r||r===void 0));a.length===0?t.delete(n):t.set(n,a)}}for(const[o,a]of t)a.forEach(c=>{qo(o)?i.connect(o,c.output,c.input):i.connect(o,c.output)})})(i.disconnect)},Wy=(i,t,e,n)=>{const{activeInputs:s,passiveInputs:r}=Wr(t),{outputs:o}=Je(i),a=Gr(i),c=l=>{const h=ue(i),u=Ar(t);if(l){const d=Md(r,i,e);mu(s,i,d,!1),!n&&!os(i)&&h.connect(u,e)}else{const d=Gy(s,i,e);gu(r,d,!1),!n&&!os(i)&&h.disconnect(u,e)}};return ds(o,[t,e],l=>l[0]===t&&l[1]===e,!0)?(a.add(c),ni(i)?mu(s,i,[e,c],!0):gu(r,[i,e,c],!0),!0):!1},qy=(i,t,e,n)=>{const{activeInputs:s,passiveInputs:r}=Je(t),o=yd(s[n],i,e);return o===null?[md(r,i,e,n)[2],!1]:[o[2],!0]},Xy=(i,t,e)=>{const{activeInputs:n,passiveInputs:s}=Wr(t),r=yd(n,i,e);return r===null?[Md(s,i,e)[1],!1]:[r[2],!0]},Zc=(i,t,e,n,s)=>{const[r,o]=qy(i,e,n,s);if(r!==null&&(xd(i,r),o&&!t&&!os(i)&&Wo(ue(i),ue(e),n,s)),ni(e)){const{activeInputs:a}=Je(e);Cc(e,a)}},Kc=(i,t,e,n)=>{const[s,r]=Xy(i,e,n);s!==null&&(xd(i,s),r&&!t&&!os(i)&&ue(i).disconnect(Ar(e),n))},Yy=(i,t)=>{const e=Je(i),n=[];for(const s of e.outputs)qr(s)?Zc(i,t,...s):Kc(i,t,...s),n.push(s[0]);return e.outputs.clear(),n},jy=(i,t,e)=>{const n=Je(i),s=[];for(const r of n.outputs)r[1]===e&&(qr(r)?Zc(i,t,...r):Kc(i,t,...r),s.push(r[0]),n.outputs.delete(r));return s},$y=(i,t,e,n,s)=>{const r=Je(i);return Array.from(r.outputs).filter(o=>o[0]===e&&(n===void 0||o[1]===n)&&(s===void 0||o[2]===s)).map(o=>(qr(o)?Zc(i,t,...o):Kc(i,t,...o),r.outputs.delete(o),o[0]))},Zy=(i,t,e,n,s,r,o,a,c,l,h,u,d,m,g,_)=>class extends l{constructor(f,x,y,S){super(y),this._context=f,this._nativeAudioNode=y;const M=h(f);u(M)&&e(_u,()=>_u(M,_))!==!0&&Hy(y),Yc.set(this,y),fd.set(this,new Set),f.state!=="closed"&&x&&$s(this),i(this,S,y)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(f){this._nativeAudioNode.channelCount=f}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(f){this._nativeAudioNode.channelCountMode=f}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(f){this._nativeAudioNode.channelInterpretation=f}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(f,x=0,y=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw s();const S=h(this._context),M=g(S);if(d(f)||m(f))throw r();if(Go(f)){const A=ue(f);try{const v=Ho(this._nativeAudioNode,A,x,y),b=Po(this);(M||b)&&this._nativeAudioNode.disconnect(...v),this.context.state!=="closed"&&!b&&Po(f)&&$s(f)}catch(v){throw v.code===12?r():v}if(t(this,f,x,y,M)){const v=c([this],f);lc(v,n(M))}return f}const T=Ar(f);if(T.name==="playbackRate"&&T.maxValue===1024)throw o();try{this._nativeAudioNode.connect(T,x),(M||Po(this))&&this._nativeAudioNode.disconnect(T,x)}catch(A){throw A.code===12?r():A}if(Wy(this,f,x,M)){const A=c([this],f);lc(A,n(M))}}disconnect(f,x,y){let S;const M=h(this._context),T=g(M);if(f===void 0)S=Yy(this,T);else if(typeof f=="number"){if(f<0||f>=this.numberOfOutputs)throw s();S=jy(this,T,f)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||Go(f)&&y!==void 0&&(y<0||y>=f.numberOfInputs))throw s();if(S=$y(this,T,f,x,y),S.length===0)throw r()}for(const w of S){const A=c([this],w);lc(A,a)}}},Ky=(i,t,e,n,s,r,o,a,c,l,h,u,d)=>(m,g,_,p=null,f=null)=>{const x=_.value,y=new ay(x),S=g?n(y):null,M={get defaultValue(){return x},get maxValue(){return p===null?_.maxValue:p},get minValue(){return f===null?_.minValue:f},get value(){return _.value},set value(T){_.value=T,M.setValueAtTime(T,m.context.currentTime)},cancelAndHoldAtTime(T){if(typeof _.cancelAndHoldAtTime=="function")S===null&&y.flush(m.context.currentTime),y.add(s(T)),_.cancelAndHoldAtTime(T);else{const w=Array.from(y).pop();S===null&&y.flush(m.context.currentTime),y.add(s(T));const A=Array.from(y).pop();_.cancelScheduledValues(T),w!==A&&A!==void 0&&(A.type==="exponentialRampToValue"?_.exponentialRampToValueAtTime(A.value,A.endTime):A.type==="linearRampToValue"?_.linearRampToValueAtTime(A.value,A.endTime):A.type==="setValue"?_.setValueAtTime(A.value,A.startTime):A.type==="setValueCurve"&&_.setValueCurveAtTime(A.values,A.startTime,A.duration))}return M},cancelScheduledValues(T){return S===null&&y.flush(m.context.currentTime),y.add(r(T)),_.cancelScheduledValues(T),M},exponentialRampToValueAtTime(T,w){if(T===0)throw new RangeError;if(!Number.isFinite(w)||w<0)throw new RangeError;const A=m.context.currentTime;return S===null&&y.flush(A),Array.from(y).length===0&&(y.add(l(x,A)),_.setValueAtTime(x,A)),y.add(o(T,w)),_.exponentialRampToValueAtTime(T,w),M},linearRampToValueAtTime(T,w){const A=m.context.currentTime;return S===null&&y.flush(A),Array.from(y).length===0&&(y.add(l(x,A)),_.setValueAtTime(x,A)),y.add(a(T,w)),_.linearRampToValueAtTime(T,w),M},setTargetAtTime(T,w,A){return S===null&&y.flush(m.context.currentTime),y.add(c(T,w,A)),_.setTargetAtTime(T,w,A),M},setValueAtTime(T,w){return S===null&&y.flush(m.context.currentTime),y.add(l(T,w)),_.setValueAtTime(T,w),M},setValueCurveAtTime(T,w,A){const N=T instanceof Float32Array?T:new Float32Array(T);if(u!==null&&u.name==="webkitAudioContext"){const v=w+A,b=m.context.sampleRate,I=Math.ceil(w*b),F=Math.floor(v*b),D=F-I,U=new Float32Array(D);for(let V=0;V<D;V+=1){const z=(N.length-1)/A*((I+V)/b-w),G=Math.floor(z),X=Math.ceil(z);U[V]=G===X?N[G]:(1-(z-G))*N[G]+(1-(X-z))*N[X]}S===null&&y.flush(m.context.currentTime),y.add(h(U,w,A)),_.setValueCurveAtTime(U,w,A);const L=F/b;L<v&&d(M,U[U.length-1],L),d(M,N[N.length-1],v)}else S===null&&y.flush(m.context.currentTime),y.add(h(N,w,A)),_.setValueCurveAtTime(N,w,A);return M}};return e.set(M,_),t.set(M,m),i(M,S),M},Jy=i=>({replay(t){for(const e of i)if(e.type==="exponentialRampToValue"){const{endTime:n,value:s}=e;t.exponentialRampToValueAtTime(s,n)}else if(e.type==="linearRampToValue"){const{endTime:n,value:s}=e;t.linearRampToValueAtTime(s,n)}else if(e.type==="setTarget"){const{startTime:n,target:s,timeConstant:r}=e;t.setTargetAtTime(s,n,r)}else if(e.type==="setValue"){const{startTime:n,value:s}=e;t.setValueAtTime(s,n)}else if(e.type==="setValueCurve"){const{duration:n,startTime:s,values:r}=e;t.setValueCurveAtTime(r,s,n)}else throw new Error("Can't apply an unknown automation.")}});class Sd{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((n,s)=>t.call(e,n,s,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const Qy={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},tx=(i,t,e,n,s,r,o,a,c,l,h,u,d,m)=>class extends t{constructor(_,p,f){var x;const y=a(_),S=c(y),M=h({...Qy,...f});d(M);const T=bc.get(y),w=T==null?void 0:T.get(p),A=S||y.state!=="closed"?y:(x=o(y))!==null&&x!==void 0?x:y,N=s(A,S?null:_.baseLatency,l,p,w,M),v=S?n(p,M,w):null;super(_,!0,N,v);const b=[];N.parameters.forEach((F,D)=>{const U=e(this,S,F);b.push([D,U])}),this._nativeAudioWorkletNode=N,this._onprocessorerror=null,this._parameters=new Sd(b),S&&i(y,this);const{activeInputs:I}=r(this);u(N,I)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(_){const p=typeof _=="function"?m(this,_):null;this._nativeAudioWorkletNode.onprocessorerror=p;const f=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=f!==null&&f===p?_:f}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Xo(i,t,e,n,s){if(typeof i.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),i.copyFromChannel(t[e],n,s);else{const r=i.getChannelData(n);if(t[e].byteLength===0)t[e]=r.slice(s,s+128);else{const o=new Float32Array(r.buffer,s*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(o)}}}const Td=(i,t,e,n,s)=>{typeof i.copyToChannel=="function"?t[e].byteLength!==0&&i.copyToChannel(t[e],n,s):t[e].byteLength!==0&&i.getChannelData(n).set(t[e],s)},Yo=(i,t)=>{const e=[];for(let n=0;n<i;n+=1){const s=[],r=typeof t=="number"?t:t[n];for(let o=0;o<r;o+=1)s.push(new Float32Array(128));e.push(s)}return e},ex=(i,t)=>{const e=In(Ac,i),n=ue(t);return In(e,n)},nx=async(i,t,e,n,s,r,o)=>{const a=t===null?Math.ceil(i.context.length/128)*128:t.length,c=n.channelCount*n.numberOfInputs,l=s.reduce((p,f)=>p+f,0),h=l===0?null:e.createBuffer(l,a,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const u=Je(i),d=await ex(e,i),m=Yo(n.numberOfInputs,n.channelCount),g=Yo(n.numberOfOutputs,s),_=Array.from(i.parameters.keys()).reduce((p,f)=>({...p,[f]:new Float32Array(128)}),{});for(let p=0;p<a;p+=128){if(n.numberOfInputs>0&&t!==null)for(let f=0;f<n.numberOfInputs;f+=1)for(let x=0;x<n.channelCount;x+=1)Xo(t,m[f],x,x,p);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:f},x)=>{Xo(t,_,f,c+x,p)});for(let f=0;f<n.numberOfInputs;f+=1)for(let x=0;x<s[f];x+=1)g[f][x].byteLength===0&&(g[f][x]=new Float32Array(128));try{const f=m.map((y,S)=>u.activeInputs[S].size===0?[]:y),x=o(p/e.sampleRate,e.sampleRate,()=>d.process(f,g,_));if(h!==null)for(let y=0,S=0;y<n.numberOfOutputs;y+=1){for(let M=0;M<s[y];M+=1)Td(h,g[y],M,S+M,p);S+=s[y]}if(!x)break}catch(f){i.dispatchEvent(new ErrorEvent("processorerror",{colno:f.colno,filename:f.filename,lineno:f.lineno,message:f.message}));break}}return h},ix=(i,t,e,n,s,r,o,a,c,l,h,u,d,m,g,_)=>(p,f,x)=>{const y=new WeakMap;let S=null;const M=async(T,w)=>{let A=h(T),N=null;const v=Xe(A,w),b=Array.isArray(f.outputChannelCount)?f.outputChannelCount:Array.from(f.outputChannelCount);if(u===null){const I=b.reduce((L,V)=>L+V,0),F=s(w,{channelCount:Math.max(1,I),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,I)}),D=[];for(let L=0;L<T.numberOfOutputs;L+=1)D.push(n(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:b[L]}));const U=o(w,{channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,gain:1});U.connect=t.bind(null,D),U.disconnect=c.bind(null,D),N=[F,D,U]}else v||(A=new u(w,p));if(y.set(w,N===null?A:N[2]),N!==null){if(S===null){if(x===void 0)throw new Error("Missing the processor constructor.");if(d===null)throw new Error("Missing the native OfflineAudioContext constructor.");const V=T.channelCount*T.numberOfInputs,z=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length,G=V+z;S=nx(T,G===0?null:await(async()=>{const K=new d(G,Math.ceil(T.context.length/128)*128,w.sampleRate),rt=[],St=[];for(let ot=0;ot<f.numberOfInputs;ot+=1)rt.push(o(K,{channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,gain:1})),St.push(s(K,{channelCount:f.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:f.channelCount}));const W=await Promise.all(Array.from(T.parameters.values()).map(async ot=>{const vt=r(K,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:ot.value});return await m(K,ot,vt.offset),vt})),Z=n(K,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,V+z)});for(let ot=0;ot<f.numberOfInputs;ot+=1){rt[ot].connect(St[ot]);for(let vt=0;vt<f.channelCount;vt+=1)St[ot].connect(Z,vt,ot*f.channelCount+vt)}for(const[ot,vt]of W.entries())vt.connect(Z,0,V+ot),vt.start(0);return Z.connect(K.destination),await Promise.all(rt.map(ot=>g(T,K,ot))),_(K)})(),w,f,b,x,l)}const I=await S,F=e(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[D,U,L]=N;I!==null&&(F.buffer=I,F.start(0)),F.connect(D);for(let V=0,z=0;V<T.numberOfOutputs;V+=1){const G=U[V];for(let X=0;X<b[V];X+=1)D.connect(G,z+X,X);z+=b[V]}return L}if(v)for(const[I,F]of T.parameters.entries())await i(w,F,A.parameters.get(I));else for(const[I,F]of T.parameters.entries())await m(w,F,A.parameters.get(I));return await g(T,w,A),A};return{render(T,w){a(w,T);const A=y.get(w);return A!==void 0?Promise.resolve(A):M(T,w)}}},sx=(i,t,e,n,s,r,o,a,c,l,h,u,d,m,g,_,p,f,x,y)=>class extends g{constructor(M,T){super(M,T),this._nativeContext=M,this._audioWorklet=i===void 0?void 0:{addModule:(w,A)=>i(this,w,A)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new s(this)}createBuffer(M,T,w){return new e({length:T,numberOfChannels:M,sampleRate:w})}createBufferSource(){return new n(this)}createChannelMerger(M=6){return new r(this,{numberOfInputs:M})}createChannelSplitter(M=6){return new o(this,{numberOfOutputs:M})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(M=1){return new h(this,{maxDelayTime:M})}createDynamicsCompressor(){return new u(this)}createGain(){return new d(this)}createIIRFilter(M,T){return new m(this,{feedback:T,feedforward:M})}createOscillator(){return new _(this)}createPanner(){return new p(this)}createPeriodicWave(M,T,w={disableNormalization:!1}){return new f(this,{...w,imag:T,real:M})}createStereoPanner(){return new x(this)}createWaveShaper(){return new y(this)}decodeAudioData(M,T,w){return l(this._nativeContext,M).then(A=>(typeof T=="function"&&T(A),A),A=>{throw typeof w=="function"&&w(A),A})}},rx={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},ox=(i,t,e,n,s,r,o,a)=>class extends i{constructor(l,h){const u=r(l),d={...rx,...h},m=s(u,d),g=o(u),_=g?e():null;super(l,!1,m,_),this._Q=t(this,g,m.Q,Ke,dn),this._detune=t(this,g,m.detune,1200*Math.log2(Ke),-1200*Math.log2(Ke)),this._frequency=t(this,g,m.frequency,l.sampleRate/2,0),this._gain=t(this,g,m.gain,40*Math.log10(Ke),dn),this._nativeBiquadFilterNode=m,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,h,u){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,h,u)}catch(d){throw d.code===11?n():d}if(l.length!==h.length||h.length!==u.length)throw n()}},ax=(i,t,e,n,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=e(a);const h=Xe(l,c);if(!h){const u={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=t(c,u)}return r.set(c,l),h?(await i(c,a.Q,l.Q),await i(c,a.detune,l.detune),await i(c,a.frequency,l.frequency),await i(c,a.gain,l.gain)):(await n(c,a.Q,l.Q),await n(c,a.detune,l.detune),await n(c,a.frequency,l.frequency),await n(c,a.gain,l.gain)),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},cx=(i,t)=>(e,n)=>{const s=t.get(e);if(s!==void 0)return s;const r=i.get(e);if(r!==void 0)return r;try{const o=n();return o instanceof Promise?(i.set(e,o),o.catch(()=>!1).then(a=>(i.delete(e),t.set(e,a),a))):(t.set(e,o),o)}catch{return t.set(e,!1),!1}},lx={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},hx=(i,t,e,n,s)=>class extends i{constructor(o,a){const c=n(o),l={...lx,...a},h=e(c,l),u=s(c)?t():null;super(o,!1,h,u)}},ux=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=t(r);if(!Xe(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=i(o,l)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},dx={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},fx=(i,t,e,n,s,r)=>class extends i{constructor(a,c){const l=n(a),h=r({...dx,...c}),u=e(l,h),d=s(l)?t():null;super(a,!1,u,d)}},px=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=t(r);if(!Xe(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=i(o,l)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},mx=i=>(t,e,n)=>i(e,t,n),gx=i=>(t,e,n=0,s=0)=>{const r=t[n];if(r===void 0)throw i();return qo(e)?r.connect(e,0,s):r.connect(e,0)},_x=i=>(t,e)=>{const n=i(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),s=t.createBuffer(1,2,44100);return n.buffer=s,n.loop=!0,n.connect(e),n.start(),()=>{n.stop(),n.disconnect(e)}},vx={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},yx=(i,t,e,n,s,r,o)=>class extends i{constructor(c,l){const h=s(c),u={...vx,...l},d=n(h,u),m=r(h),g=m?e():null;super(c,!1,d,g),this._constantSourceNodeRenderer=g,this._nativeConstantSourceNode=d,this._offset=t(this,m,d.offset,Ke,dn),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=l;const h=this._nativeConstantSourceNode.onended;this._onended=h!==null&&h===l?c:h}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){$s(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),ni(this)&&Hr(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},xx=(i,t,e,n,s)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(l,h)=>{let u=e(l);const d=Xe(u,h);if(!d){const m={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,offset:u.offset.value};u=t(h,m),o!==null&&u.start(o),a!==null&&u.stop(a)}return r.set(h,u),d?await i(h,l.offset,u.offset):await n(h,l.offset,u.offset),await s(l,h,u),u};return{set start(l){o=l},set stop(l){a=l},render(l,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):c(l,h)}}},Mx=i=>t=>(i[0]=t,i[0]),Sx={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Tx=(i,t,e,n,s,r)=>class extends i{constructor(a,c){const l=n(a),h={...Sx,...c},u=e(l,h),m=s(l)?t():null;super(a,!1,u,m),this._isBufferNullified=!1,this._nativeConvolverNode=u,h.buffer!==null&&r(this,h.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},wx=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=t(r);if(!Xe(a,o)){const l={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=i(o,l)}return n.set(o,a),cr(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},Ex=(i,t)=>(e,n,s)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,n,s)}catch(r){throw r.name==="SyntaxError"?i():r}},bx=()=>new DOMException("","DataCloneError"),vu=i=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(n=>{const s=()=>{e.onmessage=null,t.close(),e.close(),n()};e.onmessage=()=>s();try{t.postMessage(i,[i])}catch{}finally{s()}})},Ax=(i,t,e,n,s,r,o,a,c,l,h)=>(u,d)=>{const m=o(u)?u:r(u);if(s.has(d)){const g=e();return Promise.reject(g)}try{s.add(d)}catch{}return t(c,()=>c(m))?m.decodeAudioData(d).then(g=>(vu(d).catch(()=>{}),t(a,()=>a(g))||h(g),i.add(g),g)):new Promise((g,_)=>{const p=async()=>{try{await vu(d)}catch{}},f=x=>{_(x),p()};try{m.decodeAudioData(d,x=>{typeof x.copyFromChannel!="function"&&(l(x),$c(x)),i.add(x),p().then(()=>g(x))},x=>{f(x===null?n():x)})}catch(x){f(x)}})},Cx=(i,t,e,n,s,r,o,a)=>(c,l)=>{const h=t.get(c);if(h===void 0)throw new Error("Missing the expected cycle count.");const u=r(c.context),d=a(u);if(h===l){if(t.delete(c),!d&&o(c)){const m=n(c),{outputs:g}=e(c);for(const _ of g)if(qr(_)){const p=n(_[0]);i(m,p,_[1],_[2])}else{const p=s(_[0]);m.connect(p,_[1])}}}else t.set(c,h-l)},Rx={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},Px=(i,t,e,n,s,r,o)=>class extends i{constructor(c,l){const h=s(c),u={...Rx,...l},d=n(h,u),m=r(h),g=m?e(u.maxDelayTime):null;super(c,!1,d,g),this._delayTime=t(this,m,d.delayTime),o(this,u.maxDelayTime)}get delayTime(){return this._delayTime}},Dx=(i,t,e,n,s)=>r=>{const o=new WeakMap,a=async(c,l)=>{let h=e(c);const u=Xe(h,l);if(!u){const d={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,delayTime:h.delayTime.value,maxDelayTime:r};h=t(l,d)}return o.set(l,h),u?await i(l,c.delayTime,h.delayTime):await n(l,c.delayTime,h.delayTime),await s(c,l,h),h};return{render(c,l){const h=o.get(l);return h!==void 0?Promise.resolve(h):a(c,l)}}},Ix=i=>(t,e,n,s)=>i(t[s],r=>r[0]===e&&r[1]===n),Nx=i=>(t,e)=>{i(t).delete(e)},Lx=i=>"delayTime"in i,Ox=(i,t,e)=>function n(s,r){const o=Go(r)?r:e(i,r);if(Lx(o))return[];if(s[0]===o)return[s];if(s.includes(o))return[];const{outputs:a}=t(o);return Array.from(a).map(c=>n([...s,o],c[0])).reduce((c,l)=>c.concat(l),[])},bo=(i,t,e)=>{const n=t[e];if(n===void 0)throw i();return n},Ux=i=>(t,e=void 0,n=void 0,s=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?bo(i,t,e).disconnect():qo(e)?n===void 0?t.forEach(r=>r.disconnect(e)):s===void 0?bo(i,t,n).disconnect(e,0):bo(i,t,n).disconnect(e,0,s):n===void 0?t.forEach(r=>r.disconnect(e)):bo(i,t,n).disconnect(e,0),Fx={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},kx=(i,t,e,n,s,r,o,a)=>class extends i{constructor(l,h){const u=r(l),d={...Fx,...h},m=n(u,d),g=o(u),_=g?e():null;super(l,!1,m,_),this._attack=t(this,g,m.attack),this._knee=t(this,g,m.knee),this._nativeDynamicsCompressorNode=m,this._ratio=t(this,g,m.ratio),this._release=t(this,g,m.release),this._threshold=t(this,g,m.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const h=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=h,s()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const h=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=h,s()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},Bx=(i,t,e,n,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=e(a);const h=Xe(l,c);if(!h){const u={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=t(c,u)}return r.set(c,l),h?(await i(c,a.attack,l.attack),await i(c,a.knee,l.knee),await i(c,a.ratio,l.ratio),await i(c,a.release,l.release),await i(c,a.threshold,l.threshold)):(await n(c,a.attack,l.attack),await n(c,a.knee,l.knee),await n(c,a.ratio,l.ratio),await n(c,a.release,l.release),await n(c,a.threshold,l.threshold)),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},zx=()=>new DOMException("","EncodingError"),Vx=i=>t=>new Promise((e,n)=>{if(i===null){n(new SyntaxError);return}const s=i.document.head;if(s===null)n(new SyntaxError);else{const r=i.document.createElement("script"),o=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(o),c=i.onerror,l=()=>{i.onerror=c,URL.revokeObjectURL(a)};i.onerror=(h,u,d,m,g)=>{if(u===a||u===i.location.href&&d===1&&m===1)return l(),n(g),!1;if(c!==null)return c(h,u,d,m,g)},r.onerror=()=>{l(),n(new SyntaxError)},r.onload=()=>{l(),e()},r.src=a,r.type="module",s.appendChild(r)}}),Gx=i=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,n,s){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=i(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(e,r,s)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,n,s){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(e,r===void 0?null:r,s)}},Hx=i=>(t,e,n)=>{Object.defineProperties(i,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return n()}finally{i!==null&&(delete i.currentFrame,delete i.currentTime)}},Wx=i=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw i()},qx={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},Xx=(i,t,e,n,s,r)=>class extends i{constructor(a,c){const l=s(a),h={...qx,...c},u=n(l,h),d=r(l),m=d?e():null;super(a,!1,u,m),this._gain=t(this,d,u.gain,Ke,dn)}get gain(){return this._gain}},Yx=(i,t,e,n,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=e(a);const h=Xe(l,c);if(!h){const u={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=t(c,u)}return r.set(c,l),h?await i(c,a.gain,l.gain):await n(c,a.gain,l.gain),await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},jx=(i,t)=>e=>t(i,e),$x=i=>t=>{const e=i(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},Zx=i=>t=>{var e;return(e=i.get(t))!==null&&e!==void 0?e:0},Kx=i=>t=>{const e=i(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},Jx=i=>t=>i.get(t),Ue=()=>new DOMException("","InvalidStateError"),Qx=i=>t=>{const e=i.get(t);if(e===void 0)throw Ue();return e},tM=(i,t)=>e=>{let n=i.get(e);if(n!==void 0)return n;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new t(1,1,44100),i.set(e,n),n},eM=i=>t=>{const e=i.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},ga=()=>new DOMException("","InvalidAccessError"),nM=i=>{i.getFrequencyResponse=(t=>(e,n,s)=>{if(e.length!==n.length||n.length!==s.length)throw ga();return t.call(i,e,n,s)})(i.getFrequencyResponse)},iM={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},sM=(i,t,e,n,s,r)=>class extends i{constructor(a,c){const l=n(a),h=s(l),u={...iM,...c},d=t(l,h?null:a.baseLatency,u),m=h?e(u.feedback,u.feedforward):null;super(a,!1,d,m),nM(d),this._nativeIIRFilterNode=d,r(this,1)}getFrequencyResponse(a,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,l)}},wd=(i,t,e,n,s,r,o,a,c,l,h)=>{const u=l.length;let d=a;for(let m=0;m<u;m+=1){let g=e[0]*l[m];for(let _=1;_<s;_+=1){const p=d-_&c-1;g+=e[_]*r[p],g-=i[_]*o[p]}for(let _=s;_<n;_+=1)g+=e[_]*r[d-_&c-1];for(let _=s;_<t;_+=1)g-=i[_]*o[d-_&c-1];r[d]=l[m],o[d]=g,d=d+1&c-1,h[m]=g}return d},rM=(i,t,e,n)=>{const s=e instanceof Float64Array?e:new Float64Array(e),r=n instanceof Float64Array?n:new Float64Array(n),o=s.length,a=r.length,c=Math.min(o,a);if(s[0]!==1){for(let g=0;g<o;g+=1)r[g]/=s[0];for(let g=1;g<a;g+=1)s[g]/=s[0]}const l=32,h=new Float32Array(l),u=new Float32Array(l),d=t.createBuffer(i.numberOfChannels,i.length,i.sampleRate),m=i.numberOfChannels;for(let g=0;g<m;g+=1){const _=i.getChannelData(g),p=d.getChannelData(g);h.fill(0),u.fill(0),wd(s,o,r,a,c,h,u,0,l,_,p)}return d},oM=(i,t,e,n,s)=>(r,o)=>{const a=new WeakMap;let c=null;const l=async(h,u)=>{let d=null,m=t(h);const g=Xe(m,u);if(u.createIIRFilter===void 0?d=i(u,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):g||(m=u.createIIRFilter(o,r)),a.set(u,d===null?m:d),d!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const p=new e(h.context.destination.channelCount,h.context.length,u.sampleRate);c=(async()=>{await n(h,p,p.destination);const f=await s(p);return rM(f,u,r,o)})()}const _=await c;return d.buffer=_,d.start(0),d}return await n(h,u,m),m};return{render(h,u){const d=a.get(u);return d!==void 0?Promise.resolve(d):l(h,u)}}},aM=(i,t,e,n,s,r)=>o=>(a,c)=>{const l=i.get(a);if(l===void 0){if(!o&&r(a)){const h=n(a),{outputs:u}=e(a);for(const d of u)if(qr(d)){const m=n(d[0]);t(h,m,d[1],d[2])}else{const m=s(d[0]);h.disconnect(m,d[1])}}i.set(a,c)}else i.set(a,l+c)},cM=(i,t)=>e=>{const n=i.get(e);return t(n)||t(e)},lM=(i,t)=>e=>i.has(e)||t(e),hM=(i,t)=>e=>i.has(e)||t(e),uM=(i,t)=>e=>{const n=i.get(e);return t(n)||t(e)},dM=i=>t=>i!==null&&t instanceof i,fM=i=>t=>i!==null&&typeof i.AudioNode=="function"&&t instanceof i.AudioNode,pM=i=>t=>i!==null&&typeof i.AudioParam=="function"&&t instanceof i.AudioParam,mM=(i,t)=>e=>i(e)||t(e),gM=i=>t=>i!==null&&t instanceof i,_M=i=>i!==null&&i.isSecureContext,vM=(i,t,e,n)=>class extends i{constructor(r,o){const a=e(r),c=t(a,o);if(n(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},yM={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},xM=(i,t,e,n)=>class extends i{constructor(r,o){const a=e(r);if(n(a))throw new TypeError;const c={...yM,...o},l=t(a,c);super(r,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},MM=(i,t,e,n)=>class extends i{constructor(r,o){const a=e(r),c=t(a,o);if(n(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},SM=(i,t,e)=>class extends i{constructor(s,r){const o=e(s),a=t(o,r);super(s,!0,a,null)}},TM=(i,t,e,n,s,r)=>class extends e{constructor(a,c){super(a),this._nativeContext=a,pa.set(this,a),n(a)&&s.set(a,new Set),this._destination=new i(this,c),this._listener=t(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?a:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Cr=i=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=i.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},wM=(i,t)=>(e,n,s)=>{const r=new Set;return e.connect=(o=>(a,c=0,l=0)=>{const h=r.size===0;if(t(a))return o.call(e,a,c,l),i(r,[a,c,l],u=>u[0]===a&&u[1]===c&&u[2]===l,!0),h&&n(),a;o.call(e,a,c),i(r,[a,c],u=>u[0]===a&&u[1]===c,!0),h&&n()})(e.connect),e.disconnect=(o=>(a,c,l)=>{const h=r.size>0;if(a===void 0)o.apply(e),r.clear();else if(typeof a=="number"){o.call(e,a);for(const d of r)d[1]===a&&r.delete(d)}else{t(a)?o.call(e,a,c,l):o.call(e,a,c);for(const d of r)d[0]===a&&(c===void 0||d[1]===c)&&(l===void 0||d[2]===l)&&r.delete(d)}const u=r.size===0;h&&u&&s()})(e.disconnect),e},me=(i,t,e)=>{const n=t[e];n!==void 0&&n!==i[e]&&(i[e]=n)},Ne=(i,t)=>{me(i,t,"channelCount"),me(i,t,"channelCountMode"),me(i,t,"channelInterpretation")},yu=i=>typeof i.getFloatTimeDomainData=="function",EM=i=>{i.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);i.getByteTimeDomainData(e);const n=Math.max(e.length,i.fftSize);for(let s=0;s<n;s+=1)t[s]=(e[s]-128)*.0078125;return t}},bM=(i,t)=>(e,n)=>{const s=e.createAnalyser();if(Ne(s,n),!(n.maxDecibels>n.minDecibels))throw t();return me(s,n,"fftSize"),me(s,n,"maxDecibels"),me(s,n,"minDecibels"),me(s,n,"smoothingTimeConstant"),i(yu,()=>yu(s))||EM(s),s},AM=i=>i===null?null:i.hasOwnProperty("AudioBuffer")?i.AudioBuffer:null,ye=(i,t,e)=>{const n=t[e];n!==void 0&&n!==i[e].value&&(i[e].value=n)},CM=i=>{i.start=(t=>{let e=!1;return(n=0,s=0,r)=>{if(e)throw Ue();t.call(i,n,s,r),e=!0}})(i.start)},Jc=i=>{i.start=(t=>(e=0,n=0,s)=>{if(typeof s=="number"&&s<0||n<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(i,e,n,s)})(i.start)},Qc=i=>{i.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(i,e)})(i.stop)},RM=(i,t,e,n,s,r,o,a,c,l,h)=>(u,d)=>{const m=u.createBufferSource();return Ne(m,d),ye(m,d,"playbackRate"),me(m,d,"buffer"),me(m,d,"loop"),me(m,d,"loopEnd"),me(m,d,"loopStart"),t(e,()=>e(u))||CM(m),t(n,()=>n(u))||c(m),t(s,()=>s(u))||l(m,u),t(r,()=>r(u))||Jc(m),t(o,()=>o(u))||h(m,u),t(a,()=>a(u))||Qc(m),i(u,m),m},PM=i=>i===null?null:i.hasOwnProperty("AudioContext")?i.AudioContext:i.hasOwnProperty("webkitAudioContext")?i.webkitAudioContext:null,DM=(i,t)=>(e,n,s)=>{const r=e.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}s&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const o=i(e,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(l){if(c>r.maxChannelCount)throw l}}),t(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),t(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},IM=i=>i===null?null:i.hasOwnProperty("AudioWorkletNode")?i.AudioWorkletNode:null,NM=i=>{const{port1:t}=new MessageChannel;try{t.postMessage(i)}finally{t.close()}},LM=(i,t,e,n,s)=>(r,o,a,c,l,h)=>{if(a!==null)try{const u=new a(r,c,h),d=new Map;let m=null;if(Object.defineProperties(u,{channelCount:{get:()=>h.channelCount,set:()=>{throw i()}},channelCountMode:{get:()=>"explicit",set:()=>{throw i()}},onprocessorerror:{get:()=>m,set:g=>{typeof m=="function"&&u.removeEventListener("processorerror",m),m=typeof g=="function"?g:null,typeof m=="function"&&u.addEventListener("processorerror",m)}}}),u.addEventListener=(g=>(..._)=>{if(_[0]==="processorerror"){const p=typeof _[1]=="function"?_[1]:typeof _[1]=="object"&&_[1]!==null&&typeof _[1].handleEvent=="function"?_[1].handleEvent:null;if(p!==null){const f=d.get(_[1]);f!==void 0?_[1]=f:(_[1]=x=>{x.type==="error"?(Object.defineProperties(x,{type:{value:"processorerror"}}),p(x)):p(new ErrorEvent(_[0],{...x}))},d.set(p,_[1]))}}return g.call(u,"error",_[1],_[2]),g.call(u,..._)})(u.addEventListener),u.removeEventListener=(g=>(..._)=>{if(_[0]==="processorerror"){const p=d.get(_[1]);p!==void 0&&(d.delete(_[1]),_[1]=p)}return g.call(u,"error",_[1],_[2]),g.call(u,_[0],_[1],_[2])})(u.removeEventListener),h.numberOfOutputs!==0){const g=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return u.connect(g).connect(r.destination),s(u,()=>g.disconnect(),()=>g.connect(r.destination))}return u}catch(u){throw u.code===11?n():u}if(l===void 0)throw n();return NM(h),t(r,o,l,h)},Ed=(i,t)=>i===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(i*t))))),OM=i=>new Promise((t,e)=>{const{port1:n,port2:s}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),s.close(),t(r)},n.onmessageerror=({data:r})=>{n.close(),s.close(),e(r)},s.postMessage(i)}),UM=async(i,t)=>{const e=await OM(t);return new i(e)},FM=(i,t,e,n)=>{let s=Ac.get(i);s===void 0&&(s=new WeakMap,Ac.set(i,s));const r=UM(e,n);return s.set(t,r),r},kM=(i,t,e,n,s,r,o,a,c,l,h,u,d)=>(m,g,_,p)=>{if(p.numberOfInputs===0&&p.numberOfOutputs===0)throw c();const f=Array.isArray(p.outputChannelCount)?p.outputChannelCount:Array.from(p.outputChannelCount);if(f.some(Q=>Q<1))throw c();if(f.length!==p.numberOfOutputs)throw t();if(p.channelCountMode!=="explicit")throw c();const x=p.channelCount*p.numberOfInputs,y=f.reduce((Q,nt)=>Q+nt,0),S=_.parameterDescriptors===void 0?0:_.parameterDescriptors.length;if(x+S>6||y>6)throw c();const M=new MessageChannel,T=[],w=[];for(let Q=0;Q<p.numberOfInputs;Q+=1)T.push(o(m,{channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,gain:1})),w.push(s(m,{channelCount:p.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:p.channelCount}));const A=[];if(_.parameterDescriptors!==void 0)for(const{defaultValue:Q,maxValue:nt,minValue:Tt,name:_t}of _.parameterDescriptors){const pt=r(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:p.parameterData[_t]!==void 0?p.parameterData[_t]:Q===void 0?0:Q});Object.defineProperties(pt.offset,{defaultValue:{get:()=>Q===void 0?0:Q},maxValue:{get:()=>nt===void 0?Ke:nt},minValue:{get:()=>Tt===void 0?dn:Tt}}),A.push(pt)}const N=n(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+S)}),v=Ed(g,m.sampleRate),b=a(m,v,x+S,Math.max(1,y)),I=s(m,{channelCount:Math.max(1,y),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,y)}),F=[];for(let Q=0;Q<p.numberOfOutputs;Q+=1)F.push(n(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:f[Q]}));for(let Q=0;Q<p.numberOfInputs;Q+=1){T[Q].connect(w[Q]);for(let nt=0;nt<p.channelCount;nt+=1)w[Q].connect(N,nt,Q*p.channelCount+nt)}const D=new Sd(_.parameterDescriptors===void 0?[]:_.parameterDescriptors.map(({name:Q},nt)=>{const Tt=A[nt];return Tt.connect(N,0,x+nt),Tt.start(0),[Q,Tt.offset]}));N.connect(b);let U=p.channelInterpretation,L=null;const V=p.numberOfOutputs===0?[b]:F,z={get bufferSize(){return v},get channelCount(){return p.channelCount},set channelCount(Q){throw e()},get channelCountMode(){return p.channelCountMode},set channelCountMode(Q){throw e()},get channelInterpretation(){return U},set channelInterpretation(Q){for(const nt of T)nt.channelInterpretation=Q;U=Q},get context(){return b.context},get inputs(){return T},get numberOfInputs(){return p.numberOfInputs},get numberOfOutputs(){return p.numberOfOutputs},get onprocessorerror(){return L},set onprocessorerror(Q){typeof L=="function"&&z.removeEventListener("processorerror",L),L=typeof Q=="function"?Q:null,typeof L=="function"&&z.addEventListener("processorerror",L)},get parameters(){return D},get port(){return M.port2},addEventListener(...Q){return b.addEventListener(Q[0],Q[1],Q[2])},connect:i.bind(null,V),disconnect:l.bind(null,V),dispatchEvent(...Q){return b.dispatchEvent(Q[0])},removeEventListener(...Q){return b.removeEventListener(Q[0],Q[1],Q[2])}},G=new Map;M.port1.addEventListener=(Q=>(...nt)=>{if(nt[0]==="message"){const Tt=typeof nt[1]=="function"?nt[1]:typeof nt[1]=="object"&&nt[1]!==null&&typeof nt[1].handleEvent=="function"?nt[1].handleEvent:null;if(Tt!==null){const _t=G.get(nt[1]);_t!==void 0?nt[1]=_t:(nt[1]=pt=>{h(m.currentTime,m.sampleRate,()=>Tt(pt))},G.set(Tt,nt[1]))}}return Q.call(M.port1,nt[0],nt[1],nt[2])})(M.port1.addEventListener),M.port1.removeEventListener=(Q=>(...nt)=>{if(nt[0]==="message"){const Tt=G.get(nt[1]);Tt!==void 0&&(G.delete(nt[1]),nt[1]=Tt)}return Q.call(M.port1,nt[0],nt[1],nt[2])})(M.port1.removeEventListener);let X=null;Object.defineProperty(M.port1,"onmessage",{get:()=>X,set:Q=>{typeof X=="function"&&M.port1.removeEventListener("message",X),X=typeof Q=="function"?Q:null,typeof X=="function"&&(M.port1.addEventListener("message",X),M.port1.start())}}),_.prototype.port=M.port1;let K=null;FM(m,z,_,p).then(Q=>K=Q);const St=Yo(p.numberOfInputs,p.channelCount),W=Yo(p.numberOfOutputs,f),Z=_.parameterDescriptors===void 0?[]:_.parameterDescriptors.reduce((Q,{name:nt})=>({...Q,[nt]:new Float32Array(128)}),{});let ot=!0;const vt=()=>{p.numberOfOutputs>0&&b.disconnect(I);for(let Q=0,nt=0;Q<p.numberOfOutputs;Q+=1){const Tt=F[Q];for(let _t=0;_t<f[Q];_t+=1)I.disconnect(Tt,nt+_t,_t);nt+=f[Q]}},tt=new Map;b.onaudioprocess=({inputBuffer:Q,outputBuffer:nt})=>{if(K!==null){const Tt=u(z);for(let _t=0;_t<v;_t+=128){for(let pt=0;pt<p.numberOfInputs;pt+=1)for(let It=0;It<p.channelCount;It+=1)Xo(Q,St[pt],It,It,_t);_.parameterDescriptors!==void 0&&_.parameterDescriptors.forEach(({name:pt},It)=>{Xo(Q,Z,pt,x+It,_t)});for(let pt=0;pt<p.numberOfInputs;pt+=1)for(let It=0;It<f[pt];It+=1)W[pt][It].byteLength===0&&(W[pt][It]=new Float32Array(128));try{const pt=St.map((P,E)=>{if(Tt[E].size>0)return tt.set(E,v/128),P;const J=tt.get(E);return J===void 0?[]:(P.every(st=>st.every(et=>et===0))&&(J===1?tt.delete(E):tt.set(E,J-1)),P)});ot=h(m.currentTime+_t/m.sampleRate,m.sampleRate,()=>K.process(pt,W,Z));for(let P=0,E=0;P<p.numberOfOutputs;P+=1){for(let $=0;$<f[P];$+=1)Td(nt,W[P],$,E+$,_t);E+=f[P]}}catch(pt){ot=!1,z.dispatchEvent(new ErrorEvent("processorerror",{colno:pt.colno,filename:pt.filename,lineno:pt.lineno,message:pt.message}))}if(!ot){for(let pt=0;pt<p.numberOfInputs;pt+=1){T[pt].disconnect(w[pt]);for(let It=0;It<p.channelCount;It+=1)w[_t].disconnect(N,It,pt*p.channelCount+It)}if(_.parameterDescriptors!==void 0){const pt=_.parameterDescriptors.length;for(let It=0;It<pt;It+=1){const P=A[It];P.disconnect(N,0,x+It),P.stop()}}N.disconnect(b),b.onaudioprocess=null,mt?vt():k();break}}}};let mt=!1;const Xt=o(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),At=()=>b.connect(Xt).connect(m.destination),k=()=>{b.disconnect(Xt),Xt.disconnect()},Re=()=>{if(ot){k(),p.numberOfOutputs>0&&b.connect(I);for(let Q=0,nt=0;Q<p.numberOfOutputs;Q+=1){const Tt=F[Q];for(let _t=0;_t<f[Q];_t+=1)I.connect(Tt,nt+_t,_t);nt+=f[Q]}}mt=!0},wt=()=>{ot&&(At(),vt()),mt=!1};return At(),d(z,Re,wt)},bd=(i,t)=>{const e=i.createBiquadFilter();return Ne(e,t),ye(e,t,"Q"),ye(e,t,"detune"),ye(e,t,"frequency"),ye(e,t,"gain"),me(e,t,"type"),e},BM=(i,t)=>(e,n)=>{const s=e.createChannelMerger(n.numberOfInputs);return i!==null&&i.name==="webkitAudioContext"&&t(e,s),Ne(s,n),s},zM=i=>{const t=i.numberOfOutputs;Object.defineProperty(i,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw Ue()}}),Object.defineProperty(i,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw Ue()}}),Object.defineProperty(i,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw Ue()}})},Xr=(i,t)=>{const e=i.createChannelSplitter(t.numberOfOutputs);return Ne(e,t),zM(e),e},VM=(i,t,e,n,s)=>(r,o)=>{if(r.createConstantSource===void 0)return e(r,o);const a=r.createConstantSource();return Ne(a,o),ye(a,o,"offset"),t(n,()=>n(r))||Jc(a),t(s,()=>s(r))||Qc(a),i(r,a),a},lr=(i,t)=>(i.connect=t.connect.bind(t),i.disconnect=t.disconnect.bind(t),i),GM=(i,t,e,n)=>(s,{offset:r,...o})=>{const a=s.createBuffer(1,2,44100),c=t(s,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=e(s,{...o,gain:r}),h=a.getChannelData(0);h[0]=1,h[1]=1,c.buffer=a,c.loop=!0;const u={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(g){l.channelCount=g},get channelCountMode(){return l.channelCountMode},set channelCountMode(g){l.channelCountMode=g},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(g){l.channelInterpretation=g},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(g){c.onended=g},addEventListener(...g){return c.addEventListener(g[0],g[1],g[2])},dispatchEvent(...g){return c.dispatchEvent(g[0])},removeEventListener(...g){return c.removeEventListener(g[0],g[1],g[2])},start(g=0){c.start.call(c,g)},stop(g=0){c.stop.call(c,g)}},d=()=>c.connect(l),m=()=>c.disconnect(l);return i(s,c),n(lr(u,l),d,m)},HM=(i,t)=>(e,n)=>{const s=e.createConvolver();if(Ne(s,n),n.disableNormalization===s.normalize&&(s.normalize=!n.disableNormalization),me(s,n,"buffer"),n.channelCount>2||(t(s,"channelCount",r=>()=>r.call(s),r=>o=>{if(o>2)throw i();return r.call(s,o)}),n.channelCountMode==="max"))throw i();return t(s,"channelCountMode",r=>()=>r.call(s),r=>o=>{if(o==="max")throw i();return r.call(s,o)}),s},Ad=(i,t)=>{const e=i.createDelay(t.maxDelayTime);return Ne(e,t),ye(e,t,"delayTime"),e},WM=i=>(t,e)=>{const n=t.createDynamicsCompressor();if(Ne(n,e),e.channelCount>2||e.channelCountMode==="max")throw i();return ye(n,e,"attack"),ye(n,e,"knee"),ye(n,e,"ratio"),ye(n,e,"release"),ye(n,e,"threshold"),n},on=(i,t)=>{const e=i.createGain();return Ne(e,t),ye(e,t,"gain"),e},qM=i=>(t,e,n)=>{if(t.createIIRFilter===void 0)return i(t,e,n);const s=t.createIIRFilter(n.feedforward,n.feedback);return Ne(s,n),s};function XM(i,t){const e=t[0]*t[0]+t[1]*t[1];return[(i[0]*t[0]+i[1]*t[1])/e,(i[1]*t[0]-i[0]*t[1])/e]}function YM(i,t){return[i[0]*t[0]-i[1]*t[1],i[0]*t[1]+i[1]*t[0]]}function xu(i,t){let e=[0,0];for(let n=i.length-1;n>=0;n-=1)e=YM(e,t),e[0]+=i[n];return e}const jM=(i,t,e,n)=>(s,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:l,feedforward:h})=>{const u=Ed(r,s.sampleRate),d=l instanceof Float64Array?l:new Float64Array(l),m=h instanceof Float64Array?h:new Float64Array(h),g=d.length,_=m.length,p=Math.min(g,_);if(g===0||g>20)throw n();if(d[0]===0)throw t();if(_===0||_>20)throw n();if(m[0]===0)throw t();if(d[0]!==1){for(let A=0;A<_;A+=1)m[A]/=d[0];for(let A=1;A<g;A+=1)d[A]/=d[0]}const f=e(s,u,o,o);f.channelCount=o,f.channelCountMode=a,f.channelInterpretation=c;const x=32,y=[],S=[],M=[];for(let A=0;A<o;A+=1){y.push(0);const N=new Float32Array(x),v=new Float32Array(x);N.fill(0),v.fill(0),S.push(N),M.push(v)}f.onaudioprocess=A=>{const N=A.inputBuffer,v=A.outputBuffer,b=N.numberOfChannels;for(let I=0;I<b;I+=1){const F=N.getChannelData(I),D=v.getChannelData(I);y[I]=wd(d,g,m,_,p,S[I],M[I],y[I],x,F,D)}};const T=s.sampleRate/2;return lr({get bufferSize(){return u},get channelCount(){return f.channelCount},set channelCount(A){f.channelCount=A},get channelCountMode(){return f.channelCountMode},set channelCountMode(A){f.channelCountMode=A},get channelInterpretation(){return f.channelInterpretation},set channelInterpretation(A){f.channelInterpretation=A},get context(){return f.context},get inputs(){return[f]},get numberOfInputs(){return f.numberOfInputs},get numberOfOutputs(){return f.numberOfOutputs},addEventListener(...A){return f.addEventListener(A[0],A[1],A[2])},dispatchEvent(...A){return f.dispatchEvent(A[0])},getFrequencyResponse(A,N,v){if(A.length!==N.length||N.length!==v.length)throw i();const b=A.length;for(let I=0;I<b;I+=1){const F=-Math.PI*(A[I]/T),D=[Math.cos(F),Math.sin(F)],U=xu(m,D),L=xu(d,D),V=XM(U,L);N[I]=Math.sqrt(V[0]*V[0]+V[1]*V[1]),v[I]=Math.atan2(V[1],V[0])}},removeEventListener(...A){return f.removeEventListener(A[0],A[1],A[2])}},f)},$M=(i,t)=>i.createMediaElementSource(t.mediaElement),ZM=(i,t)=>{const e=i.createMediaStreamDestination();return Ne(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},KM=(i,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const n=e.slice(0,1),s=i.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(s,"mediaStream",{value:t}),s},JM=(i,t)=>(e,{mediaStreamTrack:n})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(n);const s=new MediaStream([n]),r=e.createMediaStreamSource(s);if(n.kind!=="audio")throw i();if(t(e))throw new TypeError;return r},QM=i=>i===null?null:i.hasOwnProperty("OfflineAudioContext")?i.OfflineAudioContext:i.hasOwnProperty("webkitOfflineAudioContext")?i.webkitOfflineAudioContext:null,tS=(i,t,e,n,s,r)=>(o,a)=>{const c=o.createOscillator();return Ne(c,a),ye(c,a,"detune"),ye(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):me(c,a,"type"),t(e,()=>e(o))||Jc(c),t(n,()=>n(o))||r(c,o),t(s,()=>s(o))||Qc(c),i(o,c),c},eS=i=>(t,e)=>{const n=t.createPanner();return n.orientationX===void 0?i(t,e):(Ne(n,e),ye(n,e,"orientationX"),ye(n,e,"orientationY"),ye(n,e,"orientationZ"),ye(n,e,"positionX"),ye(n,e,"positionY"),ye(n,e,"positionZ"),me(n,e,"coneInnerAngle"),me(n,e,"coneOuterAngle"),me(n,e,"coneOuterGain"),me(n,e,"distanceModel"),me(n,e,"maxDistance"),me(n,e,"panningModel"),me(n,e,"refDistance"),me(n,e,"rolloffFactor"),n)},nS=(i,t,e,n,s,r,o,a,c,l)=>(h,{coneInnerAngle:u,coneOuterAngle:d,coneOuterGain:m,distanceModel:g,maxDistance:_,orientationX:p,orientationY:f,orientationZ:x,panningModel:y,positionX:S,positionY:M,positionZ:T,refDistance:w,rolloffFactor:A,...N})=>{const v=h.createPanner();if(N.channelCount>2||N.channelCountMode==="max")throw o();Ne(v,N);const b={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},I=e(h,{...b,channelInterpretation:"speakers",numberOfInputs:6}),F=n(h,{...N,gain:1}),D=n(h,{...b,gain:1}),U=n(h,{...b,gain:0}),L=n(h,{...b,gain:0}),V=n(h,{...b,gain:0}),z=n(h,{...b,gain:0}),G=n(h,{...b,gain:0}),X=s(h,256,6,1),K=r(h,{...b,curve:new Float32Array([1,1]),oversample:"none"});let rt=[p,f,x],St=[S,M,T];const W=new Float32Array(1);X.onaudioprocess=({inputBuffer:tt})=>{const mt=[c(tt,W,0),c(tt,W,1),c(tt,W,2)];mt.some((At,k)=>At!==rt[k])&&(v.setOrientation(...mt),rt=mt);const Xt=[c(tt,W,3),c(tt,W,4),c(tt,W,5)];Xt.some((At,k)=>At!==St[k])&&(v.setPosition(...Xt),St=Xt)},Object.defineProperty(U.gain,"defaultValue",{get:()=>0}),Object.defineProperty(L.gain,"defaultValue",{get:()=>0}),Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(z.gain,"defaultValue",{get:()=>0}),Object.defineProperty(G.gain,"defaultValue",{get:()=>0});const Z={get bufferSize(){},get channelCount(){return v.channelCount},set channelCount(tt){if(tt>2)throw o();F.channelCount=tt,v.channelCount=tt},get channelCountMode(){return v.channelCountMode},set channelCountMode(tt){if(tt==="max")throw o();F.channelCountMode=tt,v.channelCountMode=tt},get channelInterpretation(){return v.channelInterpretation},set channelInterpretation(tt){F.channelInterpretation=tt,v.channelInterpretation=tt},get coneInnerAngle(){return v.coneInnerAngle},set coneInnerAngle(tt){v.coneInnerAngle=tt},get coneOuterAngle(){return v.coneOuterAngle},set coneOuterAngle(tt){v.coneOuterAngle=tt},get coneOuterGain(){return v.coneOuterGain},set coneOuterGain(tt){if(tt<0||tt>1)throw t();v.coneOuterGain=tt},get context(){return v.context},get distanceModel(){return v.distanceModel},set distanceModel(tt){v.distanceModel=tt},get inputs(){return[F]},get maxDistance(){return v.maxDistance},set maxDistance(tt){if(tt<0)throw new RangeError;v.maxDistance=tt},get numberOfInputs(){return v.numberOfInputs},get numberOfOutputs(){return v.numberOfOutputs},get orientationX(){return D.gain},get orientationY(){return U.gain},get orientationZ(){return L.gain},get panningModel(){return v.panningModel},set panningModel(tt){v.panningModel=tt},get positionX(){return V.gain},get positionY(){return z.gain},get positionZ(){return G.gain},get refDistance(){return v.refDistance},set refDistance(tt){if(tt<0)throw new RangeError;v.refDistance=tt},get rolloffFactor(){return v.rolloffFactor},set rolloffFactor(tt){if(tt<0)throw new RangeError;v.rolloffFactor=tt},addEventListener(...tt){return F.addEventListener(tt[0],tt[1],tt[2])},dispatchEvent(...tt){return F.dispatchEvent(tt[0])},removeEventListener(...tt){return F.removeEventListener(tt[0],tt[1],tt[2])}};u!==Z.coneInnerAngle&&(Z.coneInnerAngle=u),d!==Z.coneOuterAngle&&(Z.coneOuterAngle=d),m!==Z.coneOuterGain&&(Z.coneOuterGain=m),g!==Z.distanceModel&&(Z.distanceModel=g),_!==Z.maxDistance&&(Z.maxDistance=_),p!==Z.orientationX.value&&(Z.orientationX.value=p),f!==Z.orientationY.value&&(Z.orientationY.value=f),x!==Z.orientationZ.value&&(Z.orientationZ.value=x),y!==Z.panningModel&&(Z.panningModel=y),S!==Z.positionX.value&&(Z.positionX.value=S),M!==Z.positionY.value&&(Z.positionY.value=M),T!==Z.positionZ.value&&(Z.positionZ.value=T),w!==Z.refDistance&&(Z.refDistance=w),A!==Z.rolloffFactor&&(Z.rolloffFactor=A),(rt[0]!==1||rt[1]!==0||rt[2]!==0)&&v.setOrientation(...rt),(St[0]!==0||St[1]!==0||St[2]!==0)&&v.setPosition(...St);const ot=()=>{F.connect(v),i(F,K,0,0),K.connect(D).connect(I,0,0),K.connect(U).connect(I,0,1),K.connect(L).connect(I,0,2),K.connect(V).connect(I,0,3),K.connect(z).connect(I,0,4),K.connect(G).connect(I,0,5),I.connect(X).connect(h.destination)},vt=()=>{F.disconnect(v),a(F,K,0,0),K.disconnect(D),D.disconnect(I),K.disconnect(U),U.disconnect(I),K.disconnect(L),L.disconnect(I),K.disconnect(V),V.disconnect(I),K.disconnect(z),z.disconnect(I),K.disconnect(G),G.disconnect(I),I.disconnect(X),X.disconnect(h.destination)};return l(lr(Z,v),ot,vt)},iS=i=>(t,{disableNormalization:e,imag:n,real:s})=>{const r=n instanceof Float32Array?n:new Float32Array(n),o=s instanceof Float32Array?s:new Float32Array(s),a=t.createPeriodicWave(o,r,{disableNormalization:e});if(Array.from(n).length<2)throw i();return a},Yr=(i,t,e,n)=>i.createScriptProcessor(t,e,n),sS=(i,t)=>(e,n)=>{const s=n.channelCountMode;if(s==="clamped-max")throw t();if(e.createStereoPanner===void 0)return i(e,n);const r=e.createStereoPanner();return Ne(r,n),ye(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>s,set:o=>{if(o!==s)throw t()}}),r},rS=(i,t,e,n,s,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},h={...l,oversample:"none"},u=(g,_,p,f)=>{const x=new Float32Array(16385),y=new Float32Array(16385);for(let N=0;N<16385;N+=1){const v=N/16384*c;x[N]=Math.cos(v),y[N]=Math.sin(v)}const S=e(g,{...l,gain:0}),M=n(g,{...h,curve:x}),T=n(g,{...h,curve:a}),w=e(g,{...l,gain:0}),A=n(g,{...h,curve:y});return{connectGraph(){_.connect(S),_.connect(T.inputs===void 0?T:T.inputs[0]),_.connect(w),T.connect(p),p.connect(M.inputs===void 0?M:M.inputs[0]),p.connect(A.inputs===void 0?A:A.inputs[0]),M.connect(S.gain),A.connect(w.gain),S.connect(f,0,0),w.connect(f,0,1)},disconnectGraph(){_.disconnect(S),_.disconnect(T.inputs===void 0?T:T.inputs[0]),_.disconnect(w),T.disconnect(p),p.disconnect(M.inputs===void 0?M:M.inputs[0]),p.disconnect(A.inputs===void 0?A:A.inputs[0]),M.disconnect(S.gain),A.disconnect(w.gain),S.disconnect(f,0,0),w.disconnect(f,0,1)}}},d=(g,_,p,f)=>{const x=new Float32Array(16385),y=new Float32Array(16385),S=new Float32Array(16385),M=new Float32Array(16385),T=Math.floor(16385/2);for(let V=0;V<16385;V+=1)if(V>T){const z=(V-T)/(16384-T)*c;x[V]=Math.cos(z),y[V]=Math.sin(z),S[V]=0,M[V]=1}else{const z=V/(16384-T)*c;x[V]=1,y[V]=0,S[V]=Math.cos(z),M[V]=Math.sin(z)}const w=t(g,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),A=e(g,{...l,gain:0}),N=n(g,{...h,curve:x}),v=e(g,{...l,gain:0}),b=n(g,{...h,curve:y}),I=n(g,{...h,curve:a}),F=e(g,{...l,gain:0}),D=n(g,{...h,curve:S}),U=e(g,{...l,gain:0}),L=n(g,{...h,curve:M});return{connectGraph(){_.connect(w),_.connect(I.inputs===void 0?I:I.inputs[0]),w.connect(A,0),w.connect(v,0),w.connect(F,1),w.connect(U,1),I.connect(p),p.connect(N.inputs===void 0?N:N.inputs[0]),p.connect(b.inputs===void 0?b:b.inputs[0]),p.connect(D.inputs===void 0?D:D.inputs[0]),p.connect(L.inputs===void 0?L:L.inputs[0]),N.connect(A.gain),b.connect(v.gain),D.connect(F.gain),L.connect(U.gain),A.connect(f,0,0),F.connect(f,0,0),v.connect(f,0,1),U.connect(f,0,1)},disconnectGraph(){_.disconnect(w),_.disconnect(I.inputs===void 0?I:I.inputs[0]),w.disconnect(A,0),w.disconnect(v,0),w.disconnect(F,1),w.disconnect(U,1),I.disconnect(p),p.disconnect(N.inputs===void 0?N:N.inputs[0]),p.disconnect(b.inputs===void 0?b:b.inputs[0]),p.disconnect(D.inputs===void 0?D:D.inputs[0]),p.disconnect(L.inputs===void 0?L:L.inputs[0]),N.disconnect(A.gain),b.disconnect(v.gain),D.disconnect(F.gain),L.disconnect(U.gain),A.disconnect(f,0,0),F.disconnect(f,0,0),v.disconnect(f,0,1),U.disconnect(f,0,1)}}},m=(g,_,p,f,x)=>{if(_===1)return u(g,p,f,x);if(_===2)return d(g,p,f,x);throw s()};return(g,{channelCount:_,channelCountMode:p,pan:f,...x})=>{if(p==="max")throw s();const y=i(g,{...x,channelCount:1,channelCountMode:p,numberOfInputs:2}),S=e(g,{...x,channelCount:_,channelCountMode:p,gain:1}),M=e(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:f});let{connectGraph:T,disconnectGraph:w}=m(g,_,S,M,y);Object.defineProperty(M.gain,"defaultValue",{get:()=>0}),Object.defineProperty(M.gain,"maxValue",{get:()=>1}),Object.defineProperty(M.gain,"minValue",{get:()=>-1});const A={get bufferSize(){},get channelCount(){return S.channelCount},set channelCount(I){S.channelCount!==I&&(N&&w(),{connectGraph:T,disconnectGraph:w}=m(g,I,S,M,y),N&&T()),S.channelCount=I},get channelCountMode(){return S.channelCountMode},set channelCountMode(I){if(I==="clamped-max"||I==="max")throw s();S.channelCountMode=I},get channelInterpretation(){return S.channelInterpretation},set channelInterpretation(I){S.channelInterpretation=I},get context(){return S.context},get inputs(){return[S]},get numberOfInputs(){return S.numberOfInputs},get numberOfOutputs(){return S.numberOfOutputs},get pan(){return M.gain},addEventListener(...I){return S.addEventListener(I[0],I[1],I[2])},dispatchEvent(...I){return S.dispatchEvent(I[0])},removeEventListener(...I){return S.removeEventListener(I[0],I[1],I[2])}};let N=!1;const v=()=>{T(),N=!0},b=()=>{w(),N=!1};return r(lr(A,y),v,b)}},oS=(i,t,e,n,s,r,o)=>(a,c)=>{const l=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return e(a,c);Ne(l,c);const h=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(h!==null&&h.length<2)throw t();me(l,{curve:h},"curve"),me(l,c,"oversample");let u=null,d=!1;return o(l,"curve",_=>()=>_.call(l),_=>p=>(_.call(l,p),d&&(n(p)&&u===null?u=i(a,l):!n(p)&&u!==null&&(u(),u=null)),p)),s(l,()=>{d=!0,n(l.curve)&&(u=i(a,l))},()=>{d=!1,u!==null&&(u(),u=null)})},aS=(i,t,e,n,s)=>(r,{curve:o,oversample:a,...c})=>{const l=r.createWaveShaper(),h=r.createWaveShaper();Ne(l,c),Ne(h,c);const u=e(r,{...c,gain:1}),d=e(r,{...c,gain:-1}),m=e(r,{...c,gain:1}),g=e(r,{...c,gain:-1});let _=null,p=!1,f=null;const x={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(M){u.channelCount=M,d.channelCount=M,l.channelCount=M,m.channelCount=M,h.channelCount=M,g.channelCount=M},get channelCountMode(){return l.channelCountMode},set channelCountMode(M){u.channelCountMode=M,d.channelCountMode=M,l.channelCountMode=M,m.channelCountMode=M,h.channelCountMode=M,g.channelCountMode=M},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(M){u.channelInterpretation=M,d.channelInterpretation=M,l.channelInterpretation=M,m.channelInterpretation=M,h.channelInterpretation=M,g.channelInterpretation=M},get context(){return l.context},get curve(){return f},set curve(M){if(M!==null&&M.length<2)throw t();if(M===null)l.curve=M,h.curve=M;else{const T=M.length,w=new Float32Array(T+2-T%2),A=new Float32Array(T+2-T%2);w[0]=M[0],A[0]=-M[T-1];const N=Math.ceil((T+1)/2),v=(T+1)/2-1;for(let b=1;b<N;b+=1){const I=b/N*v,F=Math.floor(I),D=Math.ceil(I);w[b]=F===D?M[F]:(1-(I-F))*M[F]+(1-(D-I))*M[D],A[b]=F===D?-M[T-1-F]:-((1-(I-F))*M[T-1-F])-(1-(D-I))*M[T-1-D]}w[N]=T%2===1?M[N-1]:(M[N-2]+M[N-1])/2,l.curve=w,h.curve=A}f=M,p&&(n(f)&&_===null?_=i(r,u):_!==null&&(_(),_=null))},get inputs(){return[u]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(M){l.oversample=M,h.oversample=M},addEventListener(...M){return u.addEventListener(M[0],M[1],M[2])},dispatchEvent(...M){return u.dispatchEvent(M[0])},removeEventListener(...M){return u.removeEventListener(M[0],M[1],M[2])}};o!==null&&(x.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==x.oversample&&(x.oversample=a);const y=()=>{u.connect(l).connect(m),u.connect(d).connect(h).connect(g).connect(m),p=!0,n(f)&&(_=i(r,u))},S=()=>{u.disconnect(l),l.disconnect(m),u.disconnect(d),d.disconnect(h),h.disconnect(g),g.disconnect(m),p=!1,_!==null&&(_(),_=null)};return s(lr(x,m),y,S)},Qe=()=>new DOMException("","NotSupportedError"),cS={numberOfChannels:1},lS=(i,t,e,n,s)=>class extends i{constructor(o,a,c){let l;if(typeof o=="number"&&a!==void 0&&c!==void 0)l={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")l=o;else throw new Error("The given parameters are not valid.");const{length:h,numberOfChannels:u,sampleRate:d}={...cS,...l},m=n(u,h,d);t(Cr,()=>Cr(m))||m.addEventListener("statechange",(()=>{let g=0;const _=p=>{this._state==="running"&&(g>0?(m.removeEventListener("statechange",_),p.stopImmediatePropagation(),this._waitForThePromiseToSettle(p)):g+=1)};return _})()),super(m,u),this._length=h,this._nativeOfflineAudioContext=m,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",s(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,vd(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},hS={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},uS=(i,t,e,n,s,r,o)=>class extends i{constructor(c,l){const h=s(c),u={...hS,...l},d=e(h,u),m=r(h),g=m?n():null,_=c.sampleRate/2;super(c,!1,d,g),this._detune=t(this,m,d.detune,153600,-153600),this._frequency=t(this,m,d.frequency,_,-_),this._nativeOscillatorNode=d,this._onended=null,this._oscillatorNodeRenderer=g,this._oscillatorNodeRenderer!==null&&u.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=u.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=l;const h=this._nativeOscillatorNode.onended;this._onended=h!==null&&h===l?c:h}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){$s(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),ni(this)&&Hr(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},dS=(i,t,e,n,s)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const l=async(h,u)=>{let d=e(h);const m=Xe(d,u);if(!m){const g={channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,detune:d.detune.value,frequency:d.frequency.value,periodicWave:o===null?void 0:o,type:d.type};d=t(u,g),a!==null&&d.start(a),c!==null&&d.stop(c)}return r.set(u,d),m?(await i(u,h.detune,d.detune),await i(u,h.frequency,d.frequency)):(await n(u,h.detune,d.detune),await n(u,h.frequency,d.frequency)),await s(h,u,d),d};return{set periodicWave(h){o=h},set start(h){a=h},set stop(h){c=h},render(h,u){const d=r.get(u);return d!==void 0?Promise.resolve(d):l(h,u)}}},fS={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},pS=(i,t,e,n,s,r,o)=>class extends i{constructor(c,l){const h=s(c),u={...fS,...l},d=e(h,u),m=r(h),g=m?n():null;super(c,!1,d,g),this._nativePannerNode=d,this._orientationX=t(this,m,d.orientationX,Ke,dn),this._orientationY=t(this,m,d.orientationY,Ke,dn),this._orientationZ=t(this,m,d.orientationZ,Ke,dn),this._positionX=t(this,m,d.positionX,Ke,dn),this._positionY=t(this,m,d.positionY,Ke,dn),this._positionZ=t(this,m,d.positionZ,Ke,dn),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},mS=(i,t,e,n,s,r,o,a,c,l)=>()=>{const h=new WeakMap;let u=null;const d=async(m,g)=>{let _=null,p=r(m);const f={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation},x={...f,coneInnerAngle:p.coneInnerAngle,coneOuterAngle:p.coneOuterAngle,coneOuterGain:p.coneOuterGain,distanceModel:p.distanceModel,maxDistance:p.maxDistance,panningModel:p.panningModel,refDistance:p.refDistance,rolloffFactor:p.rolloffFactor},y=Xe(p,g);if("bufferSize"in p)_=n(g,{...f,gain:1});else if(!y){const S={...x,orientationX:p.orientationX.value,orientationY:p.orientationY.value,orientationZ:p.orientationZ.value,positionX:p.positionX.value,positionY:p.positionY.value,positionZ:p.positionZ.value};p=s(g,S)}if(h.set(g,_===null?p:_),_!==null){if(u===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const b=new o(6,m.context.length,g.sampleRate),I=t(b,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});I.connect(b.destination),u=(async()=>{const F=await Promise.all([m.orientationX,m.orientationY,m.orientationZ,m.positionX,m.positionY,m.positionZ].map(async(D,U)=>{const L=e(b,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:U===0?1:0});return await a(b,D,L.offset),L}));for(let D=0;D<6;D+=1)F[D].connect(I,0,D),F[D].start(0);return l(b)})()}const S=await u,M=n(g,{...f,gain:1});await c(m,g,M);const T=[];for(let b=0;b<S.numberOfChannels;b+=1)T.push(S.getChannelData(b));let w=[T[0][0],T[1][0],T[2][0]],A=[T[3][0],T[4][0],T[5][0]],N=n(g,{...f,gain:1}),v=s(g,{...x,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:A[0],positionY:A[1],positionZ:A[2]});M.connect(N).connect(v.inputs[0]),v.connect(_);for(let b=128;b<S.length;b+=128){const I=[T[0][b],T[1][b],T[2][b]],F=[T[3][b],T[4][b],T[5][b]];if(I.some((D,U)=>D!==w[U])||F.some((D,U)=>D!==A[U])){w=I,A=F;const D=b/g.sampleRate;N.gain.setValueAtTime(0,D),N=n(g,{...f,gain:0}),v=s(g,{...x,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:A[0],positionY:A[1],positionZ:A[2]}),N.gain.setValueAtTime(1,D),M.connect(N).connect(v.inputs[0]),v.connect(_)}}return _}return y?(await i(g,m.orientationX,p.orientationX),await i(g,m.orientationY,p.orientationY),await i(g,m.orientationZ,p.orientationZ),await i(g,m.positionX,p.positionX),await i(g,m.positionY,p.positionY),await i(g,m.positionZ,p.positionZ)):(await a(g,m.orientationX,p.orientationX),await a(g,m.orientationY,p.orientationY),await a(g,m.orientationZ,p.orientationZ),await a(g,m.positionX,p.positionX),await a(g,m.positionY,p.positionY),await a(g,m.positionZ,p.positionZ)),cr(p)?await c(m,g,p.inputs[0]):await c(m,g,p),p};return{render(m,g){const _=h.get(g);return _!==void 0?Promise.resolve(_):d(m,g)}}},gS={disableNormalization:!1},_S=(i,t,e,n)=>class Cd{constructor(r,o){const a=t(r),c=n({...gS,...o}),l=i(a,c);return e.add(l),l}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===Cd.prototype||e.has(r)}},vS=(i,t)=>(e,n,s)=>(i(n).replay(s),t(n,e,s)),yS=(i,t,e)=>async(n,s,r)=>{const o=i(n);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([l,h])=>{const d=await t(l).render(l,s),m=n.context.destination;!e(l)&&(n!==m||!e(n))&&d.connect(r,h,c)})).reduce((a,c)=>[...a,...c],[]))},xS=(i,t,e)=>async(n,s,r)=>{const o=t(n);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const h=await i(a).render(a,s);e(a)||h.connect(r,c)}))},MS=(i,t,e,n)=>s=>i(Cr,()=>Cr(s))?Promise.resolve(i(n,n)).then(r=>{if(!r){const o=e(s,512,0,1);s.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>s.currentTime,o.connect(s.destination)}return s.startRendering()}):new Promise(r=>{const o=t(s,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});s.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(s.destination),s.startRendering()}),SS=i=>(t,e)=>{i.set(t,e)},TS=i=>(t,e)=>i.set(t,e),wS=(i,t,e,n,s,r,o,a)=>(c,l)=>e(c).render(c,l).then(()=>Promise.all(Array.from(n(l)).map(h=>e(h).render(h,l)))).then(()=>s(l)).then(h=>(typeof h.copyFromChannel!="function"?(o(h),$c(h)):t(r,()=>r(h))||a(h),i.add(h),h)),ES={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},bS=(i,t,e,n,s,r)=>class extends i{constructor(a,c){const l=s(a),h={...ES,...c},u=e(l,h),d=r(l),m=d?n():null;super(a,!1,u,m),this._pan=t(this,d,u.pan)}get pan(){return this._pan}},AS=(i,t,e,n,s)=>()=>{const r=new WeakMap,o=async(a,c)=>{let l=e(a);const h=Xe(l,c);if(!h){const u={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=t(c,u)}return r.set(c,l),h?await i(c,a.pan,l.pan):await n(c,a.pan,l.pan),cr(l)?await s(a,c,l.inputs[0]):await s(a,c,l),l};return{render(a,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):o(a,c)}}},CS=i=>()=>{if(i===null)return!1;try{new i({length:1,sampleRate:44100})}catch{return!1}return!0},RS=(i,t)=>async()=>{if(i===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new t(1,128,44100),s=URL.createObjectURL(e);let r=!1,o=!1;try{await n.audioWorklet.addModule(s);const a=new i(n,"a",{numberOfOutputs:0}),c=n.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await n.startRendering(),await new Promise(l=>setTimeout(l))}catch{}finally{URL.revokeObjectURL(s)}return r&&!o},PS=(i,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),n=i(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(s=>{e.oncomplete=()=>{n.disconnect(),s(e.currentTime!==0)},e.startRendering()})},DS=()=>new DOMException("","UnknownError"),IS={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},NS=(i,t,e,n,s,r,o)=>class extends i{constructor(c,l){const h=s(c),u={...IS,...l},d=e(h,u),g=r(h)?n():null;super(c,!0,d,g),this._isCurveNullified=!1,this._nativeWaveShaperNode=d,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},LS=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,o)=>{let a=t(r);if(!Xe(a,o)){const l={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=i(o,l)}return n.set(o,a),cr(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):s(r,o)}}},OS=()=>typeof window>"u"?null:window,US=(i,t)=>e=>{e.copyFromChannel=(n,s,r=0)=>{const o=i(r),a=i(s);if(a>=e.numberOfChannels)throw t();const c=e.length,l=e.getChannelData(a),h=n.length;for(let u=o<0?-o:0;u+o<c&&u<h;u+=1)n[u]=l[u+o]},e.copyToChannel=(n,s,r=0)=>{const o=i(r),a=i(s);if(a>=e.numberOfChannels)throw t();const c=e.length,l=e.getChannelData(a),h=n.length;for(let u=o<0?-o:0;u+o<c&&u<h;u+=1)l[u+o]=n[u]}},FS=i=>t=>{t.copyFromChannel=(e=>(n,s,r=0)=>{const o=i(r),a=i(s);if(o<t.length)return e.call(t,n,a,o)})(t.copyFromChannel),t.copyToChannel=(e=>(n,s,r=0)=>{const o=i(r),a=i(s);if(o<t.length)return e.call(t,n,a,o)})(t.copyToChannel)},kS=i=>(t,e)=>{const n=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=n),i(t,"buffer",s=>()=>{const r=s.call(t);return r===n?null:r},s=>r=>s.call(t,r===null?n:r))},BS=(i,t)=>(e,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw i()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw i()}});const s=e.createBufferSource();t(n,()=>{const a=n.numberOfInputs;for(let c=0;c<a;c+=1)s.connect(n,0,c)},()=>s.disconnect(n))},Rd=(i,t,e)=>i.copyFromChannel===void 0?i.getChannelData(e)[0]:(i.copyFromChannel(t,e),t[0]),Pd=i=>{if(i===null)return!1;const t=i.length;return t%2!==0?i[Math.floor(t/2)]!==0:i[t/2-1]+i[t/2]!==0},jr=(i,t,e,n)=>{let s=i;for(;!s.hasOwnProperty(t);)s=Object.getPrototypeOf(s);const{get:r,set:o}=Object.getOwnPropertyDescriptor(s,t);Object.defineProperty(i,t,{get:e(r),set:n(o)})},zS=i=>({...i,outputChannelCount:i.outputChannelCount!==void 0?i.outputChannelCount:i.numberOfInputs===1&&i.numberOfOutputs===1?[i.channelCount]:Array.from({length:i.numberOfOutputs},()=>1)}),VS=i=>({...i,channelCount:i.numberOfOutputs}),GS=i=>{const{imag:t,real:e}=i;return t===void 0?e===void 0?{...i,imag:[0,0],real:[0,0]}:{...i,imag:Array.from(e,()=>0),real:e}:e===void 0?{...i,imag:t,real:Array.from(t,()=>0)}:{...i,imag:t,real:e}},Dd=(i,t,e)=>{try{i.setValueAtTime(t,e)}catch(n){if(n.code!==9)throw n;Dd(i,t,e+1e-7)}},HS=i=>{const t=i.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},WS=i=>{const t=i.createBufferSource(),e=i.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},qS=i=>{const t=i.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},tl=i=>{const t=i.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},Id=i=>{const t=i.createBuffer(1,1,44100),e=i.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},el=i=>{const t=i.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},XS=i=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(i)}finally{t.close(),e.close()}},YS=i=>{i.start=(t=>(e=0,n=0,s)=>{const r=i.buffer,o=r===null?n:Math.min(r.duration,n);r!==null&&o>r.duration-.5/i.context.sampleRate?t.call(i,e,0,0):t.call(i,e,o,s)})(i.start)},Nd=(i,t)=>{const e=t.createGain();i.connect(e);const n=(s=>()=>{s.call(i,e),i.removeEventListener("ended",n)})(i.disconnect);i.addEventListener("ended",n),lr(i,e),i.stop=(s=>{let r=!1;return(o=0)=>{if(r)try{s.call(i,o)}catch{e.gain.setValueAtTime(0,o)}else s.call(i,o),r=!0}})(i.stop)},hr=(i,t)=>e=>{const n={value:i};return Object.defineProperties(e,{currentTarget:n,target:n}),typeof t=="function"?t.call(i,e):t.handleEvent.call(i,e)},jS=py(ds),$S=xy(ds),ZS=Ix(ma),Ld=new WeakMap,KS=Zx(Ld),Nn=cx(new Map,new WeakMap),Vn=OS(),Od=bM(Nn,Hn),nl=$x(Je),Be=yS(Je,nl,os),JS=Ey(Od,ue,Be),le=Qx(pa),li=QM(Vn),oe=gM(li),Ud=new WeakMap,Fd=Gx(hr),$r=PM(Vn),il=dM($r),sl=fM(Vn),kd=pM(Vn),Rr=IM(Vn),be=Zy(my(ud),yy(jS,$S,Ho,ZS,Wo,Je,KS,Gr,ue,ds,ni,os,Po),Nn,aM(Ec,Wo,Je,ue,Ar,ni),Hn,ga,Qe,Cx(Ho,Ec,Je,ue,Ar,le,ni,oe),Ox(Ud,Je,In),Fd,le,il,sl,kd,oe,Rr),QS=wy(be,JS,Hn,Od,le,oe),rl=new WeakSet,Mu=AM(Vn),Bd=Mx(new Uint32Array(1)),ol=US(Bd,Hn),al=FS(Bd),zd=Ay(rl,Nn,Qe,Mu,li,CS(Mu),ol,al),_a=My(on),Vd=xS(nl,Wr,os),Wn=mx(Vd),ur=RM(_a,Nn,HS,WS,qS,tl,Id,el,YS,kS(jr),Nd),qn=vS(Kx(Wr),Vd),tT=Py(Wn,ur,ue,qn,Be),Ln=Ky(gy(dd),Ud,jc,Jy,cy,ly,hy,uy,dy,Sc,ld,$r,Dd),eT=Ry(be,tT,Ln,Ue,ur,le,oe,hr),nT=By(be,zy,Hn,Ue,DM(on,jr),le,oe,Be),iT=ax(Wn,bd,ue,qn,Be),fs=TS(Ld),sT=ox(be,Ln,iT,ga,bd,le,oe,fs),ki=wM(ds,sl),rT=BS(Ue,ki),Bi=BM($r,rT),oT=ux(Bi,ue,Be),aT=hx(be,oT,Bi,le,oe),cT=px(Xr,ue,Be),lT=fx(be,cT,Xr,le,oe,VS),hT=GM(_a,ur,on,ki),dr=VM(_a,Nn,hT,tl,el),uT=xx(Wn,dr,ue,qn,Be),dT=yx(be,Ln,uT,dr,le,oe,hr),Gd=HM(Qe,jr),fT=wx(Gd,ue,Be),pT=Tx(be,fT,Gd,le,oe,fs),mT=Dx(Wn,Ad,ue,qn,Be),gT=Px(be,Ln,mT,Ad,le,oe,fs),Hd=WM(Qe),_T=Bx(Wn,Hd,ue,qn,Be),vT=kx(be,Ln,_T,Hd,Qe,le,oe,fs),yT=Yx(Wn,on,ue,qn,Be),xT=Xx(be,Ln,yT,on,le,oe),MT=jM(ga,Ue,Yr,Qe),va=MS(Nn,on,Yr,PS(on,li)),ST=oM(ur,ue,li,Be,va),TT=qM(MT),wT=sM(be,TT,ST,le,oe,fs),ET=Vy(Ln,Bi,dr,Yr,Qe,Rd,oe,jr),Wd=new WeakMap,bT=TM(nT,ET,Fd,oe,Wd,hr),qd=tS(_a,Nn,tl,Id,el,Nd),AT=dS(Wn,qd,ue,qn,Be),CT=uS(be,Ln,qd,AT,le,oe,hr),Xd=_x(ur),RT=aS(Xd,Ue,on,Pd,ki),ya=oS(Xd,Ue,RT,Pd,ki,$r,jr),PT=nS(Ho,Ue,Bi,on,Yr,ya,Qe,Wo,Rd,ki),Yd=eS(PT),DT=mS(Wn,Bi,dr,on,Yd,ue,li,qn,Be,va),IT=pS(be,Ln,Yd,DT,le,oe,fs),NT=iS(Hn),LT=_S(NT,le,new WeakSet,GS),OT=rS(Bi,Xr,on,ya,Qe,ki),jd=sS(OT,Qe),UT=AS(Wn,jd,ue,qn,Be),FT=bS(be,Ln,jd,UT,le,oe),kT=LS(ya,ue,Be),BT=NS(be,Ue,ya,kT,le,oe,fs),$d=_M(Vn),cl=Hx(Vn),Zd=new WeakMap,zT=tM(Zd,li),VT=$d?vy(Nn,Qe,Vx(Vn),cl,Wx(fy),le,zT,oe,Rr,new WeakMap,new WeakMap,RS(Rr,li),Vn):void 0,GT=mM(il,oe),HT=Ax(rl,Nn,bx,zx,new WeakSet,le,GT,Vo,Cr,ol,al),Kd=sx(VT,QS,zd,eT,sT,aT,lT,dT,pT,HT,gT,vT,xT,wT,bT,CT,IT,LT,FT,BT),WT=vM(be,$M,le,oe),qT=xM(be,ZM,le,oe),XT=MM(be,KM,le,oe),YT=JM(Ue,oe),jT=SM(be,YT,le),$T=ky(Kd,Ue,Qe,DS,WT,qT,XT,jT,$r),ll=eM(Wd),ZT=Sy(ll),Jd=gx(Hn),KT=Nx(ll),Qd=Ux(Hn),tf=new WeakMap,JT=jx(tf,In),QT=kM(Jd,Hn,Ue,Bi,Xr,dr,on,Yr,Qe,Qd,cl,JT,ki),tw=LM(Ue,QT,on,Qe,ki),ew=ix(Wn,Jd,ur,Bi,Xr,dr,on,KT,Qd,cl,ue,Rr,li,qn,Be,va),nw=Jx(Zd),iw=SS(tf),Su=$d?tx(ZT,be,Ln,ew,tw,Je,nw,le,oe,Rr,zS,iw,XS,hr):void 0,sw=Ex(Qe,li),rw=wS(rl,Nn,nl,ll,va,Vo,ol,al),ow=lS(Kd,Nn,Ue,sw,rw),aw=cM(pa,il),cw=lM(Yc,sl),lw=hM(jc,kd),hw=uM(pa,oe);function Mn(i){return i===void 0}function $t(i){return i!==void 0}function uw(i){return typeof i=="function"}function Ii(i){return typeof i=="number"}function ns(i){return Object.prototype.toString.call(i)==="[object Object]"&&i.constructor===Object}function dw(i){return typeof i=="boolean"}function Dn(i){return Array.isArray(i)}function si(i){return typeof i=="string"}function Ao(i){return si(i)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(i)}function Nt(i,t){if(!i)throw new Error(t)}function Gn(i,t,e=1/0){if(!(t<=i&&i<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${i}`)}function ef(i){!i.isOffline&&i.state!=="running"&&hl('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let nf=!1,Tu=!1;function wu(i){nf=i}function fw(i){Mn(i)&&nf&&!Tu&&(Tu=!0,hl("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let sf=console;function pw(...i){sf.log(...i)}function hl(...i){sf.warn(...i)}function mw(i){return new $T(i)}function gw(i,t,e){return new ow(i,t,e)}const is=typeof self=="object"?self:null,_w=is&&(is.hasOwnProperty("AudioContext")||is.hasOwnProperty("webkitAudioContext"));function vw(i,t,e){return Nt($t(Su),"This node only works in a secure context (https or localhost)"),new Su(i,t,e)}function On(i,t,e,n){var s=arguments.length,r=s<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,e):n,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(i,t,e,n);else for(var a=i.length-1;a>=0;a--)(o=i[a])&&(r=(s<3?o(r):s>3?o(t,e,r):o(t,e))||r);return s>3&&r&&Object.defineProperty(t,e,r),r}function Ee(i,t,e,n){function s(r){return r instanceof e?r:new e(function(o){o(r)})}return new(e||(e=Promise))(function(r,o){function a(h){try{l(n.next(h))}catch(u){o(u)}}function c(h){try{l(n.throw(h))}catch(u){o(u)}}function l(h){h.done?r(h.value):s(h.value).then(a,c)}l((n=n.apply(i,t||[])).next())})}class yw{constructor(t,e,n,s){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(s||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),this._type==="worker"&&((e=this._worker)===null||e===void 0||e.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function as(i){return lw(i)}function Ci(i){return cw(i)}function Do(i){return hw(i)}function Ls(i){return aw(i)}function xw(i){return i instanceof zd}function Mw(i,t){return i==="value"||as(t)||Ci(t)||xw(t)}function ss(i,...t){if(!t.length)return i;const e=t.shift();if(ns(i)&&ns(e))for(const n in e)Mw(n,e[n])?i[n]=e[n]:ns(e[n])?(i[n]||Object.assign(i,{[n]:{}}),ss(i[n],e[n])):Object.assign(i,{[n]:e[n]});return ss(i,...t)}function Sw(i,t){return i.length===t.length&&i.every((e,n)=>t[n]===e)}function it(i,t,e=[],n){const s={},r=Array.from(t);if(ns(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(a=>Reflect.has(i,a))||(ss(s,{[n]:r[0]}),e.splice(e.indexOf(n),1),r.shift())),r.length===1&&ns(r[0]))ss(s,r[0]);else for(let o=0;o<e.length;o++)$t(r[o])&&(s[e[o]]=r[o]);return ss(i,s)}function Tw(i){return i.constructor.getDefaults()}function Vs(i,t){return Mn(i)?t:i}function Pr(i,t){return t.forEach(e=>{Reflect.has(i,e)&&delete i[e]}),i}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class hi{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||is&&this.toString()===is.TONE_DEBUG_CLASS)&&pw(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}hi.version=cd;const ul=1e-6;function Zs(i,t){return i>t+ul}function Pc(i,t){return Zs(i,t)||An(i,t)}function jo(i,t){return i+ul<t}function An(i,t){return Math.abs(i-t)<ul}function ww(i,t,e){return Math.max(Math.min(i,e),t)}class Sn extends hi{constructor(){super(),this.name="Timeline",this._timeline=[];const t=it(Sn.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(Nt(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];Nt(Pc(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(An(this._timeline[e].time,t)){for(let n=e;n>=0&&An(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&Pc(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let n=0;const s=this._timeline.length;let r=s;if(s>0&&this._timeline[s-1][e]<=t)return s-1;for(;n<r;){let o=Math.floor(n+(r-n)/2);const a=this._timeline[o],c=this._timeline[o+1];if(An(a[e],t)){for(let l=o;l<this._timeline.length;l++){const h=this._timeline[l];if(An(h[e],t))o=l;else break}return o}else{if(jo(a[e],t)&&Zs(c[e],t))return o;Zs(a[e],t)?r=o:n=o+1}}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return n!==-1&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let s=this._search(t),r=this._search(e);return s!==-1&&r!==-1?(this._timeline[s].time!==t&&(s+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,s,r)):s===-1&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(n!==-1&&An(this._timeline[n].time,t)){let s=n;for(let r=n;r>=0&&An(this._timeline[r].time,t);r--)s=r;this._iterate(r=>{e(r)},s,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const rf=[];function xa(i){rf.push(i)}function Ew(i){rf.forEach(t=>t(i))}const of=[];function Ma(i){of.push(i)}function bw(i){of.forEach(t=>t(i))}class Zr extends hi{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(s=>{Mn(this._events)&&(this._events={}),this._events.hasOwnProperty(s)||(this._events[s]=[]),this._events[s].push(e)}),this}once(t,e){const n=(...s)=>{e(...s),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach(s=>{if(Mn(this._events)&&(this._events={}),this._events.hasOwnProperty(s))if(Mn(e))this._events[s]=[];else{const r=this._events[s];for(let o=r.length-1;o>=0;o--)r[o]===e&&r.splice(o,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let s=0,r=n.length;s<r;s++)n[s].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const n=Object.getOwnPropertyDescriptor(Zr.prototype,e);Object.defineProperty(t.prototype,e,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class af extends Zr{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class Kr extends af{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new Sn,this._timeoutIds=0,this._initialized=!1,this._closeStarted=!1,this.isOffline=!1,this._workletPromise=null;const n=it(Kr.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=((t=arguments[0])===null||t===void 0?void 0:t.latencyHint)||""):(this._context=mw({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new yw(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((e=arguments[0])===null||e===void 0)&&e.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(Ew(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return Nt(Ls(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return Nt(Ls(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return Nt(Ls(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){Nt(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){Nt(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){Nt(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){Nt(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return vw(this.rawContext,t,e)}addAudioWorkletModule(t){return Ee(this,void 0,void 0,function*(){Nt($t(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise})}workletsAreReady(){return Ee(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return Ls(this._context)?this._context.resume():Promise.resolve()}close(){return Ee(this,void 0,void 0,function*(){Ls(this._context)&&this.state!=="closed"&&!this._closeStarted&&(this._closeStarted=!0,yield this._context.close()),this._initialized&&bw(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=t;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=e,s.loop=!0,s.start(0),this._constants.set(t,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this.close(),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,s=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),s()},id:n,time:r+e})};return s(),n}}class Aw extends af{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return Ee(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function de(i,t){Dn(t)?t.forEach(e=>de(i,e)):Object.defineProperty(i,t,{enumerable:!0,writable:!1})}function dl(i,t){Dn(t)?t.forEach(e=>dl(i,e)):Object.defineProperty(i,t,{writable:!0})}const Qt=()=>{};class ee extends hi{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Qt;const t=it(ee.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,si(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Qt,onload:Qt,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:fn().sampleRate}set(t){return t instanceof ee?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return Ee(this,void 0,void 0,function*(){const e=ee.load(t).then(n=>{this.set(n),this.onload(this)});ee.downloads.push(e);try{yield e}finally{const n=ee.downloads.indexOf(e);ee.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Dn(t)&&t[0].length>0,n=e?t.length:1,s=e?t[0].length:t.length,r=fn(),o=r.createBuffer(n,s,r.sampleRate),a=!e&&n===1?[t]:t;for(let c=0;c<n;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(t){if(Ii(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const n=this.numberOfChannels;for(let s=0;s<n;s++){const r=this.toArray(s);for(let o=0;o<r.length;o++)e[o]+=r[o]}e=e.map(s=>s/n),this.fromArray(e)}return this}toArray(t){if(Ii(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let n=0;n<this.numberOfChannels;n++)e[n]=this.getChannelData(n);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){Nt(this.loaded,"Buffer is not loaded");const n=Math.floor(t*this.sampleRate),s=Math.floor(e*this.sampleRate);Nt(n<s,"The start time must be less than the end time");const r=s-n,o=fn().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(n,s),a);return new ee(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new ee().fromArray(t)}static fromUrl(t){return Ee(this,void 0,void 0,function*(){return yield new ee().load(t)})}static load(t){return Ee(this,void 0,void 0,function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const c=e[1].split("|");let l=c[0];for(const h of c)if(ee.supportsType(h)){l=h;break}t=t.replace(e[0],l)}const n=ee.baseUrl===""||ee.baseUrl.endsWith("/")?ee.baseUrl:ee.baseUrl+"/",s=document.createElement("a");s.href=n+t,s.pathname=(s.pathname+s.hash).split("/").map(encodeURIComponent).join("/");const r=yield fetch(s.href);if(!r.ok)throw new Error(`could not load url: ${t}`);const o=yield r.arrayBuffer();return yield fn().decodeAudioData(o)})}static supportsType(t){const e=t.split("."),n=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return Ee(this,void 0,void 0,function*(){for(yield Promise.resolve();ee.downloads.length;)yield ee.downloads[0]})}}ee.baseUrl="";ee.downloads=[];class Sa extends Kr{constructor(){super({clockSource:"offline",context:Do(arguments[0])?arguments[0]:gw(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:Do(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Do(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return Ee(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n===0&&(yield new Promise(s=>setTimeout(s,1)))}})}render(t=!0){return Ee(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new ee(e)})}close(){return Promise.resolve()}}const cf=new Aw;let Qi=cf;function fn(){return Qi===cf&&_w&&Cw(new Kr),Qi}function Cw(i,t=!1){t&&Qi.dispose(),Ls(i)?Qi=new Kr(i):Do(i)?Qi=new Sa(i):Qi=i}function Rw(){return Qi.resume()}if(is&&!is.TONE_SILENCE_LOGGING){const t=` * Tone.js v${cd} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function Pw(i){return Math.pow(10,i/20)}function Dw(i){return 20*(Math.log(i)/Math.LN10)}function lf(i){return Math.pow(2,i/12)}let Ta=440;function Iw(){return Ta}function Nw(i){Ta=i}function Dc(i){return Math.round(hf(i))}function hf(i){return 69+12*Math.log2(i/Ta)}function Lw(i){return Ta*Math.pow(2,(i-69)/12)}class fl extends hi{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),s=e==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/n)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let s=0;return t&&t!=="0"&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(s+=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(s+=this._beatsToUnits(parseFloat(n)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof fl&&this.fromType(this._val),Mn(this._val))return this._noArg();if(si(this._val)&&Mn(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(ns(this._val)){let t=0;for(const e in this._val)if($t(this._val[e])){const n=this._val[e],s=new this.constructor(this.context,e).valueOf()*n;t+=s}return t}if($t(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return si(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Pn extends fl{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Pn(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),s=this.valueOf(),a=Math.round(s/n)*n-s;return s+a*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);e.push(o+"n."),e.push(o+"n"),e.push(o+"t")}e.push("0");let n=e[0],s=new Pn(this.context,e[0]).toSeconds();return e.forEach(r=>{const o=new Pn(this.context,r).toSeconds();Math.abs(o-t)<Math.abs(s-t)&&(n=r,s=o)}),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let s=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=s.toString();return r.length>3&&(s=parseFloat(parseFloat(r).toFixed(3))),[n,e,s].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return Dc(this.toFrequency())}_now(){return this.context.now()}}class pn extends Pn{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return Iw()}static set A4(t){Nw(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:pn.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const s=Ow[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?s:pn.mtof(s)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let s=1;return t&&t!=="0"&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(s*=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(s*=this._beatsToUnits(parseFloat(n)/4)),s}}})}transpose(t){return new pn(this.context,this.valueOf()*lf(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return Dc(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/pn.A4);let n=Math.round(12*e)+57;const s=Math.floor(n/12);return s<0&&(n+=-12*s),Uw[n%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return Lw(t)}static ftom(t){return Dc(t)}}const Ow={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},Uw=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function Fw(i,t){return new pn(fn(),i,t)}class Er extends Pn{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class rn extends hi{constructor(){super();const t=it(rn.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:fn()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return fw(t),new Pn(this.context,t).toSeconds()}toFrequency(t){return new pn(this.context,t).toFrequency()}toTicks(t){return new Er(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(n=>{Mn(t[n])&&delete e[n]}),e}get(){const t=Tw(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const n=this[e];$t(n)&&$t(n.value)&&$t(n.setValueAtTime)?t[e]=n.value:n instanceof rn?t[e]=n._getPartialProperties(t[e]):Dn(n)||Ii(n)||si(n)||dw(n)?t[e]=n:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&$t(this[e])&&(this[e]&&$t(this[e].value)&&$t(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof rn?this[e].set(t[e]):this[e]=t[e])}),this}}class pl extends Sn{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,n){return Gn(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){const n=this._search(e);for(let s=n;s>=0;s--){const r=this._timeline[s];if(r.state===t)return r}}getNextState(t,e){const n=this._search(e);if(n!==-1)for(let s=n;s<this._timeline.length;s++){const r=this._timeline[s];if(r.state===t)return r}}}class ie extends rn{constructor(){super(it(ie.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=it(ie.getDefaults(),arguments,["param","units","convert"]);for(Nt($t(t.param)&&(as(t.param)||t.param instanceof ie),"param must be an AudioParam");!as(t.param);)t.param=t.param._param;this._swappable=$t(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new Sn(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,$t(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(rn.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return $t(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return $t(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return $t(this.maxValue)&&$t(this.minValue)&&Gn(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?Pw(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?Dw(t):t}setValueAtTime(t,e){const n=this.toSeconds(e),s=this._fromType(t);return Nt(isFinite(s)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),s=this._events.get(e);let r=this._initialValue;if(s===null)r=this._initialValue;else if(s.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const o=this._events.getBefore(s.time);let a;o===null?a=this._initialValue:a=o.value,s.type==="setTargetAtTime"&&(r=this._exponentialApproach(s.time,a,s.value,s.constant,e))}else if(n===null)r=s.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let o=s.value;if(s.type==="setTargetAtTime"){const a=this._events.getBefore(s.time);a===null?o=this._initialValue:o=a.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(s.time,o,n.time,n.value,e):r=this._exponentialInterpolate(s.time,o,n.time,n.value,e)}else r=s.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),s=this.toSeconds(e);return Nt(isFinite(n)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:s,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,s),this._param.linearRampToValueAtTime(n,s),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=An(n,0)?this._minOutput:n,this._assertRange(n);const s=this.toSeconds(e);return Nt(isFinite(n)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,s),this._param.exponentialRampToValueAtTime(n,s),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const s=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,s),this.cancelAndHoldAtTime(e+n*.9),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const s=this._fromType(t);Nt(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(s),Nt(isFinite(s)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(s,r,n),this}setValueCurveAtTime(t,e,n,s=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*s;this.setValueAtTime(this._toType(r),e);const o=n/(t.length-1);for(let a=1;a<t.length;a++){const c=this._fromType(t[a])*s;this.linearRampToValueAtTime(this._toType(c),e+a*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return Nt(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));Nt(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const s=this._events.get(e),r=this._events.getAfter(e);return s&&An(s.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&n.type==="setTargetAtTime"){const s=this._events.getAfter(n.time),r=s?s.time:e+2,o=(r-e)/10;for(let a=e;a<r;a+=o)t.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,s=>{s.type==="cancelScheduledValues"?t.cancelScheduledValues(s.time):s.type==="setTargetAtTime"?t.setTargetAtTime(s.value,s.time,s.constant):t[s.type](s.value,s.time)}),this}setParam(t){Nt(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,s,r){return n+(e-n)*Math.exp(-(r-t)/s)}_linearInterpolate(t,e,n,s,r){return e+(s-e)*((r-t)/(n-t))}_exponentialInterpolate(t,e,n,s,r){return e*Math.pow(s/e,(r-t)/(n-t))}}class Ct extends rn{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return $t(this.input)?as(this.input)||this.input instanceof ie?1:this.input.numberOfInputs:0}get numberOfOutputs(){return $t(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return $t(t)&&(t instanceof Ct||Ci(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(n=>{n.channelCount=t.channelCount,n.channelCountMode=t.channelCountMode,n.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();Nt(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return Ni(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return hl("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return kw(this,t,e,n),this}chain(...t){return Dr(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),$t(this.input)&&(this.input instanceof Ct?this.input.dispose():Ci(this.input)&&this.input.disconnect()),$t(this.output)&&(this.output instanceof Ct?this.output.dispose():Ci(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function Dr(...i){const t=i.shift();i.reduce((e,n)=>(e instanceof Ct?e.connect(n):Ci(e)&&Ni(e,n),n),t)}function Ni(i,t,e=0,n=0){for(Nt($t(i),"Cannot connect from undefined node"),Nt($t(t),"Cannot connect to undefined node"),(t instanceof Ct||Ci(t))&&Nt(t.numberOfInputs>0,"Cannot connect to node with no inputs"),Nt(i.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof Ct||t instanceof ie;)$t(t.input)&&(t=t.input);for(;i instanceof Ct;)$t(i.output)&&(i=i.output);as(t)?i.connect(t,e):i.connect(t,e,n)}function kw(i,t,e=0,n=0){if($t(t))for(;t instanceof Ct;)t=t.input;for(;!Ci(i);)$t(i.output)&&(i=i.output);as(t)?i.disconnect(t,e):Ci(t)?i.disconnect(t,e,n):i.disconnect()}class re extends Ct{constructor(){super(it(re.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=it(re.getDefaults(),arguments,["gain","units"]);this.gain=new ie({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),de(this,"gain")}static getDefaults(){return Object.assign(Ct.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Ks extends Ct{constructor(t){super(t),this.onended=Qt,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new re({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const n=this.toSeconds(e);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(Ct.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Qt})}_startGain(t,e=1){Nt(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){Nt(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Qt&&(this.onended(this),this.onended=Qt,!this.context.isOffline)){const t=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),Nt(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Qt,this}}class $o extends Ks{constructor(){super(it($o.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=it($o.getDefaults(),arguments,["offset"]);Ni(this._source,this._gainNode),this.offset=new ie({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(Ks.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class se extends Ct{constructor(){super(it(se.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=it(se.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new $o({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(Ct.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return ml(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,s){return this._param.setValueCurveAtTime(t,e,n,s),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function ml(i,t,e,n){(t instanceof ie||as(t)||t instanceof se&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof se&&(t.overridden=!0)),Ni(i,t,e,n)}class Zo extends ie{constructor(){super(it(Zo.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new Sn(1/0),this._multiplier=1;const t=it(Zo.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(ie.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const s=this._fromType(t),r=this._events.get(e),o=Math.round(Math.max(1/n,1));for(let a=0;a<=o;a++){const c=n*a+e,l=this._exponentialApproach(r.time,r.value,s,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),o=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),o=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),s=this._events.get(e),r=Math.round(Math.max((e-s.time)*10,1)),o=(e-s.time)/r;for(let a=0;a<=r;a++){const c=o*a+s.time,l=this._exponentialInterpolate(s.time,s.value,e,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Mn(t.ticks)){const o=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(o,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let s=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(s=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+s)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(e);return this.getTimeOfTick(s+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&n.type==="linearRampToValueAtTime"&&e.value!==n.value){const s=this._fromType(this.getValueAtTime(e.time)),o=(this._fromType(this.getValueAtTime(n.time))-s)/(n.time-e.time),a=Math.sqrt(Math.pow(s,2)-2*o*(e.ticks-t)),c=(-s+a)/o,l=(-s-a)/o;return(c>0?c:l)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),s=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+s)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class Ko extends se{constructor(){super(it(Ko.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=it(Ko.getDefaults(),arguments,["value"]);this.input=this._param=new Zo({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(se.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class Jo extends rn{constructor(){super(it(Jo.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new pl,this._tickOffset=new Sn,this._ticksAtTime=new Sn,this._secondsAtTime=new Sn;const t=it(Jo.getDefaults(),arguments,["frequency"]);this.frequency=new Ko({context:this.context,units:t.units,value:t.frequency}),de(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},rn.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),$t(e)&&this.setTicksAtTime(e,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const n=this._state.get(e);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),s=this._ticksAtTime.get(e),r={state:"paused",time:e};this._state.add(r);let o=s||n,a=s?s.ticks:0,c=null;return this._state.forEachBetween(o.time,e+this.sampleTime,l=>{let h=o.time;const u=this._tickOffset.get(l.time);u&&u.time>=o.time&&(a=u.ticks,h=u.time),o.state==="started"&&l.state!=="started"&&(a+=this.frequency.getTicksAtTime(l.time)-this.frequency.getTicksAtTime(h),l.time!==r.time&&(c={state:l.state,time:l.time,ticks:a})),o=l}),this._state.remove(r),c&&this._ticksAtTime.add(c),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);const s=this._secondsAtTime.get(t);let r=s||e,o=s?s.seconds:0,a=null;return this._state.forEachBetween(r.time,t+this.sampleTime,c=>{let l=r.time;const h=this._tickOffset.get(c.time);h&&h.time>=r.time&&(o=h.seconds,l=h.time),r.state==="started"&&c.state!=="started"&&(o+=c.time-l,c.time!==n.time&&(a={state:c.state,time:c.time,seconds:o})),r=c}),this._state.remove(n),a&&this._secondsAtTime.add(a),o}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),s=this._state.get(e),r=Math.max(n.time,s.time),o=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,n){let s=this._state.get(t);this._state.forEachBetween(t,e,o=>{s&&s.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(s.time,t),o.time-this.sampleTime,n),s=o});let r=null;if(s&&s.state==="started"){const o=Math.max(s.time,t),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(s.time),l=a-c;let h=Math.ceil(l)-l;h=An(h,1)?0:h;let u=this.frequency.getTimeOfTick(a+h);for(;u<e;){try{n(u,Math.round(this.getTicksAtTime(u)))}catch(d){r=d;break}u+=this.frequency.getDurationOfTicks(1,u)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class Ir extends rn{constructor(){super(it(Ir.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=Qt,this._lastUpdate=0,this._state=new pl("stopped"),this._boundLoop=this._loop.bind(this);const t=it(Ir.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new Jo({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,de(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(rn.getDefaults(),{callback:Qt,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){ef(this.context);const n=this.toSeconds(t);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(s+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,n=>{switch(n.state){case"started":const s=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,s);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(t,e,(n,s)=>{this.callback(n,s)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Zr.mixin(Ir);class gl extends hi{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=it(gl.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Qt,onload:Qt,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return Nt(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,n=Qt,s=Qt){return si(e)?(this.baseUrl&&e.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(t.toString(),new ee(this.baseUrl+e,n,s))):this._buffers.set(t.toString(),new ee(e,n,s)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class ks extends Er{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class Bw extends rn{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new Sn,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}xa(i=>{i.draw=new Bw({context:i})});Ma(i=>{i.draw.dispose()});class zw extends hi{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){Nt($t(t.time),"Events must have a time property"),Nt($t(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new Vw(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let n,s=null;if(e>0)if(t.left.right===null)n=t.left,n.right=t.right,s=n;else{for(n=t.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,s=n.parent,n.left=t.left,n.right=t.right)}else if(t.right.left===null)n=t.right,n.left=t.left,s=n;else{for(n=t.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,s=n.parent,n.left=t.left,n.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=n:t.parent.right=n:this._setRoot(n),s&&this._rebalance(s)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),s=t.right;s&&(t.right=s.left,s.left=t),e!==null?n?e.left=s:e.right=s:this._setRoot(s)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),s=t.left;s&&(t.left=s.right,s.right=t),e!==null?n?e.left=s:e.right=s:this._setRoot(s)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let n=e[0];for(let s=1;s<e.length;s++)e[s].low>n.low&&(n=e[s]);return n.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(n=>e.push(n)),e.forEach(n=>{n.event&&t(n.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const n=[];this._root.search(t,n),n.forEach(s=>{s.event&&e(s.event)})}return this}forEachFrom(t,e){if(this._root!==null){const n=[];this._root.searchAfter(t,n),n.forEach(s=>{s.event&&e(s.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class Vw{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class cs extends Ct{constructor(){super(it(cs.getDefaults(),arguments,["volume"])),this.name="Volume";const t=it(cs.getDefaults(),arguments,["volume"]);this.input=this.output=new re({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,de(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Qo extends Ct{constructor(){super(it(Qo.getDefaults(),arguments)),this.name="Destination",this.input=new cs({context:this.context}),this.output=new re({context:this.context}),this.volume=this.input.volume;const t=it(Qo.getDefaults(),arguments);Dr(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),Dr(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}xa(i=>{i.destination=new Qo({context:i})});Ma(i=>{i.destination.dispose()});class Gw extends hi{constructor(t){super(),this.name="TimelineValue",this._timeline=new Sn({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class ri extends Ct{constructor(){super(Object.assign(it(ri.getDefaults(),arguments,["context"])))}connect(t,e=0,n=0){return ml(this,t,e,n),this}}class ls extends ri{constructor(){super(Object.assign(it(ls.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=it(ls.getDefaults(),arguments,["mapping","length"]);Dn(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):uw(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(se.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let s=0,r=e;s<r;s++){const o=s/(r-1)*2-1;n[s]=t(o,s)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(n=>n.includes(t));Nt(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class ta extends ri{constructor(){super(Object.assign(it(ta.getDefaults(),arguments,["value"]))),this.name="Pow";const t=it(ta.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new ls({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(ri.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Li{constructor(t,e){this.id=Li._eventId++,this._remainderTime=0;const n=Object.assign(Li.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:Qt,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}Li._eventId=0;class _l extends Li{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(_l.getDefaults(),e);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},Li.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return jo(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new ks(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){jo(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new ks(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);Zs(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class Nr extends rn{constructor(){super(it(Nr.getDefaults(),arguments)),this.name="Transport",this._loop=new Gw(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new Sn,this._repeatedEvents=new zw,this._syncedSignals=[],this._swingAmount=0;const t=it(Nr.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new Ir({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),de(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(rn.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const n=e%(this._swingTicks*2)/(this._swingTicks*2),s=Math.sin(n*Math.PI)*this._swingAmount;t+=new ks(this.context,this._swingTicks*2/3).toSeconds()*s}wu(!0),this._timeline.forEachAtTime(e,n=>n.invoke(t)),wu(!1)}schedule(t,e){const n=new Li(this,{callback:t,time:new Er(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,s=1/0){const r=new _l(this,{callback:t,duration:new Pn(this.context,s).toTicks(),interval:new Pn(this.context,e).toTicks(),time:new Er(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new Li(this,{callback:t,once:!0,time:new Er(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(e,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new ks(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){this.context.resume();let n;return $t(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Dn(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Pn(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Pn(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new ks(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new ks(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(e),s=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e),r=e+s;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),n=this.getTicksAtTime(e),s=t-n%t;return this._clock.nextTickTime(s,e)}}syncSignal(t,e){const n=this.now();let s=this.bpm,r=1/(60/s.getValueAtTime(n)/this.PPQ),o=[];if(t.units==="time"){const c=.015625/r,l=new re(c),h=new ta(-1),u=new re(c);s.chain(l,h,u),s=u,r=1/r,o=[l,h,u]}e||(t.getValueAtTime(n)!==0?e=t.getValueAtTime(n)/r:e=0);const a=new re(e);return s.connect(a),a.connect(t._param),o.push(a),this._syncedSignals.push({initial:t.value,nodes:o,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.nodes.forEach(s=>s.dispose()),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),dl(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Zr.mixin(Nr);xa(i=>{i.transport=new Nr({context:i})});Ma(i=>{i.transport.dispose()});class qe extends Ct{constructor(t){super(t),this.input=void 0,this._state=new pl("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Qt,this._syncedStop=Qt,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new cs({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,de(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,onstop:Qt,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let s=Mn(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(s=this._clampToCurrentTime(s),!this._synced&&this._state.getValueAtTime(s)==="started")Nt(Zs(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,e,n);else if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const r=this._state.get(s);r&&(r.offset=this.toSeconds(Vs(e,0)),r.duration=n?this.toSeconds(n):void 0);const o=this.context.transport.schedule(a=>{this._start(a,e,n)},s);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else ef(this.context),this._start(s,e,n);return this}stop(t){let e=Mn(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||$t(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const n=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(n)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(Zs(e,0)){const n=this._state.get(e);if(n&&n.state==="started"&&n.time!==e){const s=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-s),this._start(t,this.toSeconds(n.offset)+s,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Qt,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Js extends Ks{constructor(){super(it(Js.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=it(Js.getDefaults(),arguments,["url","onload"]);Ni(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new ie({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new ee(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Ks.getDefaults(),{url:new ee,loop:!1,loopEnd:0,loopStart:0,onload:Qt,onerror:Qt,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,s=1){Nt(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,s),this.loop?e=Vs(e,this.loopStart):e=Vs(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=a-c;Pc(o,a)&&(o=(o-c)%l+c),An(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,jo(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),$t(n)){let a=this.toSeconds(n);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class hs extends qe{constructor(){super(it(hs.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const t=it(hs.getDefaults(),arguments,["type"]);this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(qe.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(Nt(t in Eu,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,this.state==="started")){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=Eu[this._type];this._source=new Js({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const Is=44100*5,hc=2,Jn={brown:null,pink:null,white:null},Eu={get brown(){if(!Jn.brown){const i=[];for(let t=0;t<hc;t++){const e=new Float32Array(Is);i[t]=e;let n=0;for(let s=0;s<Is;s++){const r=Math.random()*2-1;e[s]=(n+.02*r)/1.02,n=e[s],e[s]*=3.5}}Jn.brown=new ee().fromArray(i)}return Jn.brown},get pink(){if(!Jn.pink){const i=[];for(let t=0;t<hc;t++){const e=new Float32Array(Is);i[t]=e;let n,s,r,o,a,c,l;n=s=r=o=a=c=l=0;for(let h=0;h<Is;h++){const u=Math.random()*2-1;n=.99886*n+u*.0555179,s=.99332*s+u*.0750759,r=.969*r+u*.153852,o=.8665*o+u*.3104856,a=.55*a+u*.5329522,c=-.7616*c-u*.016898,e[h]=n+s+r+o+a+c+l+u*.5362,e[h]*=.11,l=u*.115926}}Jn.pink=new ee().fromArray(i)}return Jn.pink},get white(){if(!Jn.white){const i=[];for(let t=0;t<hc;t++){const e=new Float32Array(Is);i[t]=e;for(let n=0;n<Is;n++)e[n]=Math.random()*2-1}Jn.white=new ee().fromArray(i)}return Jn.white}};function ps(i,t){return Ee(this,void 0,void 0,function*(){const e=t/i.context.sampleRate,n=new Sa(1,e,i.context.sampleRate);return new i.constructor(Object.assign(i.get(),{frequency:2/e,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class ea extends Ks{constructor(){super(it(ea.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=it(ea.getDefaults(),arguments,["frequency","type"]);Ni(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new ie({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new ie({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),de(this,["frequency","detune"])}static getDefaults(){return Object.assign(Ks.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class we extends qe{constructor(){super(it(we.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=it(we.getDefaults(),arguments,["frequency","type"]);this.frequency=new se({context:this.context,units:"frequency",value:t.frequency}),de(this,"frequency"),this.detune=new se({context:this.context,units:"cents",value:t.detune}),de(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(qe.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new ea({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return we._periodicWaveCache.find(e=>e.phase===this._phase&&Sw(e.partials,this._partials));{const t=we._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const n=this._getCachedPeriodicWave();if($t(n)){const{partials:s,wave:r}=n;this._wave=r,this._partials=s,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[s,r]=this._getRealImaginary(t,this._phase),o=this.context.createPeriodicWave(s,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),we._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:s,type:this._type,wave:this._wave}),we._periodicWaveCache.length>100&&we._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Gn(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const s=new Float32Array(t);this._partials.forEach((r,o)=>s[o]=r),this._partials=Array.from(s),this.type=this._type}}_getRealImaginary(t,e){let s=2048;const r=new Float32Array(s),o=new Float32Array(s);let a=1;if(t==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,s=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],a=Math.max(a,2),s=a):this._partialCount=0,this._partials=[]}for(let c=1;c<s;++c){const l=2/(c*Math.PI);let h;switch(t){case"sine":h=c<=a?1:0,this._partials[c-1]=h;break;case"square":h=c&1?2*l:0,this._partials[c-1]=h;break;case"sawtooth":h=l*(c&1?1:-1),this._partials[c-1]=h;break;case"triangle":c&1?h=2*(l*l)*(c-1>>1&1?-1:1):h=0,this._partials[c-1]=h;break;case"custom":h=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}h!==0?(r[c]=-h*Math.sin(e*c),o[c]=h*Math.cos(e*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(t,e,n){let s=0;const r=t.length;for(let o=0;o<r;o++)s+=t[o]*Math.cos(o*n)+e[o]*Math.sin(o*n);return s}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const s=Math.PI*2,r=32;for(let o=0;o<r;o++)n=Math.max(this._inverseFFT(t,e,o/r*s),n);return ww(-this._inverseFFT(t,e,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return Ee(this,void 0,void 0,function*(){return ps(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}we._periodicWaveCache=[];class Hw extends ri{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new ls({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class oi extends se{constructor(){super(Object.assign(it(oi.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=it(oi.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new re({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(se.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Lr extends qe{constructor(){super(it(Lr.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new Hw({context:this.context}),this._modulationNode=new re({context:this.context});const t=it(Lr.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new we({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new we({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new oi({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),de(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(we.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return Ee(this,void 0,void 0,function*(){return ps(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Qs extends qe{constructor(){super(it(Qs.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new re({context:this.context,gain:0});const t=it(Qs.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new we({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new se({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new we({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new oi({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new oi({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),de(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(we.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return Ee(this,void 0,void 0,function*(){return ps(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class tr extends qe{constructor(){super(it(tr.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new re({context:this.context,gain:0}),this._thresh=new ls({context:this.context,mapping:e=>e<=0?-1:1});const t=it(tr.getDefaults(),arguments,["frequency","width"]);this.width=new se({context:this.context,units:"audioRange",value:t.width}),this._triangle=new we({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),de(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(qe.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return Ee(this,void 0,void 0,function*(){return ps(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Or extends qe{constructor(){super(it(Or.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=it(Or.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new se({context:this.context,units:"frequency",value:t.frequency}),this.detune=new se({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,de(this,["frequency","detune"])}static getDefaults(){return Object.assign(we.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach((s,r)=>s.detune.value=e+n*r)}}get count(){return this._oscillators.length}set count(t){if(Gn(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const n=new we({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):Qt});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,n)=>e.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(t=1024){return Ee(this,void 0,void 0,function*(){return ps(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class Ur extends qe{constructor(){super(it(Ur.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new oi({context:this.context,value:2});const t=it(Ur.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new tr({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new we({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),de(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(qe.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return Ee(this,void 0,void 0,function*(){return ps(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const bu={am:Lr,fat:Or,fm:Qs,oscillator:we,pulse:tr,pwm:Ur};class Fr extends qe{constructor(){super(it(Fr.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=it(Fr.getDefaults(),arguments,["frequency","type"]);this.frequency=new se({context:this.context,units:"frequency",value:t.frequency}),this.detune=new se({context:this.context,units:"cents",value:t.detune}),de(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(we.getDefaults(),Qs.getDefaults(),Lr.getDefaults(),Or.getDefaults(),tr.getDefaults(),Ur.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=bu[t],n=this.now();if(this._oscillator){const s=this._oscillator;s.stop(n),this.context.setTimeout(()=>s.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof bu[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&Ii(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&Ii(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&si(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(t=1024){return Ee(this,void 0,void 0,function*(){return ps(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class vl extends se{constructor(){super(Object.assign(it(vl.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new re({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,Dr(this._constantSource,this._sum)}static getDefaults(){return Object.assign(se.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class na extends ri{constructor(){super(Object.assign(it(na.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=it(na.getDefaults(),arguments,["min","max"]);this._mult=this.input=new oi({context:this.context,value:t.max-t.min}),this._add=this.output=new vl({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(ri.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}function uf(i,t=1/0){const e=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Gn(r,i,t),e.set(this,r)}})}}function ui(i,t=1/0){const e=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Gn(this.toSeconds(r),i,t),e.set(this,r)}})}}let df=class Ic extends qe{constructor(){super(it(Ic.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=it(Ic.getDefaults(),arguments,["url","onload"]);this._buffer=new ee({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(qe.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Qt,onerror:Qt,playbackRate:1,reverse:!1})}load(t){return Ee(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=Qt){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){this._loop?e=Vs(e,this._loopStart):e=Vs(e,0);const s=this.toSeconds(e),r=n;n=Vs(n,Math.max(this._buffer.duration-s,0));let o=this.toSeconds(n);o=o/this._playbackRate,t=this.toSeconds(t);const a=new Js({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+o),this._state.setStateAtTime("stopped",t+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Mn(r)?a.start(t,s):a.start(t,s,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(n=>n.stop(e))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){var s;(s=[...this._activeSources].pop())===null||s===void 0||s.stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if(this._state.getValueAtTime(n)==="started"){const s=this.toSeconds(t);this._stop(n),this._start(n,s)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Gn(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Gn(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(s=>s.cancelStop())),this._activeSources.forEach(s=>{s.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}};On([ui(0)],df.prototype,"fadeIn",void 0);On([ui(0)],df.prototype,"fadeOut",void 0);class Ww extends ri{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new ls({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Tn extends Ct{constructor(){super(it(Tn.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new se({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=it(Tn.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(Ct.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(si(t))return t;{let n;for(n in Co)if(Co[n][e]===t)return n;return t}}_setCurve(t,e,n){if(si(n)&&Reflect.has(Co,n)){const s=Co[n];ns(s)?t!=="_decayCurve"&&(this[t]=s[e]):this[t]=s}else if(Dn(n)&&t!=="_decayCurve")this[t]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._getCurve(this._decayCurve,"Out")}set decayCurve(t){this._setCurve("_decayCurve","Out",t)}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let s=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(t);if(o>0){const a=1/s;s=(1-o)/a}if(s<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,s,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,s,t);else{this._sig.cancelAndHoldAtTime(t);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,t,s,e)}if(r&&this.sustain<1){const a=e*this.sustain,c=t+s;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,t):(Nt(Dn(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return ml(this,t,e,n),this}asArray(t=1024){return Ee(this,void 0,void 0,function*(){const e=t/this.context.sampleRate,n=new Sa(1,e,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=s+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(e*(s+o)/a,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}On([ui(0)],Tn.prototype,"attack",void 0);On([ui(0)],Tn.prototype,"decay",void 0);On([uf(0,1)],Tn.prototype,"sustain",void 0);On([ui(0)],Tn.prototype,"release",void 0);const Co=(()=>{let t,e;const n=[];for(t=0;t<128;t++)n[t]=Math.sin(t/127*(Math.PI/2));const s=[],r=6.4;for(t=0;t<127;t++){e=t/127;const d=Math.sin(e*(Math.PI*2)*r-Math.PI/2)+1;s[t]=d/10+e*.83}s[127]=1;const o=[],a=5;for(t=0;t<128;t++)o[t]=Math.ceil(t/127*a)/a;const c=[];for(t=0;t<128;t++)e=t/127,c[t]=.5*(1-Math.cos(Math.PI*e));const l=[];for(t=0;t<128;t++){e=t/127;const d=Math.pow(e,3)*4+.2,m=Math.cos(d*Math.PI*2*e);l[t]=Math.abs(m*(1-e))}function h(d){const m=new Array(d.length);for(let g=0;g<d.length;g++)m[g]=1-d[g];return m}function u(d){return d.slice(0).reverse()}return{bounce:{In:h(l),Out:l},cosine:{In:n,Out:u(n)},exponential:"exponential",linear:"linear",ripple:{In:s,Out:h(s)},sine:{In:c,Out:h(c)},step:{In:o,Out:h(o)}}})();class ai extends Ct{constructor(){super(it(ai.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e);const t=it(ai.getDefaults(),arguments);this._volume=this.output=new cs({context:this.context,volume:t.volume}),this.volume=this._volume.volume,de(this,"volume")}static getDefaults(){return Object.assign(Ct.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...s)=>{const r=s[e],o=this.context.transport.schedule(a=>{s[e]=a,n.apply(this,s)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,n,s){const r=this.toSeconds(n),o=this.toSeconds(e);return this.triggerAttack(t,r,s),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class ci extends ai{constructor(){super(it(ci.getDefaults(),arguments));const t=it(ci.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(ai.getDefaults(),{detune:0,onsilence:Qt,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const s=this.toSeconds(e);return this._triggerEnvelopeAttack(s,n),this.setNote(t,s),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),s=t instanceof pn?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,r,n)}else this.frequency.setValueAtTime(s,n);return this}}On([ui(0)],ci.prototype,"portamento",void 0);class wa extends Tn{constructor(){super(it(wa.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new re({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class er extends ci{constructor(){super(it(er.getDefaults(),arguments)),this.name="Synth";const t=it(er.getDefaults(),arguments);this.oscillator=new Fr(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new wa(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),de(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(ci.getDefaults(),{envelope:Object.assign(Pr(Tn.getDefaults(),Object.keys(Ct.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(Pr(Fr.getDefaults(),[...Object.keys(qe.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+s)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class kr extends Ct{constructor(){super(it(kr.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const t=it(kr.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new ie({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new ie({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new ie({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new ie({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(Ct.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){Nt(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let o=0;o<t;o++){const c=Math.pow(o/t,2)*19980+20;e[o]=c}const n=new Float32Array(t),s=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,n,s),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class ia extends Ct{constructor(){super(it(ia.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new re({context:this.context}),this.output=new re({context:this.context}),this._filters=[];const t=it(ia.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new se({context:this.context,units:"positive",value:t.Q}),this.frequency=new se({context:this.context,units:"frequency",value:t.frequency}),this.detune=new se({context:this.context,units:"cents",value:t.detune}),this.gain=new se({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,de(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(Ct.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){Nt(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(n=>n.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const e=Ii(t)?t:parseInt(t,10),n=[-12,-24,-48,-96];let s=n.indexOf(e);Nt(s!==-1,`rolloff can only be ${n.join(", ")}`),s+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(s);for(let r=0;r<s;r++){const o=new kr({context:this.context});o.type=this._type,this.frequency.connect(o.frequency),this.detune.connect(o.detune),this.Q.connect(o.Q),this.gain.connect(o.gain),this._filters[r]=o}this._internalChannels=this._filters,Dr(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new kr({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{e.getFrequencyResponse(t).forEach((r,o)=>n[o]*=r)}),e.dispose(),n}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),dl(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}const Au=[1,1.483,1.932,2.546,2.63,3.897];class Br extends ci{constructor(){super(it(Br.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const t=it(Br.getDefaults(),arguments);this.detune=new se({context:this.context,units:"cents",value:t.detune}),this.frequency=new se({context:this.context,units:"frequency"}),this._amplitude=new re({context:this.context,gain:0}).connect(this.output),this._highpass=new ia({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let e=0;e<Au.length;e++){const n=new Qs({context:this.context,harmonicity:t.harmonicity,modulationIndex:t.modulationIndex,modulationType:"square",onstop:e===0?()=>this.onsilence(this):Qt,type:"square"});n.connect(this._highpass),this._oscillators[e]=n;const s=new oi({context:this.context,value:Au[e]});this._freqMultipliers[e]=s,this.frequency.chain(s,n.frequency),this.detune.connect(n.detune)}this._filterFreqScaler=new na({context:this.context,max:7e3,min:this.toFrequency(t.resonance)}),this.envelope=new Tn({attack:t.envelope.attack,attackCurve:"linear",context:this.context,decay:t.envelope.decay,release:t.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=t.octaves,this.octaves=t.octaves}static getDefaults(){return ss(ci.getDefaults(),{envelope:Object.assign(Pr(Tn.getDefaults(),Object.keys(Ct.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(t,e=1){return this.envelope.triggerAttack(t,e),this._oscillators.forEach(n=>n.start(t)),this.envelope.sustain===0&&this._oscillators.forEach(n=>{n.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(t){return this.envelope.triggerRelease(t),this._oscillators.forEach(e=>e.stop(t+this.toSeconds(this.envelope.release))),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(t){this._oscillators.forEach(e=>e.modulationIndex.value=t)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(t){this._oscillators.forEach(e=>e.harmonicity.value=t)}get resonance(){return this._filterFreqScaler.min}set resonance(t){this._filterFreqScaler.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,t)}dispose(){return super.dispose(),this._oscillators.forEach(t=>t.dispose()),this._freqMultipliers.forEach(t=>t.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class nr extends er{constructor(){super(it(nr.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=it(nr.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,de(this,["oscillator","envelope"])}static getDefaults(){return ss(ci.getDefaults(),er.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),s=this.toFrequency(t instanceof pn?t.toFrequency():t),r=s*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(s,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}On([uf(0)],nr.prototype,"octaves",void 0);On([ui(0)],nr.prototype,"pitchDecay",void 0);class sa extends ai{constructor(){super(it(sa.getDefaults(),arguments)),this.name="NoiseSynth";const t=it(sa.getDefaults(),arguments);this.noise=new hs(Object.assign({context:this.context},t.noise)),this.envelope=new wa(Object.assign({context:this.context},t.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(ai.getDefaults(),{envelope:Object.assign(Pr(Tn.getDefaults(),Object.keys(Ct.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(Pr(hs.getDefaults(),Object.keys(qe.getDefaults())),{type:"white"})})}triggerAttack(t,e=1){return t=this.toSeconds(t),this.envelope.triggerAttack(t,e),this.noise.start(t),this.envelope.sustain===0&&this.noise.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(t){return t=this.toSeconds(t),this.envelope.triggerRelease(t),this.noise.stop(t+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),t=this.toSeconds(t),this.triggerAttack(e,n),this.triggerRelease(e+t),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const ff=new Set;function yl(i){ff.add(i)}function pf(i,t){const e=`registerProcessor("${i}", ${t})`;ff.add(e)}const qw=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the {@link ToneAudioWorklet}. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;yl(qw);const Xw=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;yl(Xw);const Yw=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;yl(Yw);const jw="feedback-comb-filter",$w=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;pf(jw,$w);class zr extends ai{constructor(){super(it(zr.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=it(zr.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach(n=>{const s=parseInt(n,10);if(Nt(Ao(n)||Ii(s)&&isFinite(s),`url key is neither a note or midi pitch: ${n}`),Ao(n)){const r=new pn(this.context,n).toMidi();e[r]=t.urls[n]}else Ii(s)&&isFinite(s)&&(e[s]=t.urls[s])}),this._buffers=new gl({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(ai.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Qt,onerror:Qt,release:.1,urls:{}})}_findClosest(t){let n=0;for(;n<96;){if(this._buffers.has(t+n))return-n;if(this._buffers.has(t-n))return n;n++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach(s=>{const r=hf(new pn(this.context,s).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),l=o-c,h=this._buffers.get(l),u=lf(c+a),d=new Js({url:h,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);d.start(e,0,h.duration/u,n),Dn(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(d),d.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const m=this._activeSources.get(o),g=m.indexOf(d);g!==-1&&m.splice(g,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(n=>{const s=new pn(this.context,n).toMidi();if(this._activeSources.has(s)&&this._activeSources.get(s).length){const r=this._activeSources.get(s);e=this.toSeconds(e),r.forEach(o=>{o.stop(e)}),this._activeSources.set(s,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,s=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,s),Dn(e)?(Nt(Dn(t),"notes must be an array when duration is array"),t.forEach((o,a)=>{const c=e[Math.min(a,e.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(Nt(Ao(t)||isFinite(t),`note must be a pitch or midi: ${t}`),Ao(t)){const s=new pn(this.context,t).toMidi();this._buffers.add(s,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}On([ui(0)],zr.prototype,"attack",void 0);On([ui(0)],zr.prototype,"release",void 0);class ra extends Ct{constructor(){super(Object.assign(it(ra.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new Ww({context:this.context}),this.a=new re({context:this.context,gain:0}),this.b=new re({context:this.context,gain:0}),this.output=new re({context:this.context}),this._internalChannels=[this.a,this.b];const t=it(ra.getDefaults(),arguments,["fade"]);this.fade=new se({context:this.context,units:"normalRange",value:t.fade}),de(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",Ni(this._split,this.a.gain,0),Ni(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(Ct.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Cu extends Ct{constructor(t){super(t),this.name="Effect",this._dryWet=new ra({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new re({context:this.context}),this.effectReturn=new re({context:this.context}),this.input=new re({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],de(this,"wet")}static getDefaults(){return Object.assign(Ct.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class oa extends Ct{constructor(){super(Object.assign(it(oa.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=it(oa.getDefaults(),arguments,["pan"]);this.pan=new ie({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",de(this,"pan")}static getDefaults(){return Object.assign(Ct.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}const Zw="bit-crusher",Kw=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;pf(Zw,Kw);class aa extends Ct{constructor(){super(it(aa.getDefaults(),arguments,["channels"])),this.name="Merge";const t=it(aa.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(Ct.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class ca extends Cu{constructor(){super(it(ca.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const t=it(ca.getDefaults(),arguments,["decay"]);this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Cu.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){t=this.toSeconds(t),Gn(t,.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){t=this.toSeconds(t),Gn(t,0),this._preDelay=t,this.generate()}generate(){return Ee(this,void 0,void 0,function*(){const t=this.ready,e=new Sa(2,this._decay+this._preDelay,this.context.sampleRate),n=new hs({context:e}),s=new hs({context:e}),r=new aa({context:e});n.connect(r,0,0),s.connect(r,0,1);const o=new re({context:e}).toDestination();r.connect(o),n.start(0),s.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=e.render();return this.ready=a.then(Qt),yield t,this._convolver.buffer=(yield a).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class Te extends Ct{constructor(){super(it(Te.getDefaults(),arguments,["solo"])),this.name="Solo";const t=it(Te.getDefaults(),arguments,["solo"]);this.input=this.output=new re({context:this.context}),Te._allSolos.has(this.context)||Te._allSolos.set(this.context,new Set),Te._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(Ct.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),Te._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Te._soloed.has(this.context)||Te._soloed.set(this.context,new Set),Te._soloed.get(this.context).add(this)}_removeSolo(){Te._soloed.has(this.context)&&Te._soloed.get(this.context).delete(this)}_isSoloed(){return Te._soloed.has(this.context)&&Te._soloed.get(this.context).has(this)}_noSolos(){return!Te._soloed.has(this.context)||Te._soloed.has(this.context)&&Te._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Te._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Te._allSolos=new Map;Te._soloed=new Map;class la extends Ct{constructor(){super(it(la.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=it(la.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new oa({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new cs({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,de(this,["pan","volume"])}static getDefaults(){return Object.assign(Ct.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Ki extends Ct{constructor(){super(it(Ki.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=it(Ki.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new Te({solo:t.solo,context:this.context}),this._panVol=this.output=new la({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),de(this,["pan","volume"])}static getDefaults(){return Object.assign(Ct.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return Ki.buses.has(t)||Ki.buses.set(t,new re({context:this.context})),Ki.buses.get(t)}send(t,e=0){const n=this._getBus(t),s=new re({context:this.context,units:"decibels",gain:e});return this.connect(s),s.connect(n),s}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Ki.buses=new Map;class Jw extends Ct{constructor(){super(...arguments),this.name="Listener",this.positionX=new ie({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new ie({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new ie({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new ie({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new ie({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new ie({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new ie({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new ie({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new ie({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(Ct.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}xa(i=>{i.listener=new Jw({context:i})});Ma(i=>{i.listener.dispose()});function Qw(){return fn().now()}fn().transport;fn().destination;fn().destination;fn().listener;fn().draw;const Sr=fn();class tE{constructor(){this.keys={up:!1,down:!1,left:!1,right:!1,shoot:!1,grenade:!1},this.mouse={x:0,y:0,isDown:!1},this.rightClickDebounce=!1,this.rightClickDebounceTime=800,this.lastRightClickTime=0,this.rightClickMinInterval=1e3,this.crosshair=document.getElementById("crosshair"),this.setupKeyListeners(),this.setupMouseListeners()}setupKeyListeners(){window.addEventListener("keydown",t=>{this.updateKey(t.key,!0)}),window.addEventListener("keyup",t=>{this.updateKey(t.key,!1)})}setupMouseListeners(){window.addEventListener("mousemove",t=>{this.mouse.x=t.clientX/window.innerWidth*2-1,this.mouse.y=-(t.clientY/window.innerHeight)*2+1,this.crosshair&&(this.crosshair.style.left=`${t.clientX}px`,this.crosshair.style.top=`${t.clientY}px`,this.crosshair.style.display="block")}),window.addEventListener("mousedown",t=>{if(t.button===0)this.mouse.isDown=!0,this.keys.shoot=!0;else if(t.button===2){if(this.rightClickDebounce)return;const e=Date.now();if(e-this.lastRightClickTime<this.rightClickMinInterval)return;this.rightClickDebounce=!0,this.lastRightClickTime=e,setTimeout(()=>{this.rightClickDebounce=!1},this.rightClickDebounceTime),this.keys.grenade=!0}}),window.addEventListener("mouseup",t=>{t.button===0?(this.mouse.isDown=!1,this.keys.shoot=!1):t.button===2&&(this.keys.grenade=!1)}),window.addEventListener("contextmenu",t=>{t.preventDefault()})}updateKey(t,e){switch(t){case"w":case"ArrowUp":this.keys.up=e;break;case"s":case"ArrowDown":this.keys.down=e;break;case"a":case"ArrowLeft":this.keys.left=e;break;case"d":case"ArrowRight":this.keys.right=e;break;case" ":this.keys.shoot=e;break;case"g":this.keys.grenade=e;break}}}const ve={PLAYER:65280,ENEMY:{REGULAR:16711680,CHUBBY:16742144,THIN:65535},BULLET:16711935,GUN:9127187,AMMO:35071,ENERGY:2293538},Jt={PLAYER:.8,BULLET:.15,GUN:{WIDTH:.3,DEPTH:.15},ENEMIES:{REGULAR:.3,CHUBBY:.5,THIN:.2}},Wt={ARENA_SIZE:60,SPEEDS:{PLAYER:8,ENEMY:{REGULAR:3.6,CHUBBY:3.42,THIN:3.18},BULLET:40,GRENADE:.55},BULLET_MAX_DISTANCE:75,GRENADE_EXPLOSION_RADIUS:4,GRENADE_EXPLOSION_DELAY:2e3,AMMO_COUNT:15,RELOAD_TIME:1e3,MAX_AMMO:60,ENERGY_AMOUNT:20,SPAWN_DELAY:2e3,STEP_FREQUENCY:6,GRENADE_THROW_STRENGTH:.6},eE={GUNSHOT:{type:"hihat",options:{volume:-10}},EXPLOSION:{type:"tom",options:{volume:-5}},RELOAD:{type:"click",options:{volume:-15}},PICKUP:{type:"ping",options:{volume:-15}},GRENADE_BOUNCE:{type:"hihat",options:{volume:-15}},GRENADE_EXPLOSION:{type:"tom",options:{volume:0}}};class nE{constructor(){this.isInitialized=!1,this.sounds={},this.lastPlayTime=0,this.minPlayGap=.05,this.setupSynths()}setupSynths(){this.reverb=new ca({decay:4,wet:.6,preDelay:.2}).toDestination(),this.scream=new er({oscillator:{type:"triangle"},envelope:{attack:.01,decay:.08,sustain:0,release:.05}}).toDestination(),this.hihat=new Br({frequency:200,envelope:{attack:.001,decay:.1,release:.01},harmonicity:5.1,modulationIndex:32,resonance:4e3,octaves:1.5}).toDestination(),this.tom=new nr({pitchDecay:.05,octaves:4,oscillator:{type:"sine"},envelope:{attack:.001,decay:.4,sustain:.01,release:1.4,attackCurve:"exponential"}}).connect(this.reverb),this.ping=new Br({frequency:500,envelope:{attack:.001,decay:.1,release:.01},harmonicity:1,modulationIndex:10,resonance:3e3,octaves:1}).toDestination(),this.click=new sa({noise:{type:"white"},envelope:{attack:.005,decay:.1,sustain:0}}).toDestination(),this.hihat.volume.value=-20,this.tom.volume.value=-20,this.ping.volume.value=-20,this.click.volume.value=-20,this.isInitialized=!0}playSound(t,e=null,n=1){if(!this.isInitialized||Sr.state!=="running"){console.warn("Audio not initialized or context not running");return}const s=eE[t];if(s)try{const r=Qw(),o=Math.max(r,this.lastPlayTime+this.minPlayGap);switch(this.lastPlayTime=o,s.type){case"hihat":if(this.hihat.volume.value=s.options.volume,n!==1){const a=this.hihat.frequency.value;this.hihat.frequency.value=a*n}this.hihat.triggerAttackRelease(e||"C2","16n",o);break;case"tom":this.tom.volume.value=s.options.volume,this.tom.triggerAttackRelease(e||"C2","8n",o);break;case"click":this.click.volume.value=s.options.volume,this.click.triggerAttackRelease("16n",o);break;case"ping":this.ping.volume.value=s.options.volume,this.ping.triggerAttackRelease(e||"C5","16n",o);break}}catch(r){console.error("Error playing sound:",r)}}playGunshot(t=1){this.playSound("GUNSHOT","C2",t)}playExplosion(){this.playSound("EXPLOSION")}playReload(){this.playSound("RELOAD")}playPickup(){this.playSound("PICKUP")}playGrenadeBounce(){const t=["C3","D3","E3","F3"],e=t[Math.floor(Math.random()*t.length)];this.playSound("GRENADE_BOUNCE",e)}playGrenadeExplosion(){try{Sr.state!=="running"&&(console.warn("Audio context not running, attempting to resume"),Sr.resume()),this.tom.volume.value=0,this.tom.triggerAttackRelease("C0","2n")}catch(t){console.error("Error playing grenade explosion:",t)}}playEnemyDeath(){try{Sr.state!=="running"&&Sr.resume();const t="C7",e="G6",n=.12;this.scream.triggerAttack(t),this.scream.frequency.rampTo(Fw(e),n*.8),setTimeout(()=>{this.scream.triggerRelease()},n*1e3)}catch(t){console.error("Error playing enemy death sound:",t)}}}class iE{constructor(t,e){this.scene=t,this.audioManager=e,this.position=new C(0,0,0),this.rotation=0,this.velocity=new C(0,0,0),this.isMoving=!1,this.stepTime=0,this.stepDirection=1,this.movementIntensity=0,this.ammo=Wt.AMMO_COUNT,this.maxAmmo=Wt.MAX_AMMO,this.isReloading=!1,this.lastShotTime=0,this.fireRate=100,this.grenades=3,this.maxGrenades=3,this.lastGrenadeTime=0,this.grenadeRate=2e3,this.isDead=!1,this.isGunHolstered=!0,this.gunDrawProgress=0,this.gunDrawSpeed=.2,this.gunHolsterSpeed=.1,this.lastGrenadeTime=Date.now()-3e3,this.debugMode=!0,this.maxHealth=100,this.currentHealth=this.maxHealth,this.isInvulnerable=!1,this.invulnerabilityTime=1e3,this.lastHitTime=0,this.debugArrow=null,this.lastMouseIntersection=new C,this.movementPenalty=1,this.createPlayerMesh(),this.createHealthBar()}createPlayerMesh(){const t=new xe(.35,1,.35),e=new Lt({color:ve.PLAYER});this.body=new bt(t,e),this.body.position.y=1/2;const n=Jt.GUN.WIDTH*.8,s=n,r=Jt.GUN.DEPTH*3.5,o=new xe(n,s,r),a=new Lt({color:ve.GUN});this.gun=new bt(o,a),this.gun.position.set(.4,-.2,0),this.gun.rotation.set(Math.PI/2,0,0),this.body.add(this.gun),this.group=new nn,this.group.add(this.body),this.scene.add(this.group),this.group.position.set(0,0,5),this.position.copy(this.group.position),this.jumpTime=Math.random()*10}createHealthBar(){this.healthBar&&this.healthBar.parentNode&&this.healthBar.parentNode.removeChild(this.healthBar);const t=.4,e=.05,n=.05,s=new xe(t,e,n),r=new Lt({color:3355443});this.healthBarBg=new bt(s,r);const o=new xe(t,e,n),a=new Lt({color:65280});this.healthBarFg=new bt(o,a);const c=1.3;this.healthBarBg.position.set(0,c,0),this.healthBarFg.position.set(0,c,0),this.body.add(this.healthBarBg),this.body.add(this.healthBarFg),this.updateHealthBar()}updateHealthBar(){if(!this.healthBarFg)return;const t=this.currentHealth/this.maxHealth;this.healthBarFg.scale.x=t;const e=(1-t)*.5*-.4;this.healthBarFg.position.x=e,t>.6?this.healthBarFg.material.color.setHex(65280):t>.3?this.healthBarFg.material.color.setHex(16776960):this.healthBarFg.material.color.setHex(16711680)}takeDamage(t){const e=Date.now();this.isInvulnerable&&e-this.lastHitTime<this.invulnerabilityTime||(this.currentHealth=Math.max(0,this.currentHealth-t),this.updateHealthBar(),this.body.material.color.setHex(16711680),setTimeout(()=>{this.body.material.color.setHex(ve.PLAYER)},100),this.isInvulnerable=!0,this.lastHitTime=e,this.currentHealth<=0&&this.die())}die(){this.isDead=!0;const t=document.createElement("div");t.style.position="fixed",t.style.top="50%",t.style.left="50%",t.style.transform="translate(-50%, -50%)",t.style.color="red",t.style.fontSize="64px",t.style.fontFamily='"Press Start 2P", cursive',t.style.textShadow="2px 2px 4px black",t.style.zIndex="1000",t.textContent="GAME OVER",document.body.appendChild(t);const e=document.createElement("button");e.style.position="fixed",e.style.top="60%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.padding="10px 20px",e.style.fontSize="24px",e.style.cursor="pointer",e.textContent="Restart Game",e.onclick=()=>window.location.reload(),document.body.appendChild(e)}update(t,e,n,s){this.isDead||(this.handleRotation(e,s),this.handleMovement(e,t),this.handleShooting(e,n,s),this.updateAnimation(t),this.updateGunAnimation(t))}handleMovement(t,e){if(this.isDead)return;this.velocity.set(0,0,0);const n=new C(0,0,-1),s=new C(0,0,1),r=new C(1,0,0),o=new C(-1,0,0);if(t.keys.up&&this.velocity.add(n),t.keys.down&&this.velocity.add(s),t.keys.right&&this.velocity.add(r),t.keys.left&&this.velocity.add(o),this.velocity.length()>0){this.movementIntensity=this.velocity.length(),this.velocity.normalize(),this.velocity.multiplyScalar(Wt.SPEEDS.PLAYER*e*this.movementPenalty),this.isMoving=!0,this.group.position.add(this.velocity);const a=Wt.ARENA_SIZE/2;this.group.position.x=Math.max(-30,Math.min(a,this.group.position.x)),this.group.position.z=Math.max(-30,Math.min(a,this.group.position.z)),this.position.copy(this.group.position)}else this.isMoving=!1,this.movementIntensity=0}handleRotation(t,e){if(!this.isDead)try{const n=new Ut(t.mouse.x,t.mouse.y),s=new ad;s.setFromCamera(n,e);const r=new yi(new C(0,1,0),0),o=new C;if(s.ray.intersectPlane(r,o),o){const a=new C().subVectors(o,this.group.position).normalize();this.lastMouseIntersection.copy(o),this.rotation=Math.atan2(a.x,a.z),this.group.rotation.y=this.rotation}}catch(n){console.error("Error in player rotation:",n)}}handleShooting(t,e,n){if(this.isDead)return;const s=Date.now();t.keys.shoot&&!this.isReloading&&this.ammo>0?(this.isGunHolstered&&(this.isGunHolstered=!1),s-this.lastShotTime>this.fireRate&&(this.shoot(),this.lastShotTime=s)):!t.keys.shoot&&!this.isGunHolstered&&this.gunDrawProgress>=1&&(this.isGunHolstered=!0),t.keys.grenade&&this.grenades>0&&s-this.lastGrenadeTime>this.grenadeRate&&(this.throwGrenade(),this.lastGrenadeTime=s,t.keys.grenade=!1)}shoot(){this.ammo--,this.audioManager.playGunshot(),this.body.scale.z=.8,setTimeout(()=>{this.body.scale.z=1},50),this.createMuzzleFlash()}playShootSound(){const t=1+(Math.random()-.5)*.2;this.audioManager.playGunshot(t),this.body.scale.z=.85,setTimeout(()=>{this.body.scale.z=1},30)}showMuzzleFlash(){this.createMuzzleFlash()}createMuzzleFlash(){const t=this.getPosition().clone();t.y=Jt.PLAYER;const n=this.getDirection().clone().multiplyScalar(Jt.PLAYER+.3);t.add(n);const s=new xe(.5,.5,.5),r=new Lt({color:16776960,transparent:!0,opacity:1,blending:wi}),o=new bt(s,r);o.position.copy(t),o.rotation.y=this.rotation,this.scene.add(o);const a=new ii(16776960,5,3);a.position.copy(t),this.scene.add(a);let c=1,l=1;const h=()=>{if(c-=.2,l+=.2,c<=0){this.scene.remove(o),this.scene.remove(a),r.dispose(),s.dispose();return}r.opacity=c,o.scale.set(l,l,l),a.intensity=c*5,requestAnimationFrame(h)};h()}reload(){this.isReloading=!0,this.audioManager.playReload(),this.body.scale.y=.7,setTimeout(()=>{this.ammo=Wt.AMMO_COUNT,this.isReloading=!1,this.body.scale.y=1},Wt.RELOAD_TIME)}addAmmo(t){this.ammo=Math.min(this.maxAmmo,this.ammo+t),this.audioManager.playPickup()}addEnergy(t){this.currentHealth=Math.min(this.maxHealth,this.currentHealth+t),this.updateHealthBar(),this.audioManager.playPickup()}addGrenades(t){this.grenades=Math.min(this.maxGrenades,this.grenades+t),this.audioManager.playPickup()}throwGrenade(){return this.isReloading||this.grenades<=0?!1:(this.grenades--,this.lastGrenadeTime=Date.now(),this.body.scale.x=1.2,setTimeout(()=>{this.body.scale.x=1},100),!0)}updateAnimation(t){this.isMoving?this.updateBouncingAnimation(t):this.resetAnimationState()}updateBouncingAnimation(t){this.jumpTime+=t*Wt.STEP_FREQUENCY;const e=Math.sin(this.jumpTime*Math.PI),n=Jt.PLAYER/2,s=Math.abs(e)*.25;this.body.position.y=n+s;const r=.3;this.body.scale.y=1-s*r*3.5,this.body.scale.x=1+s*r,this.body.scale.z=1+s*r*.5;const o=.15;if(this.velocity.x!==0||this.velocity.z!==0){const a=this.velocity.clone().normalize();this.body.rotation.z=a.x*o,this.body.rotation.x=-a.z*o}}resetAnimationState(){this.body.position.y=Jt.PLAYER/2,this.body.scale.set(1,1,1),this.body.rotation.x=0,this.body.rotation.z=0,this.stepTime=0}getPosition(){return this.position}getDirection(){return new C(Math.sin(this.rotation),0,Math.cos(this.rotation))}getBoundingRadius(){return Jt.PLAYER*.5}getMouseWorldPosition(){return this.lastMouseIntersection.clone()}updateGunAnimation(t){this.isGunHolstered?this.gunDrawProgress=Math.max(0,this.gunDrawProgress-this.gunHolsterSpeed):this.gunDrawProgress=Math.min(1,this.gunDrawProgress+this.gunDrawSpeed);const e=new C(.4,-.2,0),n=new C(0,.1,Jt.PLAYER/2+Jt.GUN.DEPTH*1.75),s=new _n(Math.PI/2,0,0),r=new _n(0,0,0);this.gun.position.lerpVectors(e,n,this.gunDrawProgress),this.gun.rotation.x=Oa.lerp(s.x,r.x,this.gunDrawProgress),this.gun.rotation.y=Oa.lerp(s.y,r.y,this.gunDrawProgress),this.gun.rotation.z=Oa.lerp(s.z,r.z,this.gunDrawProgress)}isOutOfAmmo(){return this.ammo<=0}}class sE{constructor(t){this.scene=t,this.createGround()}createGround(){const t=new us(Wt.ARENA_SIZE,Wt.ARENA_SIZE),e=new Lt({color:2236962,side:He});this.mesh=new bt(t,e),this.mesh.rotation.x=Math.PI/2,this.mesh.position.y=0,this.scene.add(this.mesh)}}class rE{constructor(t,e,n,s,r){this.scene=t,this.position=e.clone(),this.width=n||1,this.height=s||Jt.PLAYER,this.depth=r||1,this.createObstacle()}createObstacle(){this.group=new nn,this.group.position.copy(this.position);const t=12,e=[2971436,3828537,4883784,5938520];for(let n=0;n<t;n++){const s=(Math.random()-.5)*this.width*.9,r=(Math.random()-.5)*this.depth*.9,o=this.height*(.7+Math.random()*.4),a=new Fi(.12,o,4),c=new Lt({color:e[Math.floor(Math.random()*e.length)]}),l=new bt(a,c);l.position.set(s,o/2,r),l.rotation.y=Math.random()*Math.PI*2,l.rotation.z=(Math.random()-.5)*.3,this.group.add(l)}this.scene.add(this.group)}getPosition(){return this.position}getBoundingBox(){return new gn().setFromObject(this.group)}}class oE{constructor(t,e){this.scene=t,this.position=e.clone(),this.createTree()}createTree(){this.group=new nn,this.group.position.copy(this.position);const t=new xe(.5,2,.5),e=new Lt({color:9127187}),n=new bt(t,e);n.position.y=1,this.group.add(n);const s=new nn;s.position.y=2;const r=[2971436,3828537,4883784],o=[1.8,1.4,1];for(let a=0;a<o.length;a++){const c=o[a],l=new xe(c,.7,c),h=new Lt({color:r[a]}),u=new bt(l,h);u.position.y=a*.5,s.add(u)}this.group.add(s),this.scene.add(this.group)}getPosition(){return this.position}getBoundingRadius(){return .25}}class aE{constructor(t,e,n){this.scene=t,this.audioManager=n,this.position=e.clone(),this.isActive=!0,this.rotationSpeed=.05,this.bounceSpeed=3,this.bounceHeight=.4,this.bounceTime=Math.random()*Math.PI*2,this.ammoAmount=15,this.baseHeight=.5,this.createAmmoPack()}createAmmoPack(){this.group=new nn,this.group.position.copy(this.position),this.group.position.y=this.baseHeight;const t=new xe(.4,.2,.3),e=new Lt({color:ve.AMMO});this.mesh=new bt(t,e),this.mesh.position.y=.1,this.group.add(this.mesh);const n=new Ui(.05,.05,.25,8),s=new Lt({color:16763904});for(let a=0;a<3;a++){const c=new bt(n,s);c.rotation.x=Math.PI/2,c.position.set(-.1+a*.1,.2,0),this.group.add(c)}this.scene.add(this.group),this.light=new ii(ve.AMMO,1.5,4),this.light.position.copy(this.position),this.light.position.y=.5+this.baseHeight,this.scene.add(this.light),this.pulseLight=new ii(16777215,.5,2),this.pulseLight.position.copy(this.position),this.pulseLight.position.y=.5+this.baseHeight,this.scene.add(this.pulseLight);const r=new Fi(.15,.35,4),o=new Lt({color:16777215,transparent:!0,opacity:.7});this.arrow=new bt(r,o),this.arrow.position.copy(this.position),this.arrow.position.y=1.2+this.baseHeight,this.scene.add(this.arrow)}update(t){if(!this.isActive)return;this.group.rotation.y+=this.rotationSpeed,this.bounceTime+=t*this.bounceSpeed;const e=Math.sin(this.bounceTime)*this.bounceHeight;this.group.position.y=this.baseHeight+e,this.light.position.copy(this.position),this.light.position.y=.5+this.baseHeight+e,this.pulseLight.position.copy(this.position),this.pulseLight.position.y=.5+this.baseHeight+e,this.arrow.position.copy(this.position),this.arrow.position.y=1.2+this.baseHeight+e*.5,this.arrow.rotation.y+=.03;const n=.5+Math.abs(Math.sin(this.bounceTime*3))*1;this.light.intensity=1.5+n*.5,this.pulseLight.intensity=n,this.arrow.material.opacity=.4+Math.abs(Math.sin(this.bounceTime*2))*.6}pickup(){return this.isActive?(this.isActive=!1,this.scene.remove(this.group),this.scene.remove(this.light),this.scene.remove(this.pulseLight),this.scene.remove(this.arrow),this.group.traverse(t=>{t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()}),this.arrow.geometry.dispose(),this.arrow.material.dispose(),this.audioManager.playPickup(),this.ammoAmount):0}getPosition(){return this.position}getBoundingRadius(){return .5}}class cE{constructor(t,e,n){this.scene=t,this.audioManager=n,this.position=e.clone(),this.isActive=!0,this.rotationSpeed=.04,this.bounceSpeed=2.5,this.bounceHeight=.25,this.bounceTime=Math.random()*Math.PI*2,this.energyAmount=Wt.ENERGY_AMOUNT,this.baseHeight=.5,this.createEnergyPack()}createEnergyPack(){const t=new xe(.35,.35,.35),e=new Lt({color:ve.ENERGY,transparent:!0,opacity:.85});this.mesh=new bt(t,e),this.mesh.position.copy(this.position),this.mesh.position.y=this.baseHeight+.175,this.scene.add(this.mesh),this.light=new ii(ve.ENERGY,.5,1.5),this.light.position.copy(this.position),this.light.position.y=this.baseHeight+.175,this.scene.add(this.light);const n=new Fi(.12,.3,4),s=new Lt({color:ve.ENERGY,transparent:!0,opacity:.7});this.arrow=new bt(n,s),this.arrow.position.copy(this.position),this.arrow.position.y=this.baseHeight+1,this.scene.add(this.arrow)}update(t){if(!this.isActive)return;this.mesh.rotation.y+=this.rotationSpeed,this.mesh.rotation.x+=this.rotationSpeed*.5,this.bounceTime+=t*this.bounceSpeed;const e=Math.sin(this.bounceTime)*this.bounceHeight;this.mesh.position.y=this.baseHeight+.175+e,this.light.position.copy(this.mesh.position),this.arrow&&(this.arrow.position.copy(this.position),this.arrow.position.y=this.baseHeight+1+e*.5,this.arrow.rotation.y+=.04,this.arrow.material.opacity=.4+Math.abs(Math.sin(this.bounceTime*2))*.6);const n=.5+Math.abs(Math.sin(this.bounceTime*2))*.3;this.light.intensity=n}pickup(){return this.isActive?(this.isActive=!1,this.scene.remove(this.mesh),this.scene.remove(this.light),this.arrow&&this.scene.remove(this.arrow),this.mesh.geometry.dispose(),this.mesh.material.dispose(),this.arrow&&(this.arrow.geometry.dispose(),this.arrow.material.dispose()),this.audioManager.playPickup(),this.energyAmount):0}getPosition(){return this.position}getBoundingRadius(){return .35}}class lE{constructor(t,e,n=1){this.scene=t,this.position=e.clone(),this.size=n,this.width=n,this.depth=n,this.height=n*.7,this.createRock()}createRock(){this.group=new nn,this.group.position.copy(this.position);const t=new Ys(this.size*.5,0),e=new Lt({color:8224125}),n=new bt(t,e);n.position.y=this.size*.25,n.rotation.x=Math.random()*Math.PI,n.rotation.y=Math.random()*Math.PI,n.rotation.z=Math.random()*Math.PI,this.group.add(n);for(let s=0;s<3;s++){const r=this.size*(.2+Math.random()*.3),o=new Ys(r,0),a=new Lt({color:6974058}),c=new bt(o,a),l=Math.random()*Math.PI*2,h=this.size*.4;c.position.set(Math.cos(l)*h,r*.5,Math.sin(l)*h),c.rotation.x=Math.random()*Math.PI,c.rotation.y=Math.random()*Math.PI,c.rotation.z=Math.random()*Math.PI,this.group.add(c)}this.scene.add(this.group)}getPosition(){return this.position}getBoundingBox(){const t=new gn().setFromObject(this.group),e=t.getCenter(new C),n=t.getSize(new C),s=.6;return new gn(new C(e.x-n.x*s/2,e.y-n.y*s/2,e.z-n.z*s/2),new C(e.x+n.x*s/2,e.y+n.y*s/2,e.z+n.z*s/2))}}class hE{constructor(t,e,n=1){this.scene=t,this.position=e.clone(),this.size=n,this.width=n,this.depth=n,this.height=n*.5,this.createFlowers()}createFlowers(){this.group=new nn,this.group.position.copy(this.position);const t=new Di(this.size*.6,8,6,0,Math.PI*2,0,Math.PI*.5),e=new Lt({color:2971436}),n=new bt(t,e);n.position.y=0,this.group.add(n);const s=[16758465,16738740,16753920,16776960,16777215],r=8+Math.floor(Math.random()*7);for(let o=0;o<r;o++){const a=.3+Math.random()*.3,c=new Ui(.02,.02,a,5),l=new Lt({color:3828537}),h=new bt(c,l),u=Math.random()*Math.PI*2,d=Math.random()*(this.size*.5);h.position.set(Math.cos(u)*d,a/2,Math.sin(u)*d);const m=s[Math.floor(Math.random()*s.length)],g=new Fi(.15,.1,6,1,!0),_=new Lt({color:m}),p=new bt(g,_);p.position.y=a/2,p.rotation.x=Math.PI;const f=new Di(.06,8,8),x=new Lt({color:16763904}),y=new bt(f,x);y.position.y=.05,p.add(y),h.add(p),h.rotation.x=(Math.random()-.5)*.2,h.rotation.z=(Math.random()-.5)*.2,this.group.add(h)}this.scene.add(this.group)}getPosition(){return this.position}getBoundingBox(){return new gn().setFromObject(this.group)}}class uE{constructor(t,e,n=1){this.scene=t,this.position=e.clone(),this.size=n,this.width=n,this.depth=n,this.height=n*.6,this.createStump()}createStump(){this.group=new nn,this.group.position.copy(this.position);const t=new Ui(this.size*.4,this.size*.5,this.size*.6,10),e=new Lt({color:9127187}),n=new bt(t,e);n.position.y=this.size*.3;const s=new Ai(this.size*.4,16),r=new Lt({color:9132587}),o=new bt(s,r);o.rotation.x=-Math.PI/2,o.position.y=this.size*.6;for(let a=0;a<5;a++){const c=new Di(this.size*.1,8,6,0,Math.PI*2,0,Math.PI*.5),l=new Lt({color:3828537}),h=new bt(c,l),u=Math.random()*Math.PI*2,d=Math.random()*this.size*.5;h.position.set(Math.cos(u)*this.size*.45,d,Math.sin(u)*this.size*.45),h.lookAt(new C(h.position.x*2,h.position.y,h.position.z*2)),this.group.add(h)}this.group.add(n),this.group.add(o),this.scene.add(this.group)}getPosition(){return this.position}getBoundingBox(){return new gn().setFromObject(this.group)}}class dE{constructor(t,e,n=1){this.scene=t,this.position=e.clone(),this.size=n,this.width=n,this.depth=n,this.height=n*.5,this.createSmallRocks()}createSmallRocks(){this.group=new nn,this.group.position.copy(this.position);const t=8+Math.floor(Math.random()*6),e=[8224125,6974058,5592405,9145227,10066329];for(let a=0;a<t;a++){const c=.3+Math.random()*.4;let l;const h=Math.floor(Math.random()*4);if(h===0)l=new Ys(this.size*.15*c,0);else if(h===1)l=new Gc(this.size*.14*c,0);else if(h===2)l=new Wc(this.size*.16*c,0);else{const p=this.size*.15*c,f=this.size*.12*c,x=this.size*.14*c;l=new xe(p,f,x)}const u=e[Math.floor(Math.random()*e.length)],d=new Lt({color:u}),m=new bt(l,d),g=Math.random()*Math.PI*2,_=Math.random()*(this.size*.5);m.position.set(Math.cos(g)*_,c*.08,Math.sin(g)*_),m.rotation.x=Math.random()*Math.PI*2,m.rotation.y=Math.random()*Math.PI*2,m.rotation.z=Math.random()*Math.PI*2,this.group.add(m)}const n=this.size*.6,s=new Ai(n,8),r=new Lt({color:5592405,side:He}),o=new bt(s,r);o.rotation.x=-Math.PI/2,o.position.y=.01,this.group.add(o),this.scene.add(this.group)}getPosition(){return this.position}getBoundingBox(){return new gn().setFromObject(this.group)}}class fE{constructor(t,e,n,s,r){this.scene=t,this.audioManager=s,this.decalManager=r,this.position=e.clone(),this.initialPosition=e.clone(),this.direction=n.clone().normalize(),this.speed=Wt.SPEEDS.GRENADE,this.isActive=!0,this.hasExploded=!1,this.explosionActive=!1,this.throwTime=performance.now(),this.explosionRadius=Wt.GRENADE_EXPLOSION_RADIUS,this.throwStrength=Wt.GRENADE_THROW_STRENGTH,this.explodeAfter=Wt.GRENADE_EXPLOSION_DELAY,this.gravityEffect=.01,this.verticalVelocity=this.throwStrength*.3,this.position.y+=.5,this.stepSize=.15,this.lastBounceTime=0,this.bounceThreshold=300,this.createGrenadeMesh()}createGrenadeMesh(){const e=new Ys(.3,0),n=new Jh({color:16724736,emissive:16720384,shininess:80});this.mesh=new bt(e,n),this.mesh.position.copy(this.position),this.mesh.position.y=Math.max(this.mesh.position.y,.3+.3),this.scene.add(this.mesh),this.light=new ii(16733440,2,5),this.light.position.copy(this.position),this.scene.add(this.light),this.createTrailEffect()}createTrailEffect(){this.trailParticles=[],this.maxTrailParticles=12,this.trailUpdateRate=50,this.lastTrailUpdate=performance.now();for(let t=0;t<this.maxTrailParticles;t++){const e=new bt(new Di(.15,4,4),new Lt({color:16733440,transparent:!0,opacity:.8,blending:wi}));e.visible=!1,e.userData={active:!1,age:0,maxAge:500,startOpacity:.8,startScale:.8,endScale:.2},this.scene.remove(e),this.scene.add(e),this.trailParticles.push(e)}}updateTrailEffect(){if(!this.isActive||this.hasExploded)return;const t=performance.now();if(t-this.lastTrailUpdate>this.trailUpdateRate){this.lastTrailUpdate=t;let n=null;for(const s of this.trailParticles)if(!s.userData.active){n=s;break}if(!n){let s=0;for(const r of this.trailParticles)r.userData.age>s&&(s=r.userData.age,n=r)}n&&(n.position.copy(this.mesh.position),n.visible=!0,n.userData.active=!0,n.userData.age=0,n.scale.setScalar(n.userData.startScale),n.material.opacity=n.userData.startOpacity)}const e=16;for(const n of this.trailParticles)if(n.userData.active){n.userData.age+=e;const s=n.userData.age/n.userData.maxAge;if(s>1)n.userData.active=!1,n.visible=!1;else{const r=1-s*s;n.material.opacity=n.userData.startOpacity*r;const o=n.userData.startScale+(n.userData.endScale-n.userData.startScale)*s;n.scale.setScalar(o)}}}update(t){if(!this.isActive||this.hasExploded)return;const e=performance.now(),n=(e-this.throwTime)/1e3,s=this.direction.clone().multiplyScalar(this.speed*this.stepSize);this.mesh.position.x+=s.x,this.mesh.position.z+=s.z,this.verticalVelocity-=this.gravityEffect,this.mesh.position.y+=this.verticalVelocity,this.mesh.position.y<.3&&(this.mesh.position.y=.3,Math.abs(this.verticalVelocity)>.01&&e-this.lastBounceTime>this.bounceThreshold&&(this.audioManager.playGrenadeBounce(),this.lastBounceTime=e),this.verticalVelocity=Math.abs(this.verticalVelocity)*.3,this.speed*=.9),this.light.position.copy(this.mesh.position);const r=this.explodeAfter-(e-this.throwTime),o=Math.max(1,10-r/200);this.light.intensity=2.5+Math.sin(n*o*Math.PI)*1.5,this.mesh.rotation.x+=t*5,this.mesh.rotation.y+=t*3,this.mesh.rotation.z+=t*4,this.updateTrailEffect(),this.position.copy(this.mesh.position),e-this.throwTime>this.explodeAfter&&this.explode();const a=Wt.ARENA_SIZE/2;(this.position.x<-30||this.position.x>a||this.position.z<-30||this.position.z>a)&&this.deactivate()}explode(){if(!(!this.isActive||this.hasExploded)){if(this.hasExploded=!0,this.explosionActive=!0,this.audioManager.playGrenadeExplosion(),this.decalManager){const t=this.position.clone();t.y=.02,this.decalManager.createGroundSplat(t,this.explosionRadius*1.2,10192652)}this.mesh&&(this.mesh.visible=!1),this.light&&(this.light.visible=!1),this.trailParticles&&this.trailParticles.forEach(t=>{t.visible=!1,t.userData.active=!1}),requestAnimationFrame(()=>{this.createExplosionEffect()}),setTimeout(()=>{this.explosionActive=!1,this.mesh&&this.mesh.parent&&(this.scene.remove(this.mesh),this.mesh.geometry.dispose(),this.mesh.material.dispose(),this.mesh=null),this.light&&this.light.parent&&(this.scene.remove(this.light),this.light=null)},400),setTimeout(()=>{this.fadeOutDebris()},3e3)}}createExplosionEffect(){const t=new ii(10192652,8,this.explosionRadius*2.5);t.position.copy(this.position),t.position.y=this.explosionRadius*.4,this.scene.add(t);const e=new Hc(.08,.4,12),n=new Lt({color:10192652,transparent:!0,opacity:1,side:He,blending:wi}),s=new bt(e,n);s.position.copy(this.position),s.position.y=.1,s.rotation.x=Math.PI/2,this.scene.add(s);const r=40,o=new an,a=new Float32Array(r*3),c=new Float32Array(r*3);for(let p=0;p<r;p++){const f=Math.random()*this.explosionRadius*.8,x=Math.random()*Math.PI*2,y=Math.random()*Math.PI;a[p*3]=this.position.x+f*Math.sin(y)*Math.cos(x),a[p*3+1]=this.position.y+f*Math.sin(y)*Math.sin(x),a[p*3+2]=this.position.z+f*Math.cos(y),c[p*3]=.6,c[p*3+1]=.5,c[p*3+2]=.05}o.setAttribute("position",new mn(a,3)),o.setAttribute("color",new mn(c,3));const l=new od({size:.5,vertexColors:!0,blending:wi,transparent:!0,sizeAttenuation:!0,depthWrite:!1}),h=new Kv(o,l);this.scene.add(h),requestAnimationFrame(()=>{this.createDebrisEffect()});let u=0;const d=400,m=16;let g=performance.now();const _=()=>{const p=performance.now(),f=p-g;g=p,u+=f>50?m:f;const x=u/d;if(x<1){t&&(t.intensity=8*(1-x*1.5));const y=1+x*(this.explosionRadius*8);if(s.scale.set(y,y,y),n.opacity=(1-x*1.2)*.7,u%32===0){for(let S=0;S<r;S++){const M=S*3,T=a[M]-this.position.x,w=a[M+1]-this.position.y,A=a[M+2]-this.position.z,N=Math.sqrt(T*T+w*w+A*A);if(N>.01){const v=.05*(1+x*2);a[M]+=T/N*v,a[M+1]+=w/N*v,a[M+2]+=A/N*v}}o.attributes.position.needsUpdate=!0}l.opacity=1-x,requestAnimationFrame(_)}else this.scene.remove(t),this.scene.remove(h),this.scene.remove(s),o.dispose(),l.dispose(),e.dispose(),n.dispose()};_()}createDebrisEffect(){this.debrisParticles=[];const e={box:new xe(1,.15,.8,1,1,1),circle:new Ai(1,4),plane:new us(1,.8,1,1),cone:new Fi(.5,.2,4,1),cylinder:new Ui(.5,.5,.1,4,1)},n=new Jh({color:10192652,emissive:10192652,emissiveIntensity:.1,shininess:1});for(let r=0;r<8;r++){const o=Math.random()*Math.PI*2,a=Math.random()*Math.PI,c=new C(Math.sin(a)*Math.cos(o)*1.2,Math.random()*.2+.1,Math.sin(a)*Math.sin(o)*1.2),l=Math.random()*.35+.05;let h;const u=Math.floor(Math.random()*5);u===0?h=e.box:u===1?h=e.circle:u===2?h=e.plane:u===3?h=e.cone:h=e.cylinder;const d=new bt(h,n);d.scale.set(l,l,l),u===1||u===2?d.rotation.set(Math.PI/2,Math.random()*Math.PI*2,0):d.rotation.set(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2),d.position.copy(this.position),this.scene.add(d),this.debrisParticles.push({mesh:d,direction:c,speed:Math.random()*.35+.15,rotationSpeed:{x:Math.random()*.2-.1,y:Math.random()*.2-.1,z:Math.random()*.2-.1},settled:!1})}const s=()=>{if(!this.isActive||!this.debrisParticles||this.debrisParticles.length===0)return;for(const o of this.debrisParticles){if(o.settled)continue;if(o.mesh.position.x+=o.direction.x*o.speed,o.mesh.position.y+=o.direction.y*o.speed,o.mesh.position.z+=o.direction.z*o.speed,o.direction.y-=.05,o.mesh.position.y<.02){o.mesh.position.y=.01;const c=.6;if(o.direction.y=0,o.direction.x*=c,o.direction.z*=c,o.speed<.1){o.settled=!0,o.mesh.position.y=.01;const l=new _n(Math.PI/2,Math.random()*Math.PI*2,0);o.mesh.setRotationFromEuler(l),o.rotationSpeed.x=0,o.rotationSpeed.y=0,o.rotationSpeed.z=0}}o.settled||(o.mesh.rotation.x+=o.rotationSpeed.x,o.mesh.rotation.y+=o.rotationSpeed.y,o.mesh.rotation.z+=o.rotationSpeed.z),o.speed*=.92;const a=.9;o.rotationSpeed.x*=a,o.rotationSpeed.y*=a,o.rotationSpeed.z*=a}this.debrisParticles.some(o=>!o.settled)&&requestAnimationFrame(s)};s()}fadeOutDebris(){if(!this.isActive||!this.debrisParticles||this.debrisParticles.length===0)return;let t=0;const e=2e3,n=()=>{t+=16;const s=t/e;s<1?(this.debrisParticles.forEach(r=>{r.mesh&&r.mesh.material&&(r.mesh.material.transparent=!0,r.mesh.material.opacity=1-s)}),requestAnimationFrame(n)):this.deactivate()};n()}deactivate(){this.isActive&&(this.isActive=!1,this.mesh&&this.mesh.parent&&(this.scene.remove(this.mesh),this.mesh.geometry.dispose(),this.mesh.material.dispose()),this.light&&this.light.parent&&this.scene.remove(this.light),this.trailParticles&&(this.trailParticles.forEach(t=>{t&&t.parent&&(this.scene.remove(t),t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose())}),this.trailParticles=[]),this.debrisParticles&&(this.debrisParticles.forEach(t=>{t.mesh&&t.mesh.parent&&(this.scene.remove(t.mesh),t.mesh.geometry&&t.mesh.geometry.dispose(),t.mesh.material&&t.mesh.material.dispose())}),this.debrisParticles=[]))}getPosition(){return this.position}getExplosionRadius(){return this.explosionRadius}hasExploded(){return this.hasExploded}isExplosionActive(){return this.explosionActive}}class pE{constructor(t){this.scene=t,this.maxBullets=100,this.activeBullets=[],this.decalManager=null,this.createInstancedMesh()}setDecalManager(t){this.decalManager=t}createInstancedMesh(){const t=new xe(Jt.BULLET,Jt.BULLET,Jt.BULLET),e=new Lt({color:ve.BULLET});this.instancedMesh=new Zv(t,e,this.maxBullets),this.instancedMesh.count=0,this.instancedMesh.instanceMatrix.setUsage(yp),this.instancedMesh.frustumCulled=!1,this.scene.add(this.instancedMesh),this.matrix=new te}createBullet(t,e,n=1){const s=new mf(this.scene,t,e,n,this.decalManager,!0);return this.activeBullets.length<this.maxBullets&&(s.instanceId=this.activeBullets.length,this.activeBullets.push(s),this.instancedMesh.count=this.activeBullets.length,this.updateBulletInstance(s)),s}updateBulletInstance(t){if(!(t.instanceId===void 0||t.instanceId>=this.maxBullets)){if(this.matrix.makeTranslation(t.position.x,t.position.y,t.position.z),t.direction.x!==0||t.direction.z!==0){const e=new te;t.position.clone().add(t.direction);const n=new rr;new C(0,1,0),n.setFromUnitVectors(new C(0,0,1),t.direction),e.makeRotationFromQuaternion(n),this.matrix.multiply(e)}this.instancedMesh.setMatrixAt(t.instanceId,this.matrix),this.instancedMesh.instanceMatrix.needsUpdate=!0}}removeBullet(t){const e=this.activeBullets.indexOf(t);if(e!==-1){this.activeBullets.splice(e,1),this.instancedMesh.count=this.activeBullets.length;for(let n=e;n<this.activeBullets.length;n++)this.activeBullets[n].instanceId=n,this.updateBulletInstance(this.activeBullets[n])}}update(t){const e=[];for(const n of this.activeBullets)n.update(t),n.isActive?this.updateBulletInstance(n):e.push(n);for(const n of e)this.removeBullet(n)}cleanUp(){this.scene.remove(this.instancedMesh),this.instancedMesh.geometry.dispose(),this.instancedMesh.material.dispose(),this.activeBullets=[]}}class mf{constructor(t,e,n,s=1,r,o=!1,a=ve.BULLET){if(this.scene=t,this.position=e.clone(),this.direction=n.clone().normalize(),this.isActive=!0,this.speed=Wt.SPEEDS.BULLET*s,this.initialPosition=e.clone(),this.maxTravelDistance=Wt.BULLET_MAX_DISTANCE,this.attachedToEnemy=!1,this.attachedEnemy=null,this.decalManager=r,this.useInstance=o,this.color=a,!o){const c=new xe(Jt.BULLET,Jt.BULLET,Jt.BULLET),l=new Lt({color:this.color});this.mesh=new bt(c,l),this.mesh.position.copy(this.position),(this.direction.x!==0||this.direction.z!==0)&&(this.mesh.rotation.y=Math.atan2(this.direction.x,this.direction.z)),this.scene.add(this.mesh)}}update(t){if(!this.isActive||this.attachedToEnemy)return;const e=this.speed*t;if(isNaN(e)||e===void 0){console.error("[OptimizedBullet.update] moveDistance is NaN or undefined!",{speed:this.speed,dt:t});return}const n=this.direction.clone().multiplyScalar(e);if(isNaN(n.x)||isNaN(n.y)||isNaN(n.z)){console.error("[OptimizedBullet.update] moveVector has NaN components!",{direction:this.direction,moveDistance:e});return}this.position.add(n),this.mesh&&this.mesh.position.copy(this.position),this.position.distanceTo(this.initialPosition)>=this.maxTravelDistance&&this.deactivate()}attachToEnemy(t){this.attachedToEnemy=!0,this.attachedEnemy=t,this.speed=0}createImpactDecal(t,e,n){this.decalManager&&(e&&Math.abs(e.y)>.9?this.decalManager.createGroundSplat(t,.7,this.color):this.decalManager.createSurfaceDecal(t,e,n,this.color)),this.deactivate()}deactivate(){this.isActive&&(this.isActive=!1,!this.useInstance&&this.mesh&&(this.scene.remove(this.mesh),this.mesh.geometry.dispose(),this.mesh.material.dispose(),this.mesh=null))}getPosition(){return this.position}getBoundingRadius(){return Jt.BULLET*3.5}}class mE{constructor(){this.obstacles=[],this.enemies=[],this.bullets=[],this.grenades=[],this.ammoPickups=[],this.energyPickups=[],this.grenadePickups=[],this.enemyBullets=[],this.player=null,this.bulletManager=null,this.lastValidPlayerPosition=new C,this.prevPlayerPosition=new C}setPlayer(t){this.player=t,t&&(this.lastValidPlayerPosition.copy(t.getPosition()),this.prevPlayerPosition.copy(t.getPosition()))}setBulletManager(t){this.bulletManager=t}addObstacle(t){this.obstacles.push(t)}addEnemy(t){this.enemies.push(t)}addBullet(t){this.bullets.push(t)}addGrenade(t){this.grenades.push(t)}addAmmoPack(t){this.ammoPickups.push(t)}addEnergyPack(t){this.energyPickups.push(t)}addGrenadePack(t){this.grenadePickups.push(t)}addEnemyBullet(t){this.enemyBullets.push(t)}update(){this.player&&this.prevPlayerPosition.copy(this.player.getPosition()),this.checkBulletCollisions(),this.checkGrenadeCollisions(),this.checkPlayerCollisions(),this.checkEnemyCollisions(),this.checkEnemyBulletCollisions(),this.cleanupInactiveObjects()}isPositionInsideObstacle(t,e){for(const n of this.obstacles){if(n.constructor.name==="Obstacle")continue;const s=n.getBoundingBox(),r=new un(t,e);if(s.intersectsSphere(r))return!0}return!1}checkPlayerCollisions(){if(!this.player)return;const t=this.player.getPosition(),e=this.player.getBoundingRadius();this.ammoPickups.forEach(s=>{if(!s.isActive)return;if(t.distanceTo(s.getPosition())<e+s.getBoundingRadius()){const o=s.pickup();this.player.addAmmo(o)}}),this.grenadePickups.forEach(s=>{if(!s.isActive)return;if(t.distanceTo(s.getPosition())<e+s.getBoundingRadius()&&this.player.grenades<this.player.maxGrenades){const o=s.pickup();this.player.addGrenades(o)}}),this.energyPickups.forEach(s=>{if(!s.isActive)return;if(t.distanceTo(s.getPosition())<e+s.getBoundingRadius()){const o=s.pickup();this.player.addEnergy(o)}});let n=[];if(this.obstacles.forEach(s=>{if(s.constructor.name==="Obstacle")return;const r=s.getBoundingBox(),o=new un(t,e);r.intersectsSphere(o)&&n.push(s)}),n.length===0){this.lastValidPlayerPosition.copy(t),this.player.movementPenalty=1;return}if(n.length>0){const s=new C;if(n.forEach(r=>{const o=r.getPosition(),a=new C().subVectors(t,o).normalize();s.add(a)}),s.lengthSq()>0){s.normalize();let r=0;if(n.forEach(o=>{const a=o.getBoundingBox();new un(t,e);const c=o.getPosition(),l=t.distanceTo(c),h=o.constructor.getBoundingRadius?o.constructor.getBoundingRadius():Math.max(a.max.x-a.min.x,a.max.z-a.min.z)/2,u=e+h-l;u>r&&(r=u)}),r>e)this.player.group.position.copy(this.prevPlayerPosition),this.player.position.copy(this.prevPlayerPosition);else{const o=Math.min(r*1.1,.3),a=s.clone().multiplyScalar(o);this.player.group.position.add(a),this.player.position.add(a),this.player.movementPenalty=.8}}}}checkEnemyCollisions(){this.enemies.forEach(t=>{if(!t.isActive)return;const e=t.getPosition(),n=t.getBoundingRadius(),s=this.player?this.player.getPosition():null;t.prevPosition||(t.prevPosition=e.clone()),t.directionChangeCooldown===void 0&&(t.directionChangeCooldown=0,t.lastMajorDirectionChange=0,t.directionSmoothingFactor=.1);let r=[],o=new C;for(const a of this.obstacles){if(a.constructor.name==="Obstacle")continue;const c=a.getBoundingBox();let l=1.8;t.speed&&(l+=t.speed*.1),t.type==="THIN"&&(l+=.3);const h=new un(e,n*l);if(c.intersectsSphere(h)){r.push(a);const u=a.getPosition(),d=new C().subVectors(e,u).normalize(),m=e.distanceTo(u),g=1.5/Math.max(.1,m);if(o.add(d.multiplyScalar(g)),s){const _=new C().subVectors(e,u),p=new C().subVectors(s,u);if(new C().crossVectors(_,p).length()>.5){const x=new C;(a.id||Math.floor(u.x*1e3)+Math.floor(u.z*1e3))%2===0?x.set(-d.z,0,d.x):x.set(d.z,0,-d.x);const M=2.5/Math.max(.2,m);o.add(x.multiplyScalar(M))}}}}if(r.length>0){if(o.lengthSq()>0){o.normalize();let a=!1;for(const c of r){const l=c.getBoundingBox(),h=new un(e,n);if(l.intersectsSphere(h)){a=!0;break}}if(a){const c=n*.7;if(t.position.add(o.clone().multiplyScalar(c)),t.mesh&&t.mesh.position.copy(t.position),t.avoidanceHistory?(t.avoidanceHistory.lerp(o,.5),t.avoidanceHistory.normalize()):t.avoidanceHistory=o.clone(),t.direction)if(s){const l=new C().subVectors(s,e).normalize(),h=o.clone().multiplyScalar(.9).add(l.multiplyScalar(.1)).normalize();t.direction.lerp(h,.7),t.direction.normalize()}else t.direction.lerp(o,.7),t.direction.normalize();t.lastMajorDirectionChange=Date.now(),t.directionChangeCooldown=500}else{const c=Date.now();if(c-t.lastMajorDirectionChange>t.directionChangeCooldown&&(t.avoidanceHistory||(t.avoidanceHistory=new C),t.avoidanceHistory.lerp(o,.2),t.avoidanceHistory.normalize(),t.direction)){const h=t.direction.clone();let u;if(s){const f=new C().subVectors(s,e).normalize();u=new C().addScaledVector(f,.2).addScaledVector(o,.4).addScaledVector(t.avoidanceHistory,.4).normalize()}else u=new C().addScaledVector(o,.5).addScaledVector(t.avoidanceHistory,.5).normalize();const d=this.findClosestObstacle(e,r),m=d?e.distanceTo(d.getPosition()):999,g=t.directionSmoothingFactor,_=Math.min(1,1-m/(n*5)),p=g+_*.2;t.direction.lerp(u,p),t.direction.normalize(),h.angleTo(t.direction)>.3&&(t.lastMajorDirectionChange=c,t.directionChangeCooldown=300)}}}}else t.avoidanceHistory&&(t.avoidanceHistory.multiplyScalar(.9),t.avoidanceHistory.lengthSq()<.01&&t.avoidanceHistory.set(0,0,0));this.enemies.forEach(a=>{if(a===t||!a.isActive)return;const c=a.getPosition(),l=a.getBoundingRadius(),h=n+l,u=e.distanceTo(c);if(u<h){const d=new C().subVectors(e,c).normalize(),g=(h-u)*.5;if(t.position.add(d.multiplyScalar(g)),t.mesh&&t.mesh.position.copy(t.position),t.direction){const _=Math.random()*Math.PI*.5-Math.PI*.25,p=new C(d.x*Math.cos(_)-d.z*Math.sin(_),0,d.x*Math.sin(_)+d.z*Math.cos(_));t.direction.lerp(p,.4),t.direction.normalize()}}}),t.prevPosition.copy(e)})}checkBulletCollisions(){let t=[...this.bullets];this.bulletManager&&this.bulletManager.activeBullets&&(t=t.concat(this.bulletManager.activeBullets)),t.forEach(e=>{if(!e.isActive||e.attachedToEnemy)return;const n=e.getPosition(),s=e.getBoundingRadius();for(const r of this.obstacles){if(r.constructor.name==="Obstacle")continue;const o=r.getBoundingBox(),a=new un(n,s);if(o.intersectsSphere(a)){if(e.constructor.name==="OptimizedBullet"&&typeof e.createImpactDecal=="function"){const c=r.getPosition(),l=new C().subVectors(n,c).normalize();e.createImpactDecal(n,l,r)}else e.deactivate();break}}if(e.isActive&&n.y<=s&&e.direction.y<=0){const r=e.initialPosition.y-n.y,o=e.position.distanceTo(e.initialPosition),a=Wt.BULLET_MAX_DISTANCE*.1;if(r>.1||o>a){if(e.constructor.name==="OptimizedBullet"&&typeof e.createImpactDecal=="function"){const c=new C(0,1,0),l=new C(n.x,.01,n.z);e.createImpactDecal(l,c,null)}else e.deactivate();return}}if(e.isActive)for(const r of this.enemies){if(!r.isActive||r.isDying)continue;const o=r.getPosition(),a=r.getBoundingRadius();if(n.distanceTo(o)<s+a){r.attachBullet(e)>=3&&r.takeDamage(0,!0);break}}})}checkGrenadeCollisions(){this.grenades.forEach(t=>{if(!t.isActive||!t.hasExploded||typeof t.isExplosionActive=="function"&&!t.isExplosionActive())return;const e=t.getPosition(),n=t.getExplosionRadius();if(this.enemies.forEach(s=>{if(!s.isActive)return;const r=s.getPosition(),o=e.distanceTo(r);if(o<n){const a=1-o/n,c=Math.ceil(10*a);if(s.takeDamage(c),s.isActive){const l=new C().subVectors(r,e).normalize(),h=n-o;s.mesh&&(s.mesh.position.add(l.multiplyScalar(h*.5)),s.position.copy(s.mesh.position))}}}),this.player){const s=this.player.getPosition(),r=e.distanceTo(s);if(r<n){const o=.5*(1-r/n),a=Math.ceil(30*o);this.player.takeDamage(a)}}})}checkEnemyBulletCollisions(){if(!this.player)return;const t=this.player.getPosition(),e=this.player.getBoundingRadius();this.enemyBullets.forEach(n=>{if(!n.isActive)return;const s=n.getPosition(),r=n.getBoundingRadius();if(s.distanceTo(t)<r+e){if(n.constructor.name==="OptimizedBullet"&&typeof n.createImpactDecal=="function"){const a=new C().subVectors(s,t).normalize();a.multiplyScalar(e*.9).add(t),n.createImpactDecal(a,a.clone().sub(t).normalize(),null)}else n.deactivate();this.player.takeDamage(20);return}for(const a of this.obstacles){if(a.constructor.name==="Obstacle")continue;const c=a.getBoundingBox(),l=new un(s,r);if(c.intersectsSphere(l)){if(n.constructor.name==="OptimizedBullet"&&typeof n.createImpactDecal=="function"){const h=a.getPosition(),u=new C().subVectors(s,h).normalize();n.createImpactDecal(s,u,a)}else n.deactivate();return}}if(n.isActive&&s.y<=r&&n.direction.y<=0){const a=n.position.distanceTo(n.initialPosition),c=Wt.BULLET_MAX_DISTANCE*.1;if(a>c){if(n.constructor.name==="OptimizedBullet"&&typeof n.createImpactDecal=="function"){const l=new C(0,1,0),h=new C(s.x,.01,s.z);n.createImpactDecal(h,l,null)}else n.deactivate();return}}if(n.initialPosition&&n.maxTravelDistance&&s.distanceTo(n.initialPosition)>=n.maxTravelDistance)if(n.constructor.name==="OptimizedBullet"&&typeof n.createImpactDecal=="function"){const c=new C(0,1,0),l=new C(s.x,.01,s.z);n.createImpactDecal(l,c,null)}else n.deactivate()})}cleanupInactiveObjects(){this.bullets=this.bullets.filter(t=>t.isActive),this.grenades=this.grenades.filter(t=>t.isActive),this.enemies=this.enemies.filter(t=>t.isActive),this.ammoPickups=this.ammoPickups.filter(t=>t.isActive),this.energyPickups=this.energyPickups.filter(t=>t.isActive),this.grenadePickups=this.grenadePickups.filter(t=>t.isActive),this.enemyBullets=this.enemyBullets.filter(t=>t.isActive)}checkEnemyObstacleCollisions(t){return!1}findClosestObstacle(t,e){let n=1/0,s=null;return e.forEach(r=>{const o=r.getPosition(),a=t.distanceTo(o);a<n&&(n=a,s=r)}),s}}class gE{constructor(t,e,n="REGULAR",s=null){this.scene=t,this.position=e.clone(),this.type=n,this.isActive=!0,this.velocity=new C(0,0,0),this.speed=this.getSpeedByType(),this.health=this.getHealthByType(),this.jumpTime=Math.random()*10,this.spawnManager=s,this.attachedBullets=[],this.isDying=!1,this.deathTime=0,this.hitEffects=[],this.audioManager=s.audioManager,this.lastShotTime=0,this.shootingCooldown=this.getShootingCooldownByType(),this.shootingRange=15,this.createEnemyMesh()}getHealthByType(){switch(this.type){case"CHUBBY":return 3;case"THIN":return 1;default:return 2}}getSizeByType(){switch(this.type){case"CHUBBY":return Jt.ENEMIES.CHUBBY;case"THIN":return Jt.ENEMIES.THIN;default:return Jt.ENEMIES.REGULAR}}getColorByType(){switch(this.type){case"CHUBBY":return ve.ENEMY.CHUBBY;case"THIN":return ve.ENEMY.THIN;default:return ve.ENEMY.REGULAR}}getSpeedByType(){switch(this.type){case"CHUBBY":return Wt.SPEEDS.ENEMY.CHUBBY;case"THIN":return Wt.SPEEDS.ENEMY.THIN;default:return Wt.SPEEDS.ENEMY.REGULAR}}getShootingCooldownByType(){switch(this.type){case"CHUBBY":return 5e3;case"THIN":return 4e3;default:return 3e3}}createEnemyMesh(){this.getSizeByType();const t=new xe(.5,1,.5),e=new Lt({color:this.getColorByType()});switch(this.mesh=new bt(t,e),this.mesh.position.copy(this.position),this.type){case"CHUBBY":this.mesh.scale.set(1.5,.8,1.5);break;case"THIN":this.mesh.scale.set(.6,1.6,.6);break;default:const c=.8+Math.random()*.4,l=.9+Math.random()*.4;this.mesh.scale.set(c,l,c)}const n=Jt.GUN.WIDTH*.8,s=n,r=Jt.GUN.DEPTH*2.5,o=new xe(n,s,r),a=new Lt({color:ve.GUN});this.gun=new bt(o,a),this.gun.position.set(0,.1,Jt.PLAYER/2+r/2),this.mesh.add(this.gun),this.mesh.position.y=.5,this.scene.add(this.mesh)}update(t,e){if(!this.isActive)return;if(this.isDying){this.updateDeathAnimation(t);return}if(!e){console.error("Enemy update called without player position!");return}const n=new C().subVectors(e,this.position).normalize(),s=this.position.distanceTo(e);s<=this.shootingRange&&this.tryShoot(n);const r=this.getOptimalShootingDistance();let o=this.getMovementBehavior(n,e,s,r);this.velocity.copy(o).multiplyScalar(this.speed*t),this.mesh.position.add(this.velocity),this.position.x=this.mesh.position.x,this.position.z=this.mesh.position.z,this.updateAnimation(t);const a=Math.atan2(e.x-this.position.x,e.z-this.position.z);this.mesh.rotation.y=a,this.updateAttachedBullets()}getOptimalShootingDistance(){switch(this.type){case"CHUBBY":return 3;case"THIN":return 3;default:return 3}}getMovementBehavior(t,e,n,s){let r;switch(n<s-1?r=t.clone().negate():n>s+3?r=t.clone():(r=new C(t.z,0,-t.x),Math.random()<.01&&r.negate()),this.type){case"CHUBBY":r.add(new C((Math.random()-.5)*.05,0,(Math.random()-.5)*.05));break;case"THIN":if(r.add(new C((Math.random()-.5)*.15,0,(Math.random()-.5)*.15)),n>s-2&&n<s+2){const o=new C(t.z,0,-t.x);r.add(o.multiplyScalar(.5))}break;default:r.add(new C((Math.random()-.5)*.1,0,(Math.random()-.5)*.1))}return r.normalize()}updateAnimation(t){const e=this.getSizeByType(),n=Math.min(1,this.velocity.length()/(this.speed*t)),s=Wt.STEP_FREQUENCY/3*(.2+n*.8);this.jumpTime+=t*s;const r=Math.sin(this.jumpTime*Math.PI),a=Math.abs(r)*.25*n;this.mesh.position.y=e/2+a;const l=.3*n;if(this.mesh.scale.y=(this.type==="THIN"?1.6:this.type==="CHUBBY"?.8:1)*(1-a*l),this.mesh.scale.x=(this.type==="THIN"?.6:this.type==="CHUBBY"?1.5:1)*(1+a*l*.5),this.mesh.scale.z=(this.type==="THIN"?.6:this.type==="CHUBBY"?1.5:1)*(1+a*l*.5),this.velocity.x!==0||this.velocity.z!==0){const h=this.velocity.clone().normalize(),u=.15*n;this.mesh.rotation.z=-h.x*u,this.mesh.rotation.x=h.z*u}}updateAttachedBullets(){this.attachedBullets.forEach(t=>{t.isDecal||t.bullet&&t.bullet.mesh&&(t.bullet.mesh.position.copy(this.mesh.position).add(t.offset),t.bullet.mesh.rotation.y=this.mesh.rotation.y)})}attachBullet(t){const e=this.getSizeByType(),n=this.mesh.scale.x,s=this.mesh.scale.y,r=this.mesh.scale.z,o=new C((Math.random()-.5)*e*n*.8,(Math.random()-.5)*e*s*.8+e*s*.5,(Math.random()-.5)*e*r*.8);if(t.constructor.name==="OptimizedBullet"&&t.decalManager){const a=this.mesh.position.clone().add(o),c=o.clone().normalize();t.createImpactDecal(a,c,this),this.attachedBullets.push({isDecal:!0,offset:o})}else{this.attachedBullets.push({bullet:t,offset:o});const a=new C(1.5,1.5,1.5);t.mesh.rotation.set(Math.random()*Math.PI*.5,Math.random()*Math.PI*2,Math.random()*Math.PI*.5),t.mesh.scale.copy(a),t.mesh.position.copy(this.mesh.position).add(o),t.attachToEnemy(this)}return this.createBulletImpactEffect(o),this.takeDamage(1,!1),this.attachedBullets.length}createBulletImpactEffect(t){const e=new Di(.4,8,8),n=new Lt({color:ve.BULLET,transparent:!0,opacity:1,blending:wi}),s=new bt(e,n);s.position.copy(this.mesh.position).add(t),this.scene.add(s);const r=new ii(ve.BULLET,2,1.5);r.position.copy(s.position),this.scene.add(r);const o=Date.now();this.hitEffects.push({splash:s,light:r,startTime:o});const a=()=>{const c=(Date.now()-o)/1e3;if(c>.4||!this.isActive){this.scene.remove(s),this.scene.remove(r),e.dispose(),n.dispose(),this.hitEffects=this.hitEffects.filter(h=>h.splash!==s);return}const l=1+c*4;s.scale.set(l,l*.3,l),n.opacity=1-c/.4,r.intensity=(1-c/.4)*2,requestAnimationFrame(a)};a()}takeDamage(t,e=!0){if(this.health-=t,this.mesh.scale.set(1.3,.7,1.3),this.mesh.material){const n=this.getColorByType();this.mesh.material.color.setHex(16777215),setTimeout(()=>{this.isActive&&this.mesh.material&&this.mesh.material.color.setHex(n)},120)}setTimeout(()=>{if(this.isActive&&!this.isDying){const n=this.type==="THIN"?.6:this.type==="CHUBBY"?1.5:1,s=this.type==="THIN"?1.6:this.type==="CHUBBY"?.8:1;this.mesh.scale.set(n,s,n)}},100),e&&this.health<=0&&(this.attachedBullets.length>=3?this.startDyingAnimation():this.die())}startDyingAnimation(){this.isDying=!0,this.deathTime=0,this.audioManager&&this.audioManager.playEnemyDeath(),this.velocity.set(0,0,0),this.mesh.position.y+=.7,this.createPaintExplosion()}createPaintExplosion(){const e=[],n=this.getSizeByType()*.3;for(let r=0;r<20;r++){const o=new xe(n,n,n),a=new Lt({color:ve.BULLET,transparent:!0,opacity:.9}),c=new bt(o,a);c.position.copy(this.mesh.position);const l=Math.random()*Math.PI*2,h=Math.random()*1,u=.05+Math.random()*.1;c.userData={velocity:new C(Math.cos(l)*u,h*u*2,Math.sin(l)*u),gravity:-.005,lifetime:1,age:0},this.scene.add(c),e.push(c)}const s=()=>{if(!this.isDying||e.length===0){e.forEach(r=>{this.scene.remove(r),r.geometry.dispose(),r.material.dispose()});return}e.forEach((r,o)=>{if(r.userData.age+=.016,r.userData.age>=r.userData.lifetime){this.scene.remove(r),r.geometry.dispose(),r.material.dispose(),e.splice(o,1);return}r.userData.velocity.y+=r.userData.gravity,r.position.add(r.userData.velocity);const a=1-r.userData.age/r.userData.lifetime;r.material.opacity=a*.9,r.rotation.x+=.05,r.rotation.y+=.05}),e.length>0&&requestAnimationFrame(s)};s()}updateDeathAnimation(t){if(this.deathTime+=t,this.deathTime<1.5){const e=this.deathTime/1.5,n=this.getSizeByType();if(e<.4){const o=e/.4;this.mesh.position.y=n/2+.7+o*.4,this.mesh.rotation.x=o*Math.PI/4,this.mesh.rotation.z=o*(Math.random()>.5?.2:-.2)}else{const o=(e-.4)/.6;this.mesh.rotation.x=Math.PI/4+o*(Math.PI/2-Math.PI/4);let a=n;this.type==="THIN"?a*=1.6:this.type==="CHUBBY"&&(a*=.8);const c=1-Math.sin(this.mesh.rotation.x),l=.35,h=a*.3;this.mesh.position.y=Math.max(l,a*c*.5+h);const u=a*.5*Math.cos(Math.PI/2-this.mesh.rotation.x);this.mesh.position.z+=o*u*.15}const s=this.type==="THIN"?.6:this.type==="CHUBBY"?1.5:1,r=this.type==="THIN"?1.6:this.type==="CHUBBY"?.8:1;if(e>.4){const o=(e-.4)/.6;this.mesh.scale.x=s*(1+o*.4),this.mesh.scale.y=r*(1-o*.8),this.mesh.scale.z=s*(1+o*.2)}if(e>.6){const o=(e-.6)/.4;this.mesh.material&&(this.mesh.material.transparent=!0,this.mesh.material.opacity=1-o)}this.updateAttachedBullets()}else this.die()}die(){if(this.isActive){if(this.isActive=!1,this.spawnManager&&(this.spawnManager.enemyDefeated(),this.spawnManager.decalManager)){const t=new C(this.position.x,.02,this.position.z),e=this.getColorByType(),n=this.getSizeByType()*1.2;this.spawnManager.decalManager.createGroundSplat(t,n,e)}this.attachedBullets.forEach(t=>{t.bullet&&t.bullet.deactivate()}),this.scene.remove(this.mesh),this.mesh.geometry.dispose(),this.mesh.material.dispose()}}getPosition(){return this.position}getBoundingRadius(){const t=this.getSizeByType();let e;switch(this.type){case"CHUBBY":e=1.5;break;case"THIN":e=1.5;break;default:e=1}return t*e*1}tryShoot(t){const e=Date.now();if(e-this.lastShotTime<this.shootingCooldown)return;const n=this.spawnManager&&this.spawnManager.player?this.spawnManager.player.getPosition():null;if(n){const s=this.position.distanceTo(n),r=this.getOptimalShootingDistance();if(s<r*.5||s>this.shootingRange)return}Math.random()<.5&&(this.shoot(t),this.lastShotTime=e)}shoot(t){const e=this.position.clone();e.y=Jt.PLAYER/2;const n=t.clone().multiplyScalar(Jt.PLAYER+.3);e.add(n);let s=t.clone();if(this.spawnManager&&this.spawnManager.player){const c=this.spawnManager.player,l=c.getPosition(),h=c.velocity;if(h&&h.lengthSq()>.1){const d=this.position.distanceTo(l),m=Wt.SPEEDS.BULLET,g=d/m,_=l.clone().add(h.clone().multiplyScalar(g*.5));s=new C().subVectors(_,e).normalize()}let u=0;switch(this.type){case"CHUBBY":u=.12;break;case"THIN":u=.05;break;default:u=.08}s.x+=(Math.random()-.5)*u,s.z+=(Math.random()-.5)*u,s.normalize()}let r=.5;switch(this.type){case"CHUBBY":r=.4;break;case"THIN":r=.65;break}const o=this.getColorByType(),a=new mf(this.scene,e,s,r,this.spawnManager.decalManager,!1,o);this.spawnManager&&this.spawnManager.addEnemyBullet(a),this.createMuzzleFlash()}createMuzzleFlash(){const t=this.position.clone();t.y=Jt.PLAYER/2;const n=new C(Math.sin(this.mesh.rotation.y),0,Math.cos(this.mesh.rotation.y)).clone().multiplyScalar(Jt.PLAYER+.3);t.add(n);const s=new xe(.3,.3,.3),r=new Lt({color:16776960,transparent:!0,opacity:1,blending:wi}),o=new bt(s,r);o.position.copy(t),o.rotation.y=this.mesh.rotation.y,this.scene.add(o);const a=new ii(16776960,3,2);a.position.copy(t),this.scene.add(a);let c=1,l=1;const h=()=>{if(c-=.2,l+=.2,c<=0){this.scene.remove(o),this.scene.remove(a),r.dispose(),s.dispose();return}r.opacity=c,o.scale.set(l,l,l),a.intensity=c*3,requestAnimationFrame(h)};h()}}class _E{constructor(t,e,n,s,r){this.scene=t,this.player=e,this.collisionSystem=n,this.audioManager=s,this.decalManager=r,this.enemies=[],this.obstacles=[],this.lastSpawnTime=0,this.spawnDelay=Wt.SPAWN_DELAY,this.enemyCount=0,this.maxEnemies=8,this.enemyBullets=[],this.ammoPickups=[],this.energyPickups=[],this.grenadePickups=[],this.waveNumber=1,this.activeEnemies=[],this.enemySpeedMultiplier=1,this.enemyFireRateMultiplier=1,this.enemiesSpawnedThisWave=0,this.waveComplete=!1}setObstacles(t){this.obstacles=t}update(t,e){const n=Date.now();if(t&&t.isOutOfAmmo()){const s=this.ammoPickups.filter(r=>r.isActive).length;s===0?(this.spawnAmmoPack(),this.showAmmoHint()):s<3&&Math.random()<.05&&this.spawnAmmoPack()}if(n-this.lastSpawnTime>this.spawnDelay&&this.enemiesSpawnedThisWave<this.maxEnemies&&!this.waveComplete&&(this.spawnEnemy(),this.lastSpawnTime=n,this.enemiesSpawnedThisWave++,Math.random()<.5)){const s=Math.random();s<.4?this.spawnAmmoPack():s<.8?this.spawnEnergyPack():this.spawnGrenadePack()}this.ammoPickups.filter(s=>s.isActive).length===0&&Math.random()<.01&&this.spawnAmmoPack(),this.grenadePickups.filter(s=>s.isActive).length===0&&Math.random()<.01&&this.spawnGrenadePack(),this.updateEnemies(e),this.updateEnemyBullets(e),this.enemiesSpawnedThisWave>=this.maxEnemies&&this.activeEnemies.length===0&&!this.waveComplete&&(this.waveComplete=!0,setTimeout(()=>{this.startNextWave()},2e3))}updateEnemies(t){this.activeEnemies=this.activeEnemies.filter(e=>e.isActive?(e.update(t,this.player.getPosition()),!0):!1)}updateEnemyBullets(t){this.enemyBullets=this.enemyBullets.filter(e=>e.isActive?(e.update(t),!0):!1)}addEnemyBullet(t){this.enemyBullets.push(t),this.collisionSystem.addEnemyBullet(t)}spawnEnemy(){const t=this.getRandomSpawnPosition(this.player),e=Math.random();let n="REGULAR";e<.2?n="CHUBBY":e<.4&&(n="THIN");const s=new gE(this.scene,t,n,this);return s.speed&&(s.speed*=this.enemySpeedMultiplier),s.shootingCooldown&&(s.shootingCooldown/=this.enemyFireRateMultiplier),this.collisionSystem.addEnemy(s),this.enemyCount++,this.activeEnemies.push(s),s}spawnAmmoPack(){const t=Wt.ARENA_SIZE/2-1,e=Math.random()*Wt.ARENA_SIZE-t,n=Math.random()*Wt.ARENA_SIZE-t,s=new C(e,0,n);for(const o of this.obstacles){const a=o.getPosition();if(s.distanceTo(a)<2)return this.spawnAmmoPack()}const r=new aE(this.scene,s,this.audioManager);return this.ammoPickups.push(r),this.collisionSystem.addAmmoPack(r),r}spawnEnergyPack(){const t=Wt.ARENA_SIZE/2-1,e=Math.random()*Wt.ARENA_SIZE-t,n=Math.random()*Wt.ARENA_SIZE-t,s=new C(e,0,n);for(const o of this.obstacles){const a=o.getPosition();if(s.distanceTo(a)<2)return this.spawnEnergyPack()}const r=new cE(this.scene,s,this.audioManager);return this.energyPickups.push(r),this.collisionSystem.addEnergyPack(r),r}spawnGrenadePack(){const t=Wt.ARENA_SIZE/2-1,e=Math.random()*Wt.ARENA_SIZE-t,n=Math.random()*Wt.ARENA_SIZE-t,s=new C(e,0,n);for(const o of this.obstacles){const a=o.getPosition();if(s.distanceTo(a)<2)return this.spawnGrenadePack()}const r=new vE(this.scene,s,this.audioManager);return this.grenadePickups.push(r),this.collisionSystem.addGrenadePack&&this.collisionSystem.addGrenadePack(r),r}getRandomSpawnPosition(t){const e=Wt.ARENA_SIZE/2;let n,s;switch(Math.floor(Math.random()*4)){case 0:n=Math.random()*Wt.ARENA_SIZE-e,s=-30;break;case 1:n=e,s=Math.random()*Wt.ARENA_SIZE-e;break;case 2:n=Math.random()*Wt.ARENA_SIZE-e,s=e;break;case 3:n=-30,s=Math.random()*Wt.ARENA_SIZE-e;break}const o=new C(n,0,s),a=t.getPosition();return o.distanceTo(a)<5?this.getRandomSpawnPosition(t):o}enemyDefeated(){this.enemyCount--}startNextWave(){this.waveNumber++;const t=8;this.maxEnemies=Math.ceil(t*Math.pow(1.2,this.waveNumber-1)),this.enemySpeedMultiplier=1+(this.waveNumber-1)*.1,this.enemyFireRateMultiplier=1+(this.waveNumber-1)*.15,this.spawnDelay=Math.max(300,Wt.SPAWN_DELAY-this.waveNumber*100),this.enemiesSpawnedThisWave=0,this.waveComplete=!1,this.showWaveMessage(),console.log(`Wave ${this.waveNumber}: ${this.maxEnemies} enemies, speed x${this.enemySpeedMultiplier.toFixed(1)}, fire rate x${this.enemyFireRateMultiplier.toFixed(1)}`)}showWaveMessage(){const t=document.createElement("div");t.style.position="absolute",t.style.top="40%",t.style.left="50%",t.style.transform="translate(-50%, -50%)",t.style.color="red",t.style.fontSize="48px",t.style.fontFamily='"Press Start 2P", cursive',t.style.textShadow="2px 2px 4px black",t.style.zIndex="1000",t.style.fontWeight="bold",t.textContent=`WAVE ${this.waveNumber}`,document.body.appendChild(t);const e=document.createElement("div");e.style.position="absolute",e.style.top="47%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.color="orange",e.style.fontSize="24px",e.style.fontFamily='"Press Start 2P", cursive',e.style.textShadow="2px 2px 4px black",e.style.zIndex="1000",e.style.fontWeight="bold",e.textContent=`${this.maxEnemies} enemies - Speed x${this.enemySpeedMultiplier.toFixed(1)} - Fire Rate x${this.enemyFireRateMultiplier.toFixed(1)}`,document.body.appendChild(e),setTimeout(()=>{document.body.removeChild(t),document.body.removeChild(e)},2500)}showAmmoHint(){const t=document.createElement("div");t.style.position="absolute",t.style.top="30%",t.style.left="50%",t.style.transform="translate(-50%, -50%)",t.style.color="#0088ff",t.style.fontSize="24px",t.style.fontFamily='"Press Start 2P", cursive',t.style.textShadow="2px 2px 4px black",t.style.zIndex="1000",t.style.fontWeight="bold",t.style.padding="10px 20px",t.style.background="rgba(0, 0, 0, 0.5)",t.style.borderRadius="10px",t.style.border="2px solid #0088ff",t.textContent="OUT OF AMMO - FIND AMMO PACKS!",document.body.appendChild(t),setTimeout(()=>{t.parentNode&&document.body.removeChild(t)},2500)}}class vE{constructor(t,e,n){this.scene=t,this.audioManager=n,this.position=e.clone(),this.isActive=!0,this.rotationSpeed=.05,this.bounceSpeed=3,this.bounceHeight=.2,this.bounceTime=Math.random()*Math.PI*2,this.grenadeAmount=1,this.baseHeight=.3,this.createGrenadePack()}createGrenadePack(){this.group=new nn,this.group.position.copy(this.position),this.group.position.y=this.baseHeight,this.scene.add(this.group);const t=new Di(.25,8,8),e=new Lt({color:2236962}),n=new bt(t,e);this.group.add(n);const s=new Ui(.08,.08,.15,8),r=new Lt({color:16733440}),o=new bt(s,r);o.position.y=.25,this.group.add(o),this.light=new ii(16733440,.8,2),this.light.position.copy(this.position),this.light.position.y=this.baseHeight,this.scene.add(this.light);const a=new Fi(.18,.4,4),c=new Lt({color:16733440,transparent:!0,opacity:.7});this.arrow=new bt(a,c),this.arrow.position.copy(this.position),this.arrow.position.y=this.baseHeight+.6,this.scene.add(this.arrow)}update(t){if(!this.isActive)return;this.group.rotation.y+=this.rotationSpeed,this.bounceTime+=t*this.bounceSpeed;const e=Math.sin(this.bounceTime)*this.bounceHeight;this.group.position.y=this.baseHeight+e,this.light.position.copy(this.position),this.light.position.y=this.baseHeight+e,this.arrow.position.copy(this.position),this.arrow.position.y=this.baseHeight+.6+e*.5,this.arrow.rotation.y+=.04,this.arrow.material.opacity=.4+Math.abs(Math.sin(this.bounceTime*2))*.6;const n=.8+Math.abs(Math.sin(this.bounceTime*2))*.5;this.light.intensity=n}pickup(){return this.isActive?(this.isActive=!1,this.scene.remove(this.group),this.scene.remove(this.light),this.scene.remove(this.arrow),this.group.traverse(t=>{t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()}),this.arrow.geometry.dispose(),this.arrow.material.dispose(),this.audioManager.playPickup(),this.grenadeAmount):0}getPosition(){return this.position}getBoundingRadius(){return .5}}class yE{constructor(t){this.scene=t,this.decals=[],this.maxDecals=80,this.createDecalTextures(),this.darkenColor=e=>{const n=new Kt(e);return n.r*=.1,n.g*=.1,n.b*=.1,n.getHex()},this.sharedMaterials={bullet:new Lt({map:this.decalTexture,transparent:!0,opacity:1,depthTest:!0,depthWrite:!1,color:this.darkenColor(ve.BULLET),side:He}),grenade:new Lt({map:this.decalTexture,transparent:!0,opacity:1,depthTest:!0,depthWrite:!1,color:this.darkenColor(10192652),side:He})},this.geometries={smallSplat:new Ai(.5,6),mediumSplat:new Ai(.7,6),largeSplat:new Ai(1,6),surface:new us(.5,.5)},this.startAutoCleanup()}createDecalTextures(){const t=document.createElement("canvas");t.width=64,t.height=64;const e=t.getContext("2d");e.fillStyle="#fff",e.beginPath(),e.arc(32,32,16,0,Math.PI*2),e.fill();for(let n=0;n<8;n++){const s=32+(Math.random()-.5)*40,r=32+(Math.random()-.5)*40,o=3+Math.random()*5;e.beginPath(),e.arc(s,r,o,0,Math.PI*2),e.fill()}this.decalTexture=new Jv(t),this.decalTexture.needsUpdate=!0}createSurfaceDecal(t,e,n,s=null){this.decals.length>=this.maxDecals&&this.removeOldestDecal();let r;s===10192652?r=this.sharedMaterials.grenade:s===ve.BULLET||s===null?r=this.sharedMaterials.bullet:r=new Lt({map:this.decalTexture,transparent:!0,opacity:.8,depthTest:!0,depthWrite:!1,color:this.darkenColor(s),side:He});const o=new bt(this.geometries.surface,r);return o.position.copy(t),e&&(o.lookAt(t.clone().add(e)),o.position.add(e.clone().multiplyScalar(.01))),o.rotateZ(Math.random()*Math.PI*2),this.scene.add(o),this.decals.push({mesh:o,timestamp:Date.now(),type:"surface",isCustomColor:s!==null&&s!==ve.BULLET&&s!==10192652}),o}createGroundSplat(t,e=.7,n=null){this.decals.length>=this.maxDecals&&this.removeOldestDecal();let s;e<=.5?s=this.geometries.smallSplat:e<=.8?s=this.geometries.mediumSplat:s=this.geometries.largeSplat;let r;n===10192652?r=this.sharedMaterials.grenade:n===ve.BULLET||n===null?r=this.sharedMaterials.bullet:r=new Lt({map:this.decalTexture,transparent:!0,opacity:.8,depthTest:!0,depthWrite:!1,color:this.darkenColor(n),side:He});const o=new bt(s,r),a=e/(s===this.geometries.smallSplat?.5:s===this.geometries.mediumSplat?.7:1);return o.scale.set(a,a,a),o.position.copy(t),o.position.y=.01,o.rotation.x=-Math.PI/2,o.rotation.z=Math.random()*Math.PI*2,this.scene.add(o),this.decals.push({mesh:o,timestamp:Date.now(),type:"ground",isCustomColor:n!==null&&n!==ve.BULLET&&n!==10192652}),o}removeOldestDecal(){if(this.decals.length===0)return;let t=0,e=1/0;for(let s=0;s<this.decals.length;s++)this.decals[s].timestamp<e&&(e=this.decals[s].timestamp,t=s);const n=this.decals[t];n&&n.mesh&&(this.scene.remove(n.mesh),n.isCustomColor&&n.mesh.material&&n.mesh.material.dispose(),this.decals.splice(t,1))}pruneDecals(){if(this.decals.length>this.maxDecals){const t=this.decals.length-this.maxDecals;this.decals.sort((e,n)=>e.timestamp-n.timestamp);for(let e=0;e<t;e++){const n=this.decals[e];n&&n.mesh&&(this.scene.remove(n.mesh),n.isCustomColor&&n.mesh.material&&n.mesh.material.dispose())}this.decals.splice(0,t)}}cleanUp(){for(const t of this.decals)t&&t.mesh&&(this.scene.remove(t.mesh),t.isCustomColor&&t.mesh.material&&t.mesh.material.dispose());this.decals=[];for(const t in this.geometries)this.geometries[t]&&this.geometries[t].dispose();for(const t in this.sharedMaterials)this.sharedMaterials[t]&&this.sharedMaterials[t].dispose();this.decalTexture&&this.decalTexture.dispose()}startAutoCleanup(){setInterval(()=>{const t=Date.now();this.decals=this.decals.filter(e=>{if(e.mesh&&e.mesh.material!==this.sharedMaterials.bullet){if(e.isCustomColor)return!0;if(e.mesh.material===this.sharedMaterials.grenade)return!0}return t-e.timestamp>1e4?(this.scene.remove(e.mesh),e.isCustomColor&&e.mesh.material&&e.mesh.material.dispose(),!1):!0})},500)}}class xE{constructor(){this.targetFPS=60,this.fixedDeltaTime=1/this.targetFPS,this.maxDeltaTime=this.fixedDeltaTime*3,this.timeScale=1,this.accumulator=0,this.lastTime=performance.now()/1e3}getDeltaTime(t){return Math.min(t,this.maxDeltaTime)*this.timeScale}getAutoDeltatime(){const t=performance.now()/1e3,e=t-this.lastTime;return this.lastTime=t,this.getDeltaTime(e)}getFixedDeltaTime(){return this.fixedDeltaTime*this.timeScale}updateFixedTimeStep(t){this.accumulator+=t;const e=Math.floor(this.accumulator/this.fixedDeltaTime);return this.accumulator-=e*this.fixedDeltaTime,e}setTimeScale(t){this.timeScale=Math.max(.1,Math.min(2,t))}reset(){this.accumulator=0,this.lastTime=performance.now()/1e3}}const ME=new xE;class SE{constructor(){this.scene=new Yv,this.camera=new en(40,window.innerWidth/window.innerHeight,.1,1e3),this.camera.name="camera",this.renderer=new rd({antialias:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setClearColor(2236962),this.renderer.shadowMap.enabled=!0,document.body.appendChild(this.renderer.domElement),this.renderer.setPixelRatio(window.devicePixelRatio),this.raycaster=new ad,this.clock=new sy,this.inputHandler=new tE,this.audioManager=new nE,this.collisionSystem=new mE,this.decalManager=new yE(this.scene),this.bulletManager=new pE(this.scene),this.bulletManager.setDecalManager(this.decalManager),this.collisionSystem.setBulletManager(this.bulletManager),this.debugMode=!1,this.bullets=[],this.grenades=[],this.obstacles=[],this.trees=[],this.createHUD(),this.setupCamera(),this.setupLights(),this.setupWorld(),this.player=new iE(this.scene,this.audioManager),this.collisionSystem.setPlayer(this.player),this.player.group.position.set(0,0,5),this.player.position.copy(this.player.group.position),this.createSpawnManager(),window.addEventListener("resize",this.onWindowResize.bind(this)),this.rightClickDebounce=!1,this.rightClickDebounceTime=800,this.lastGrenadeThrowTime=0,this.grenadeThrowMinInterval=1e3,window.addEventListener("contextmenu",t=>{if(t.preventDefault(),this.rightClickDebounce)return;const e=Date.now();e-this.lastGrenadeThrowTime<this.grenadeThrowMinInterval||(this.rightClickDebounce=!0,setTimeout(()=>{this.rightClickDebounce=!1},this.rightClickDebounceTime),this.player&&this.player.grenades>0&&this.createGrenade()&&(this.lastGrenadeThrowTime=e,this.player.lastGrenadeTime=e,this.player.body.scale.x=1.2,setTimeout(()=>{this.player.body.scale.x=1},100)))}),this.animate()}createHUD(){const t=document.createElement("link");t.href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap",t.rel="stylesheet",document.head.appendChild(t);const e=document.createElement("div");e.style.position="absolute",e.style.bottom="20px",e.style.left="0",e.style.width="100%",e.style.display="flex",e.style.justifyContent="center",e.style.color="#ffffff",e.style.fontFamily='"Press Start 2P", cursive',e.style.fontSize="12px",e.style.textShadow="2px 2px 0px #000000",e.style.zIndex="100",e.style.letterSpacing="1px";const n=document.createElement("div");n.style.display="flex",n.style.alignItems="center",n.style.gap="30px",n.style.padding="15px 25px",n.style.border="4px solid #ffffff",n.style.backgroundColor="rgba(0, 0, 0, 0.8)",n.style.imageRendering="pixelated";const s=document.createElement("div");s.style.display="flex",s.style.flexDirection="column",s.style.alignItems="center",s.style.minWidth="150px";const r=document.createElement("div");r.innerHTML="HEALTH",r.style.marginBottom="8px";const o=document.createElement("div");o.style.width="100%",o.style.height="12px",o.style.backgroundColor="#333333",o.style.border="2px solid #ffffff",o.style.padding="2px",o.style.imageRendering="pixelated";const a=document.createElement("div");a.style.height="100%",a.style.backgroundColor="#ff0000",a.style.width="100%",a.style.transition="width 0.3s",o.appendChild(a),s.appendChild(r),s.appendChild(o);const c=document.createElement("div");c.style.display="flex",c.style.flexDirection="column",c.style.alignItems="center",c.style.minWidth="150px";const l=document.createElement("div");l.innerHTML="AMMO",l.style.marginBottom="8px";const h=document.createElement("div");h.innerHTML="30",h.style.fontSize="16px",c.appendChild(l),c.appendChild(h);const u=document.createElement("div");u.style.display="flex",u.style.flexDirection="column",u.style.alignItems="center",u.style.minWidth="150px";const d=document.createElement("div");d.innerHTML="GRENADES",d.style.marginBottom="8px";const m=document.createElement("div");m.style.display="flex",m.style.gap="8px",m.style.justifyContent="center";for(let f=0;f<3;f++){const x=document.createElement("div");x.style.width="12px",x.style.height="12px",x.style.backgroundColor="#ff5500",x.style.border="2px solid #ffffff",x.style.imageRendering="pixelated",m.appendChild(x)}u.appendChild(d),u.appendChild(m);const g=document.createElement("div");g.style.display="flex",g.style.flexDirection="column",g.style.alignItems="center",g.style.minWidth="150px";const _=document.createElement("div");_.innerText="WAVE 1",_.style.marginBottom="8px";const p=document.createElement("div");p.innerText="ENEMIES: 0/8",p.style.fontSize="10px",g.appendChild(_),g.appendChild(p),n.appendChild(s),n.appendChild(c),n.appendChild(u),n.appendChild(g),e.appendChild(n),document.body.appendChild(e),this.hudContainer=e,this.healthBar=a,this.ammoText=h,this.grenadeCount=m,this.waveText=_,this.enemyText=p,this.updateHUD()}updateHUD(){if(this.player){const t=this.player.currentHealth/this.player.maxHealth*100;if(this.healthBar.style.width=`${t}%`,t<20?(this.healthBar.style.backgroundColor="#ff0000",this.healthBar.style.boxShadow="0 0 8px #ff0000"):t<50?(this.healthBar.style.backgroundColor="#ff7700",this.healthBar.style.boxShadow="0 0 5px #ff7700"):(this.healthBar.style.backgroundColor="#ff3333",this.healthBar.style.boxShadow="0 0 5px #ff5555"),this.player.isReloading)this.ammoText.textContent="RELOADING",this.ammoText.style.color="#ffcc00";else if(this.player.ammo<=0){if(this.ammoText.textContent="NO AMMO",this.ammoText.style.color="#ff3333",this.ammoText.style.textShadow="0 0 8px rgba(255, 0, 0, 0.8)",!this._ammoIconPulsing){this._ammoIconPulsing=!0;const n=this.ammoText.parentNode.querySelector(":first-child"),s=()=>{if(this.player.ammo>0){this._ammoIconPulsing=!1,n.style.animation="";return}if(n.style.animation="pulse 1s infinite",!document.querySelector("#ammo-pulse-style")){const r=document.createElement("style");r.id="ammo-pulse-style",r.textContent=`
                                @keyframes pulse {
                                    0% { transform: scale(1); opacity: 1; }
                                    50% { transform: scale(1.3); opacity: 0.7; }
                                    100% { transform: scale(1); opacity: 1; }
                                }
                            `,document.head.appendChild(r)}};s(),this._ammoIconInterval=setInterval(s,1e3)}}else if(this.ammoText.textContent=`${this.player.ammo}`,this.player.ammo<=5?(this.ammoText.style.color="#ff3333",this.ammoText.style.textShadow="0 0 8px rgba(255, 0, 0, 0.8)"):(this.ammoText.style.color="white",this.ammoText.style.textShadow="0 0 5px rgba(0, 136, 255, 0.8)"),this._ammoIconPulsing){this._ammoIconPulsing=!1,this._ammoIconInterval&&clearInterval(this._ammoIconInterval);const n=this.ammoText.parentNode.querySelector(":first-child");n&&(n.style.animation="")}const e=this.grenadeCount.children;for(let n=0;n<e.length;n++)n<this.player.grenades?(e[n].style.opacity="1",e[n].style.backgroundColor="#ff5500"):(e[n].style.opacity="0.3",e[n].style.backgroundColor="#555555")}this.spawnManager&&(this.waveText.innerText=`WAVE ${this.spawnManager.waveNumber}`,this.enemyText.innerText=`ENEMIES: ${this.spawnManager.enemyCount}/${this.spawnManager.maxEnemies}`)}setupCamera(){this.camera.position.set(0,14,14),this.camera.lookAt(0,0,0)}setupLights(){const t=new iy(16777215,1);this.scene.add(t);const e=new nu(16777215,1);e.position.set(10,20,10),e.lookAt(0,0,0),this.scene.add(e);const n=new nu(16777215,.8);n.position.set(-10,15,-10),n.lookAt(0,0,0),this.scene.add(n),this.playerSpotlight=new ty(16777215,2),this.playerSpotlight.angle=Math.PI/3,this.playerSpotlight.penumbra=.5,this.playerSpotlight.decay=1,this.playerSpotlight.distance=50,this.scene.add(this.playerSpotlight),this.renderer.setClearColor(2236962)}setupWorld(){this.ground=new sE(this.scene),this.createObstacles(),this.createTrees(),this.createRocks(),this.createFlowerPatches(),this.createStumps(),this.createSmallRocks()}createObstacles(){[new C(-8,0,5),new C(8,0,-5),new C(-5,0,-8),new C(7,0,7),new C(-10,0,-3),new C(3,0,10),new C(-12,0,-5),new C(12,0,4),new C(-3,0,12),new C(5,0,-12),new C(-15,0,3),new C(4,0,15),new C(-18,0,-12),new C(16,0,-14),new C(-2,0,-16),new C(14,0,18),new C(-20,0,10),new C(20,0,-8)].forEach(e=>{const n=1+Math.random()*2,s=.5+Math.random()*1,r=1+Math.random()*2,o=new rE(this.scene,e,n,s,r);this.obstacles.push(o),this.collisionSystem.addObstacle(o)})}createTrees(){[new C(-12,0,12),new C(12,0,-12),new C(-12,0,-12),new C(12,0,12),new C(0,0,14),new C(14,0,0),new C(0,0,-14),new C(-14,0,0)].forEach(e=>{const n=new oE(this.scene,e);this.trees.push(n)})}createRocks(){[new C(-20,0,15),new C(18,0,-18),new C(-15,0,-20),new C(25,0,22),new C(-22,0,5),new C(5,0,-25),new C(15,0,25),new C(-25,0,-10),new C(28,0,8),new C(-18,0,28),new C(12,0,-22),new C(-8,0,-28),new C(10,0,12),new C(-12,0,8),new C(8,0,-15),new C(-15,0,-7)].forEach(e=>{const n=.8+Math.random()*1.5,s=new lE(this.scene,e,n);this.obstacles.push(s),this.collisionSystem.addObstacle(s)})}createFlowerPatches(){[new C(-15,0,0),new C(12,0,8),new C(0,0,-18),new C(-8,0,15),new C(20,0,-5),new C(-18,0,-18)].forEach(e=>{const n=1+Math.random()*1,s=new hE(this.scene,e,n);this.obstacles.push(s),this.collisionSystem.addObstacle(s)})}createStumps(){[new C(-10,0,-15),new C(15,0,12),new C(8,0,-8),new C(-18,0,8),new C(25,0,0)].forEach(e=>{const n=1+Math.random(),s=new uE(this.scene,e,n);this.obstacles.push(s),this.collisionSystem.addObstacle(s)})}createSmallRocks(){[new C(5,0,18),new C(-22,0,-5),new C(18,0,-15),new C(-5,0,22),new C(12,0,22),new C(-15,0,-12),new C(0,0,-20),new C(-10,0,15),new C(20,0,0)].forEach(e=>{const n=.8+Math.random()*.7,s=new dE(this.scene,e,n);this.obstacles.push(s),this.collisionSystem.addObstacle(s)})}createBullet(){if(this.player.ammo<=0)return null;const t=this.player.getPosition().clone();t.add(this.player.getDirection().multiplyScalar(1.2)),t.y=Jt.PLAYER/2;const e=this.player.getDirection().clone();e.y=0,e.normalize();const n=this.bulletManager.createBullet(t,e,1);return this.collisionSystem.addBullet(n),this.player.ammo--,this.audioManager.playGunShot(),this.player.createMuzzleFlash(),n}createGrenade(){if(!this.player)return;const t=this.player.getPosition().clone();t.y=Jt.PLAYER/2;const e=this.player.getMouseWorldPosition();let n;e&&e.lengthSq()>0?(n=new C().subVectors(e,t).normalize(),n.y=0,n.normalize()):n=new C(Math.sin(this.player.rotation),0,Math.cos(this.player.rotation));const s=new fE(this.scene,t,n,this.audioManager,this.decalManager);return this.grenades.push(s),this.collisionSystem.addGrenade(s),s}machineGunFire(){if(!this.player||this.player.isReloading||this.player.ammo<=0)return!1;const t=this.player.getPosition().clone();t.y=Jt.PLAYER/2,t.add(this.player.getDirection().multiplyScalar(1.2));const e=this.player.getDirection().clone(),n=this.bulletManager.createBullet(t,e,1);return this.collisionSystem.addBullet(n),this.player.ammo--,this.player.playShootSound(),this.player.showMuzzleFlash(),!0}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}updateCamera(){if(!this.player)return;const t=this.player.getPosition(),e=new C(0,25,25);this.camera.position.set(t.x+e.x,t.y+e.y,t.z+e.z),this.camera.lookAt(t.x,t.y,t.z),this.playerSpotlight&&(this.playerSpotlight.position.copy(this.camera.position),this.playerSpotlight.target.position.copy(t))}animate(){requestAnimationFrame(this.animate.bind(this));const t=ME.getAutoDeltatime();if(this.player){if(this.player.update(t,this.inputHandler,this.raycaster,this.camera),this.inputHandler.keys.shoot&&!this.player.isReloading&&this.player.ammo>0){const e=Date.now();e-this.player.lastShotTime>=50&&(this.machineGunFire(),this.player.lastShotTime=e)}this.inputHandler.keys.grenade&&Date.now()-this.player.lastGrenadeTime>this.player.grenadeRate&&this.player.grenades>0&&this.player.throwGrenade()&&(this.createGrenade(),this.inputHandler.keys.grenade=!1)}this.spawnManager.update(this.player,t),this.bulletManager.update(t),this.bullets.forEach(e=>{(e.constructor.name!=="OptimizedBullet"||!e.useInstance)&&e.update(t)}),this.grenades.forEach(e=>e.update(t)),this.spawnManager.ammoPickups&&this.spawnManager.ammoPickups.forEach(e=>{e&&typeof e.update=="function"&&e.update(t)}),this.spawnManager.grenadePickups&&this.spawnManager.grenadePickups.forEach(e=>{e&&typeof e.update=="function"&&e.update(t)}),this.spawnManager.energyPickups&&this.spawnManager.energyPickups.forEach(e=>{e&&typeof e.update=="function"&&e.update(t)}),this.collisionSystem.update(),this.disableCameraUpdate||this.updateCamera(),this.updateHUD(),this.renderer.render(this.scene,this.camera)}createSpawnManager(){this.player&&(this.spawnManager=new _E(this.scene,this.player,this.collisionSystem,this.audioManager,this.decalManager))}}window.addEventListener("DOMContentLoaded",()=>{const i=document.createElement("link");i.href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap",i.rel="stylesheet",document.head.appendChild(i);const t=document.createElement("div");t.style.position="fixed",t.style.top="0",t.style.left="0",t.style.width="100%",t.style.height="100%",t.style.backgroundColor="#222222",t.style.display="flex",t.style.flexDirection="column",t.style.alignItems="center",t.style.justifyContent="center",t.style.zIndex="1000",t.style.cursor="default",t.style.fontFamily='"Press Start 2P", cursive';const e=document.createElement("div");e.textContent="PIXEL HELL",e.style.color="#ffffff",e.style.fontSize="48px",e.style.marginBottom="50px",e.style.textShadow="4px 4px 0px #000000",t.appendChild(e);const n=document.createElement("button");n.textContent="START GAME",n.style.fontSize="16px",n.style.padding="20px 40px",n.style.backgroundColor="#00ff00",n.style.color="#000000",n.style.border="4px solid #ffffff",n.style.cursor="pointer",n.style.imageRendering="pixelated",n.style.textTransform="uppercase",n.style.letterSpacing="2px",n.style.boxShadow="4px 4px 0px #000000",n.style.transition="transform 0.1s, box-shadow 0.1s",n.onmouseover=()=>{n.style.backgroundColor="#00dd00"},n.onmouseout=()=>{n.style.backgroundColor="#00ff00",n.style.transform="translate(0, 0)",n.style.boxShadow="4px 4px 0px #000000"},n.onmousedown=()=>{n.style.transform="translate(4px, 4px)",n.style.boxShadow="0px 0px 0px #000000"},n.onmouseup=()=>{n.style.transform="translate(0, 0)",n.style.boxShadow="4px 4px 0px #000000"},t.appendChild(n),document.body.appendChild(t),n.addEventListener("click",async()=>{try{await Rw(),document.body.removeChild(t),window.gameInstance=new SE;const s=document.createElement("div");s.innerHTML=`
                <div style="text-align: center; color: white; font-family: 'Press Start 2P'; font-size: 12px; 
                     background-color: rgba(0,0,0,0.8); padding: 15px; border: 2px solid #ffffff;">
                    <p>WASD = MOVE</p>
                    <p>MOUSE = AIM</p>
                    <p>CLICK = SHOOT</p>
                    <p>RIGHT CLICK = GRENADE</p>
                </div>
            `,s.style.position="absolute",s.style.bottom="100px",s.style.left="50%",s.style.transform="translateX(-50%)",s.style.opacity="1",s.style.transition="opacity 1s ease-in-out",s.style.zIndex="2000",document.body.appendChild(s),setTimeout(()=>{s.style.opacity="0",setTimeout(()=>{s.parentNode&&document.body.removeChild(s)},1e3)},4e3)}catch(s){console.error("Error starting game:",s)}})});
